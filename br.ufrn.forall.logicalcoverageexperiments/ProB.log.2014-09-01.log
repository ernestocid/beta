2014-09-01 14:09:29,773 3370 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:29,787 3384 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:29,794 3391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:29,794 3391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:30,529 4126 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:30,530 4127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:30,530 4127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:30,531 4128 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64617
2014-09-01 14:09:30,531 4128 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64617
2014-09-01 14:09:30,531 4128 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:30,532 4129 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9220
2014-09-01 14:09:30,532 4129 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9220
2014-09-01 14:09:30,533 4130 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64617 using key b3474cccfd0a467c
2014-09-01 14:09:30,534 4131 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:30,535 4132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:30,756 4353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:30,767 4364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,767 4364 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:30,768 4365 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:30,768 4365 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:30,794 4391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,794 4391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,798 4395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:30,798 4395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,799 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,799 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,800 4397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:30,800 4397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,800 4397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,801 4398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,801 4398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:30,802 4399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,802 4399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,802 4399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,803 4400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:30,804 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,804 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,804 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,805 4402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:30,805 4402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,806 4403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,806 4403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,807 4404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:30,807 4404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,807 4404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,808 4405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,808 4405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:30,809 4406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,809 4406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,810 4407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,810 4407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:30,811 4408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,811 4408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,812 4409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,812 4409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:30,813 4410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,813 4410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,813 4410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,814 4411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:30,815 4412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,815 4412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,815 4412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,816 4413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:30,816 4413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,817 4414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,817 4414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,818 4415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:30,818 4415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,818 4415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,819 4416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,819 4416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:30,820 4417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:30,820 4417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,821 4418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,839 4436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:30,840 4437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:30,844 4441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,844 4441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,857 4454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:30,858 4455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:30,859 4456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,860 4457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,864 4461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:30,865 4462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:30,865 4462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:30,865 4462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:30,865 4462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:30,866 4463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,866 4463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,879 4476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:30,884 4481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:30,884 4481 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:30,885 4482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:30,886 4483 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,886 4483 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,886 4483 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:30,886 4483 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:30,886 4483 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:30,896 4493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,897 4494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,916 4513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 14:09:30,935 4532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)')),[]))
2014-09-01 14:09:30,936 4533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:30,937 4534 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active & pp /: (ready \/ waiting))
2014-09-01 14:09:30,938 4535 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:30,938 4535 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:30,939 4536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:30,948 4545 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:30,965 4562 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:30,966 4563 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:30,966 4563 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:31,605 5202 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64619
2014-09-01 14:09:31,606 5203 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64619
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9224
2014-09-01 14:09:31,606 5203 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9224
2014-09-01 14:09:31,606 5203 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64619 using key b3474cccfd0a467c
2014-09-01 14:09:31,607 5204 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:31,608 5205 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:31,653 5250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:31,667 5264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,667 5264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,668 5265 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:31,668 5265 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:31,668 5265 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:31,668 5265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,669 5266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:31,669 5266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,670 5267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,670 5267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,670 5267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:31,671 5268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,671 5268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,672 5269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,672 5269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:31,672 5269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,673 5270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,673 5270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,674 5271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:31,674 5271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,674 5271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,675 5272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,675 5272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:31,676 5273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,677 5274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,678 5275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,679 5276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:31,680 5277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,680 5277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,680 5277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,681 5278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:31,682 5279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,682 5279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,682 5279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,683 5280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:31,685 5282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,686 5283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,686 5283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,687 5284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:31,688 5285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,688 5285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,688 5285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,689 5286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:31,690 5287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,690 5287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,691 5288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,692 5289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:31,693 5290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,693 5290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,694 5291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,695 5292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:31,696 5293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,696 5293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,696 5293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,697 5294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:31,698 5295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:31,698 5295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,698 5295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,699 5296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:31,700 5297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:31,702 5299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,703 5300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,705 5302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:31,706 5303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:31,707 5304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,708 5305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,709 5306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:31,711 5308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:31,712 5309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,712 5309 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:31,712 5309 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:31,713 5310 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:31,713 5310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,714 5311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:31,719 5316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:31,725 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,726 5323 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:31,727 5324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:31,728 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,740 5337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 14:09:31,743 5340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting')),[]))
2014-09-01 14:09:31,745 5342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:31,746 5343 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:31,746 5343 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:31,746 5343 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:31,746 5343 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:31,747 5344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:31,754 5351 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:31,761 5358 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:31,762 5359 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:31,762 5359 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:32,520 6117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64621
2014-09-01 14:09:32,521 6118 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64621
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9228
2014-09-01 14:09:32,521 6118 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9228
2014-09-01 14:09:32,521 6118 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64621 using key b3474cccfd0a467c
2014-09-01 14:09:32,522 6119 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:32,523 6120 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:32,558 6155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:32,570 6167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,570 6167 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:32,571 6168 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:32,571 6168 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:32,571 6168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,572 6169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,572 6169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:32,573 6170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,573 6170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,574 6171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,574 6171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:32,575 6172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,575 6172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,575 6172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,576 6173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:32,576 6173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,577 6174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,577 6174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,577 6174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:32,578 6175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,578 6175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,579 6176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,579 6176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:32,580 6177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,580 6177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,580 6177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,581 6178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:32,581 6178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,581 6178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,582 6179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,582 6179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:32,583 6180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,583 6180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,583 6180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,584 6181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:32,584 6181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,584 6181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,585 6182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,585 6182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:32,586 6183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,586 6183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,586 6183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,587 6184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:32,587 6184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,587 6184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,588 6185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,588 6185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:32,589 6186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,589 6186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,589 6186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,590 6187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:32,590 6187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,590 6187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,591 6188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,591 6188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:32,592 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:32,592 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,593 6190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,593 6190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:32,594 6191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:32,595 6192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,596 6193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,597 6194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:32,598 6195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:32,598 6195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,598 6195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,599 6196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:32,600 6197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:32,600 6197 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:32,600 6197 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:32,600 6197 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:32,601 6198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,601 6198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,602 6199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:32,605 6202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:32,605 6202 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,605 6202 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,605 6202 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:32,606 6203 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:32,607 6204 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:32,608 6205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,609 6206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,616 6213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 14:09:32,619 6216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting')),[]))
2014-09-01 14:09:32,619 6216 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:32,619 6216 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:32,620 6217 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:32,620 6217 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:32,620 6217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:32,622 6219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:32,626 6223 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:32,638 6235 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:32,643 6240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:32,644 6241 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:33,452 7049 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:33,453 7050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:33,453 7050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:33,453 7050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64623
2014-09-01 14:09:33,453 7050 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64623
2014-09-01 14:09:33,453 7050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:33,454 7051 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9234
2014-09-01 14:09:33,454 7051 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9234
2014-09-01 14:09:33,454 7051 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64623 using key b3474cccfd0a467c
2014-09-01 14:09:33,454 7051 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:33,455 7052 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:33,485 7082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:33,495 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,495 7092 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:33,495 7092 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:33,495 7092 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:33,495 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,496 7093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,496 7093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:33,497 7094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,497 7094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,497 7094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,498 7095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:33,498 7095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,499 7096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,499 7096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,499 7096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:33,500 7097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,500 7097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,500 7097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,501 7098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:33,501 7098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,502 7099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,502 7099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,502 7099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:33,503 7100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,503 7100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,503 7100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,504 7101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:33,504 7101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,505 7102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,505 7102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,505 7102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:33,506 7103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,506 7103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,506 7103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,507 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:33,507 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,507 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,508 7105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,508 7105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:33,509 7106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,509 7106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,509 7106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,510 7107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:33,510 7107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,510 7107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,511 7108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,511 7108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:33,512 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,512 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,512 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,513 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:33,513 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,513 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,514 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,514 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:33,515 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:33,515 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,515 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,516 7113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:33,517 7114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:33,518 7115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,518 7115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,520 7117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:33,521 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:33,521 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,521 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,522 7119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:33,523 7120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:33,523 7120 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:33,524 7121 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:33,524 7121 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:33,524 7121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,524 7121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,525 7122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:33,527 7124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:33,527 7124 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,528 7125 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:33,529 7126 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:33,531 7128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,531 7128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,538 7135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)'),ARes),true.

2014-09-01 14:09:33,540 7137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)')),[]))
2014-09-01 14:09:33,540 7137 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 14:09:33,541 7138 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:33,541 7138 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:33,541 7138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:33,541 7138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:33,546 7143 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:33,554 7151 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:33,556 7153 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:33,557 7154 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:34,265 7862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:34,265 7862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:34,265 7862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:34,265 7862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64625
2014-09-01 14:09:34,265 7862 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64625
2014-09-01 14:09:34,266 7863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:34,266 7863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9238
2014-09-01 14:09:34,266 7863 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9238
2014-09-01 14:09:34,266 7863 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64625 using key b3474cccfd0a467c
2014-09-01 14:09:34,267 7864 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:34,267 7864 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:34,295 7892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:34,304 7901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,304 7901 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:34,304 7901 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:34,304 7901 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:34,304 7901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,304 7901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,305 7902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:34,305 7902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,306 7903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,306 7903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,307 7904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:34,307 7904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,307 7904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,308 7905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,308 7905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:34,309 7906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,309 7906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,309 7906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,310 7907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:34,310 7907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,310 7907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,311 7908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,311 7908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:34,312 7909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,312 7909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,312 7909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,313 7910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:34,313 7910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,314 7911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,314 7911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,314 7911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:34,315 7912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,315 7912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,316 7913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,316 7913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:34,317 7914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,317 7914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,318 7915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,318 7915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:34,319 7916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,319 7916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,319 7916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,320 7917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:34,320 7917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,321 7918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,321 7918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,322 7919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:34,322 7919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,323 7920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,323 7920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,323 7920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:34,324 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,324 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,324 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,325 7922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:34,325 7922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:34,326 7923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,326 7923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,327 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:34,328 7925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:34,328 7925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,329 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,330 7927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:34,331 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:34,331 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,332 7929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,333 7930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:34,334 7931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:34,334 7931 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:34,334 7931 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:34,334 7931 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:34,335 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,335 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,336 7933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:34,338 7935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,338 7935 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:34,339 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:34,341 7938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,342 7939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,347 7944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active'),ARes),true.

2014-09-01 14:09:34,349 7946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active')),[]))
2014-09-01 14:09:34,349 7946 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:34,349 7946 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:34,349 7946 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:34,349 7946 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:34,349 7946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:34,350 7947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:34,354 7951 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:34,360 7957 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:34,367 7964 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:34,367 7964 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:35,101 8698 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:35,102 8699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:35,102 8699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:35,102 8699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64627
2014-09-01 14:09:35,102 8699 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64627
2014-09-01 14:09:35,103 8700 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:35,103 8700 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9242
2014-09-01 14:09:35,103 8700 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9242
2014-09-01 14:09:35,103 8700 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64627 using key b3474cccfd0a467c
2014-09-01 14:09:35,104 8701 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:35,105 8702 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:35,130 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:35,138 8735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,138 8735 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:35,138 8735 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:35,138 8735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,138 8735 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:35,139 8736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,139 8736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:35,140 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,140 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,140 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,141 8738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:35,141 8738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,142 8739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,142 8739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,142 8739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:35,143 8740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,143 8740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,143 8740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,144 8741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:35,144 8741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,145 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,145 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,146 8743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_130,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:35,146 8743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,147 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,147 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,148 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:35,148 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,148 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,149 8746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,149 8746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:35,150 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,150 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,150 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,151 8748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:35,151 8748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,152 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,152 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,152 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:35,153 8750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,153 8750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,154 8751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,154 8751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:35,155 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,155 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,155 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,156 8753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:35,156 8753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,157 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,157 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,158 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:35,158 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,158 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,159 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,159 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:35,160 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,160 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,161 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,161 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:35,162 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:35,164 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,164 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,165 8762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:35,166 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:35,166 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,166 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,167 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:35,168 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:35,168 8765 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:35,168 8765 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:35,169 8766 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:35,169 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,169 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,170 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:35,173 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,173 8770 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:35,174 8771 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:35,176 8773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,177 8774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,182 8779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 14:09:35,184 8781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)')),[]))
2014-09-01 14:09:35,184 8781 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 14:09:35,184 8781 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:35,185 8782 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:35,185 8782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,185 8782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,189 8786 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:35,198 8795 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:35,200 8797 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:35,200 8797 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:35,936 9533 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:35,937 9534 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:35,937 9534 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:35,937 9534 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64629
2014-09-01 14:09:35,937 9534 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64629
2014-09-01 14:09:35,938 9535 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:35,938 9535 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9246
2014-09-01 14:09:35,938 9535 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9246
2014-09-01 14:09:35,938 9535 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64629 using key b3474cccfd0a467c
2014-09-01 14:09:35,939 9536 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:35,940 9537 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:35,966 9563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:35,975 9572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,976 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:35,976 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:35,976 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:35,976 9573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,977 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,977 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:35,978 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,978 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,978 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,979 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:35,979 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,979 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,980 9577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,980 9577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:35,980 9577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,981 9578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,981 9578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,981 9578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:35,982 9579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,982 9579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,982 9579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,983 9580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_155,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:35,983 9580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,983 9580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,984 9581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,984 9581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_156,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:35,985 9582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,985 9582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,985 9582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,986 9583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:35,986 9583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,986 9583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,987 9584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,987 9584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:35,988 9585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,988 9585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,988 9585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,989 9586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:35,989 9586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,989 9586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,990 9587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,991 9588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:35,991 9588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,992 9589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,992 9589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,992 9589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:35,993 9590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,993 9590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,994 9591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,994 9591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:35,995 9592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,995 9592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,995 9592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,995 9592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:35,996 9593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:35,996 9593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,997 9594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:35,997 9594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:35,998 9595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:35,999 9596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:35,999 9596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,001 9598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:36,001 9598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:36,002 9599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,002 9599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,003 9600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:36,004 9601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:36,004 9601 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:36,004 9601 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:36,004 9601 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:36,004 9601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,005 9602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,005 9602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:36,007 9604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,008 9605 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,009 9606 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,009 9606 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,009 9606 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,009 9606 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,009 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,010 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,016 9613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID'),ARes),true.

2014-09-01 14:09:36,017 9614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID')),[]))
2014-09-01 14:09:36,017 9614 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:36,018 9615 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:36,018 9615 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:36,018 9615 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:36,018 9615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,018 9615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,066 9663 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:36,071 9668 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:36,080 9677 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:36,081 9678 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:36,854 10451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:36,855 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:36,855 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:36,855 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64631
2014-09-01 14:09:36,855 10452 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64631
2014-09-01 14:09:36,855 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:36,856 10453 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9250
2014-09-01 14:09:36,856 10453 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9250
2014-09-01 14:09:36,856 10453 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64631 using key b3474cccfd0a467c
2014-09-01 14:09:36,856 10453 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:36,858 10455 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:36,885 10482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:36,894 10491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,894 10491 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:36,894 10491 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:36,895 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,895 10492 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:36,895 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,895 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:36,896 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,896 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,896 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,897 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_177,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:36,897 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,898 10495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,898 10495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,898 10495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_178,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:36,899 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,899 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,899 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,900 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_179,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:36,900 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,900 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,901 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,901 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_180,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:36,902 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,902 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,903 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,903 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:36,903 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,904 10501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,904 10501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,905 10502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:36,905 10502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,906 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,906 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,906 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:36,907 10504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,907 10504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,907 10504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,908 10505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:36,908 10505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,908 10505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,909 10506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,909 10506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:36,910 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,910 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,910 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,911 10508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:36,911 10508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,912 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,912 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,912 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:36,913 10510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,913 10510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,914 10511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,914 10511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:36,915 10512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:36,915 10512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,916 10513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,917 10514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:36,918 10515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:36,918 10515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,919 10516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,920 10517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:36,920 10517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:36,921 10518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,921 10518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,922 10519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:36,923 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:36,923 10520 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:36,923 10520 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:36,923 10520 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:36,923 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,923 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,924 10521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:36,926 10523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:36,926 10523 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,927 10524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,928 10525 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,928 10525 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,928 10525 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:36,928 10525 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:36,928 10525 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:36,928 10525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,929 10526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,935 10532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 14:09:36,937 10534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 14:09:36,937 10534 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 14:09:36,938 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:36,938 10535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:36,938 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:36,938 10535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:36,942 10539 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:36,950 10547 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:36,954 10551 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:36,955 10552 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:37,654 11251 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:37,655 11252 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:37,655 11252 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:37,656 11253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64633
2014-09-01 14:09:37,656 11253 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64633
2014-09-01 14:09:37,656 11253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:37,656 11253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9254
2014-09-01 14:09:37,656 11253 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9254
2014-09-01 14:09:37,657 11254 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64633 using key b3474cccfd0a467c
2014-09-01 14:09:37,657 11254 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:37,658 11255 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:37,682 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:37,693 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,693 11290 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:37,693 11290 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:37,693 11290 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:37,693 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,694 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,694 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:37,694 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,695 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,695 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,695 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_202,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:37,696 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,696 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,697 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,697 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_203,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:37,697 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,698 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,698 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,698 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_204,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:37,699 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,699 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,700 11297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,700 11297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_205,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:37,701 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,701 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,701 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,702 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_206,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:37,702 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,703 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,703 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,703 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_207,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:37,704 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,704 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,705 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,705 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_208,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:37,706 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,706 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,707 11304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,707 11304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:37,708 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,708 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,709 11306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,709 11306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:37,710 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,710 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,710 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,710 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:37,711 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,711 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,712 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,712 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:37,712 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,713 11310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,713 11310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,713 11310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:37,714 11311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:37,714 11311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,715 11312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,716 11313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:37,717 11314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:37,717 11314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,718 11315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,719 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:37,719 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:37,720 11317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,720 11317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,721 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:37,722 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:37,722 11319 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:37,722 11319 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:37,722 11319 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:37,722 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,722 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,723 11320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:37,725 11322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:37,725 11322 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:37,726 11323 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:37,727 11324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,727 11324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,731 11328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 14:09:37,733 11330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 14:09:37,733 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:37,734 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:37,734 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:37,734 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:37,734 11331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:37,734 11331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:37,738 11335 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:37,744 11341 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:37,753 11350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:37,753 11350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:38,503 12100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:38,504 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:38,504 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:38,504 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64635
2014-09-01 14:09:38,504 12101 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64635
2014-09-01 14:09:38,504 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:38,504 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9258
2014-09-01 14:09:38,505 12102 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9258
2014-09-01 14:09:38,505 12102 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64635 using key b3474cccfd0a467c
2014-09-01 14:09:38,505 12102 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:38,506 12103 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:38,529 12126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:38,539 12136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,539 12136 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:38,539 12136 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:38,539 12136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,539 12136 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:38,540 12137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,540 12137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_226,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:38,541 12138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,541 12138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,541 12138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,541 12138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_227,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:38,542 12139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,542 12139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,542 12139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,543 12140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_228,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:38,543 12140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,544 12141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,544 12141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,544 12141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_229,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:38,545 12142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,545 12142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,545 12142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,546 12143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_230,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:38,546 12143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,546 12143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,547 12144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,547 12144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_231,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:38,548 12145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,548 12145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,549 12146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,549 12146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_232,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:38,549 12146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,550 12147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,550 12147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,551 12148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_233,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:38,551 12148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,551 12148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,552 12149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,552 12149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_234,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:38,553 12150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,553 12150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,553 12150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,553 12150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:38,554 12151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,554 12151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,555 12152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,555 12152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:38,556 12153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,556 12153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,556 12153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,557 12154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:38,558 12155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,558 12155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,558 12155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,559 12156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:38,559 12156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:38,560 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,560 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,560 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:38,561 12158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:38,562 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,562 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,563 12160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:38,564 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:38,564 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,564 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,565 12162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:38,566 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:38,566 12163 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:38,566 12163 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:38,566 12163 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:38,567 12164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,567 12164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,568 12165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:38,571 12168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,571 12168 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:38,572 12169 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:38,572 12169 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:38,572 12169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,573 12170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,577 12174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 14:09:38,579 12176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 14:09:38,579 12176 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 14:09:38,579 12176 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:38,580 12177 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:38,580 12177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:38,580 12177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:38,584 12181 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:38,592 12189 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:38,598 12195 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:38,598 12195 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:39,459 13056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:39,459 13056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:39,459 13056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:39,459 13056 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64637
2014-09-01 14:09:39,459 13056 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64637
2014-09-01 14:09:39,460 13057 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:39,460 13057 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9262
2014-09-01 14:09:39,460 13057 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9262
2014-09-01 14:09:39,460 13057 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64637 using key b3474cccfd0a467c
2014-09-01 14:09:39,460 13057 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:39,462 13059 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:39,485 13082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:39,494 13091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,494 13091 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:39,494 13091 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:39,494 13091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,494 13091 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:39,495 13092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,495 13092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_251,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:39,496 13093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,496 13093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,496 13093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,497 13094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_252,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:39,497 13094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,497 13094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,498 13095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,498 13095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_253,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:39,498 13095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,499 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,499 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,499 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_254,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:39,500 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,500 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,501 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,501 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_255,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:39,501 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,502 13099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,502 13099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,503 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_256,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:39,503 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,503 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,504 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,504 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_257,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:39,504 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,504 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,505 13102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,505 13102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:39,506 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,506 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,506 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,506 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:39,507 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,507 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,507 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,508 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:39,508 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,508 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,509 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,509 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:39,509 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,510 13107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,510 13107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,510 13107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:39,511 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,511 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,512 13109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,512 13109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:39,513 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:39,513 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,513 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,514 13111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:39,515 13112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:39,515 13112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,516 13113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,517 13114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:39,517 13114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:39,518 13115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,518 13115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,519 13116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:39,520 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:39,520 13117 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:39,520 13117 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:39,520 13117 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:39,520 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,520 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,521 13118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:39,523 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:39,523 13120 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:39,524 13121 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:39,525 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,525 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,530 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 14:09:39,531 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 14:09:39,531 13128 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 14:09:39,532 13129 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:39,532 13129 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 14:09:39,532 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:39,532 13129 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:39,532 13129 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:39,532 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:39,538 13135 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:39,548 13145 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:39,573 13170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:39,574 13171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:40,431 14028 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:40,432 14029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:40,432 14029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:40,432 14029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64639
2014-09-01 14:09:40,432 14029 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64639
2014-09-01 14:09:40,432 14029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:40,432 14029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9266
2014-09-01 14:09:40,432 14029 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9266
2014-09-01 14:09:40,433 14030 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64639 using key b3474cccfd0a467c
2014-09-01 14:09:40,433 14030 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:40,434 14031 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:40,454 14051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:40,462 14059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,462 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:40,462 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:40,462 14059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,462 14059 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:40,462 14059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,463 14060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_276,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:40,463 14060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,463 14060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,464 14061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,464 14061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_277,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:40,465 14062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,465 14062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,465 14062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,466 14063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_278,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:40,466 14063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,466 14063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,467 14064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,467 14064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_279,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:40,468 14065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,468 14065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,468 14065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,469 14066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_280,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:40,469 14066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,469 14066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,470 14067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,470 14067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_281,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:40,470 14067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,470 14067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,471 14068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,471 14068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_282,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:40,472 14069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,472 14069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,473 14070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,473 14070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:40,474 14071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,474 14071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,474 14071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,475 14072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:40,475 14072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,475 14072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,476 14073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,476 14073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:40,477 14074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,477 14074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,477 14074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,478 14075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:40,479 14076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,479 14076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,479 14076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,480 14077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:40,481 14078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,481 14078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,481 14078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,482 14079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:40,482 14079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:40,482 14079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,483 14080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,483 14080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:40,484 14081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:40,484 14081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,485 14082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,486 14083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:40,486 14083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:40,487 14084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,487 14084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,488 14085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:40,489 14086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:40,489 14086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:40,489 14086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:40,489 14086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:40,489 14086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,490 14087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,490 14087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:40,493 14090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:40,493 14090 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,493 14090 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,493 14090 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,493 14090 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:40,494 14091 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:40,495 14092 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:40,495 14092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,496 14093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,503 14100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 14:09:40,505 14102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 14:09:40,505 14102 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ pp : PID)
2014-09-01 14:09:40,505 14102 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 2
2014-09-01 14:09:40,506 14103 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:40,506 14103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:40,506 14103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:40,510 14107 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:40,517 14114 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:40,524 14121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:40,525 14122 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64641
2014-09-01 14:09:41,173 14770 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64641
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9270
2014-09-01 14:09:41,173 14770 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9270
2014-09-01 14:09:41,173 14770 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64641 using key b3474cccfd0a467c
2014-09-01 14:09:41,174 14771 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:41,175 14772 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:41,197 14794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:41,206 14803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,206 14803 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:41,206 14803 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:41,206 14803 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:41,206 14803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,207 14804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,207 14804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_301,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:41,207 14804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,208 14805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,208 14805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,208 14805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_302,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:41,209 14806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,209 14806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,210 14807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,210 14807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_303,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:41,211 14808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,211 14808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,211 14808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,211 14808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_304,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:41,212 14809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,212 14809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,213 14810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,213 14810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:41,213 14810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,214 14811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,214 14811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,214 14811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:41,215 14812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,215 14812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,215 14812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,215 14812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:41,216 14813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,216 14813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,217 14814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,217 14814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:41,217 14814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,218 14815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,218 14815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,218 14815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:41,219 14816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,219 14816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,219 14816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,219 14816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:41,220 14817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,220 14817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,221 14818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,221 14818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:41,222 14819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,222 14819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,222 14819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,222 14819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:41,223 14820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,223 14820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,223 14820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,224 14821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:41,224 14821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,224 14821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,225 14822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,225 14822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:41,226 14823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:41,227 14824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,227 14824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,228 14825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:41,229 14826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:41,229 14826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,230 14827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,230 14827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:41,231 14828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:41,231 14828 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:41,231 14828 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:41,231 14828 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:41,232 14829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,232 14829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,232 14829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:41,235 14832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,235 14832 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,236 14833 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,236 14833 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,236 14833 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,236 14833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,236 14833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,242 14839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 14:09:41,244 14841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 14:09:41,244 14841 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:41,244 14841 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:41,245 14842 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:41,245 14842 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:41,245 14842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,245 14842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,248 14845 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:41,251 14848 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:41,252 14849 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:41,252 14849 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:41,923 15520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:41,923 15520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:41,923 15520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:41,923 15520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64643
2014-09-01 14:09:41,923 15520 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64643
2014-09-01 14:09:41,924 15521 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:41,924 15521 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9274
2014-09-01 14:09:41,924 15521 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9274
2014-09-01 14:09:41,924 15521 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64643 using key b3474cccfd0a467c
2014-09-01 14:09:41,924 15521 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:41,926 15523 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:41,944 15541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:41,953 15550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,953 15550 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:41,953 15550 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:41,953 15550 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:41,953 15550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,954 15551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,954 15551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_326,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:41,954 15551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,955 15552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,955 15552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,956 15553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_327,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:41,956 15553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,956 15553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,957 15554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,957 15554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_328,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:41,958 15555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,958 15555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,958 15555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,959 15556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_329,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:41,959 15556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,960 15557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,960 15557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,960 15557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:41,961 15558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,961 15558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,962 15559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,962 15559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:41,962 15559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,963 15560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,963 15560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,963 15560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:41,964 15561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,964 15561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,964 15561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,965 15562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:41,966 15563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,966 15563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,966 15563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,967 15564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:41,967 15564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,968 15565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,968 15565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,968 15565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:41,969 15566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,969 15566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,969 15566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,970 15567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:41,970 15567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,970 15567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,971 15568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,971 15568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:41,972 15569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,972 15569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,972 15569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,973 15570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:41,973 15570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:41,973 15570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,974 15571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,974 15571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:41,975 15572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:41,976 15573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,976 15573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,977 15574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:41,978 15575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:41,978 15575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,978 15575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,979 15576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:41,980 15577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:41,980 15577 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:41,980 15577 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:41,980 15577 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:41,980 15577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,981 15578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,981 15578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:41,984 15581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:41,984 15581 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:41,985 15582 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:41,986 15583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,987 15584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:41,994 15591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 14:09:41,998 15595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 14:09:41,998 15595 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 14:09:41,998 15595 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:41,998 15595 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:41,998 15595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:41,999 15596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,003 15600 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:42,009 15606 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:42,011 15608 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:42,011 15608 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:42,680 16277 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:42,680 16277 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:42,680 16277 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:42,680 16277 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64645
2014-09-01 14:09:42,680 16277 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64645
2014-09-01 14:09:42,680 16277 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:42,681 16278 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9278
2014-09-01 14:09:42,681 16278 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9278
2014-09-01 14:09:42,681 16278 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64645 using key b3474cccfd0a467c
2014-09-01 14:09:42,681 16278 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:42,682 16279 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:42,701 16298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:42,710 16307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,710 16307 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:42,710 16307 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:42,710 16307 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:42,710 16307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,711 16308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,711 16308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:42,711 16308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,712 16309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,712 16309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,712 16309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:42,713 16310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,713 16310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,713 16310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,714 16311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:42,714 16311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,714 16311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,715 16312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,715 16312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:42,716 16313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,716 16313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,716 16313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,716 16313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:42,717 16314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,717 16314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,718 16315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,718 16315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:42,720 16317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,720 16317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,721 16318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,721 16318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:42,722 16319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,722 16319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,723 16320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,723 16320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:42,724 16321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,724 16321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,724 16321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,724 16321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:42,725 16322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,725 16322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,726 16323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,726 16323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:42,726 16323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,727 16324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,727 16324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,727 16324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:42,728 16325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,728 16325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,729 16326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,729 16326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:42,730 16327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,730 16327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,730 16327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,731 16328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:42,732 16329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:42,732 16329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,732 16329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,733 16330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:42,734 16331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:42,735 16332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,735 16332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,736 16333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:42,737 16334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:42,737 16334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,738 16335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,739 16336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:42,740 16337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:42,740 16337 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:42,740 16337 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:42,740 16337 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:42,740 16337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,740 16337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,741 16338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:42,744 16341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:42,744 16341 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,744 16341 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,744 16341 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,744 16341 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:42,745 16342 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:42,746 16343 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:42,746 16343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,746 16343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,752 16349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 14:09:42,754 16351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 14:09:42,755 16352 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 14:09:42,755 16352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:42,755 16352 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 14:09:42,755 16352 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 14:09:42,756 16353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:42,760 16357 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:42,767 16364 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:42,769 16366 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:42,769 16366 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64647
2014-09-01 14:09:43,389 16986 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64647
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:43,389 16986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9282
2014-09-01 14:09:43,390 16987 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9282
2014-09-01 14:09:43,390 16987 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64647 using key b3474cccfd0a467c
2014-09-01 14:09:43,390 16987 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:43,391 16988 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:43,409 17006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:43,416 17013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,416 17013 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:43,416 17013 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:43,416 17013 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:43,416 17013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,417 17014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,417 17014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:43,417 17014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,418 17015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,418 17015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,418 17015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:43,419 17016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,419 17016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,419 17016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,420 17017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_378,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:43,420 17017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,421 17018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,421 17018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,421 17018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_379,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:43,422 17019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,422 17019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,422 17019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,423 17020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_380,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:43,423 17020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,423 17020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,424 17021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,424 17021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_381,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:43,425 17022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,425 17022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,426 17023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,426 17023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_382,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:43,427 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,427 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,427 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,427 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_383,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:43,428 17025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,428 17025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,428 17025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,429 17026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_384,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:43,429 17026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,429 17026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,430 17027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,430 17027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_385,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:43,431 17028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,431 17028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,431 17028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,432 17029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_386,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:43,432 17029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,432 17029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,433 17030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,433 17030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_387,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:43,433 17030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,434 17031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,434 17031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,434 17031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_388,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:43,435 17032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:43,435 17032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,435 17032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,436 17033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:43,437 17034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:43,437 17034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,437 17034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,439 17036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:43,439 17036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:43,439 17036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,440 17037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,440 17037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:43,441 17038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:43,441 17038 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:43,441 17038 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:43,441 17038 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:43,441 17038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,442 17039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,442 17039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:43,445 17042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:43,445 17042 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,446 17043 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,447 17044 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:43,447 17044 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:43,447 17044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,447 17044 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:43,448 17045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,457 17054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 14:09:43,460 17057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 14:09:43,460 17057 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:43,460 17057 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:43,460 17057 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:43,460 17057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:43,460 17057 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:43,460 17057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:43,463 17060 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 14:09:43,468 17065 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 14:09:43,469 17066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 14:09:43,469 17066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 14:09:44,179 17776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 14:09:44,180 17777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 14:09:44,180 17777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 14:09:44,180 17777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64649
2014-09-01 14:09:44,180 17777 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64649
2014-09-01 14:09:44,180 17777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 14:09:44,180 17777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9286
2014-09-01 14:09:44,181 17778 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9286
2014-09-01 14:09:44,181 17778 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64649 using key b3474cccfd0a467c
2014-09-01 14:09:44,181 17778 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 14:09:44,182 17779 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 14:09:44,199 17796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 14:09:44,206 17803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,206 17803 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 14:09:44,206 17803 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 14:09:44,206 17803 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 14:09:44,206 17803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,207 17804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,207 17804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 14:09:44,208 17805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,208 17805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,208 17805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,208 17805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 14:09:44,209 17806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,209 17806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,209 17806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,210 17807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 14:09:44,210 17807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,210 17807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,211 17808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,211 17808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_404,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 14:09:44,212 17809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,212 17809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,213 17810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,213 17810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_405,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 14:09:44,214 17811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,214 17811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,214 17811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,215 17812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_406,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 14:09:44,215 17812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,215 17812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,216 17813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,216 17813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_407,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 14:09:44,216 17813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,217 17814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,217 17814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,217 17814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_408,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 14:09:44,218 17815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,218 17815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,218 17815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,219 17816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_409,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 14:09:44,220 17817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,220 17817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,221 17818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,221 17818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_410,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 14:09:44,222 17819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,222 17819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,222 17819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,223 17820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_411,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 14:09:44,223 17820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,223 17820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,224 17821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,224 17821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_412,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 14:09:44,225 17822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,225 17822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,225 17822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,226 17823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_413,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 14:09:44,226 17823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 14:09:44,226 17823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,227 17824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,227 17824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 14:09:44,228 17825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:44,229 17826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,229 17826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,230 17827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:44,231 17828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 14:09:44,231 17828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,232 17829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,232 17829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 14:09:44,233 17830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 14:09:44,233 17830 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 14:09:44,233 17830 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 14:09:44,233 17830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,233 17830 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 14:09:44,234 17831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,234 17831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 14:09:44,237 17834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 14:09:44,237 17834 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,237 17834 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,237 17834 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,237 17834 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:44,237 17834 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 14:09:44,238 17835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,238 17835 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 14:09:44,239 17836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 14:09:44,244 17841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 14:09:44,247 17844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 14:09:44,248 17845 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 14:09:44,248 17845 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 14:09:44,248 17845 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 14:09:44,248 17845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 14:09:44,248 17845 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 14:09:44,249 17846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:04,627 4920 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:04,645 4938 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:04,664 4957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:04,664 4957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:05,334 5627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:05,334 5627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:05,334 5627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:05,334 5627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65050
2014-09-01 15:25:05,334 5627 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65050
2014-09-01 15:25:05,334 5627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:05,335 5628 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9453
2014-09-01 15:25:05,335 5628 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9453
2014-09-01 15:25:05,336 5629 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65050 using key 239cd2433d890a52
2014-09-01 15:25:05,336 5629 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:05,338 5631 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:05,553 5846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:05,561 5854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,561 5854 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:05,562 5855 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:05,562 5855 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:05,585 5878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,586 5879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,588 5881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:05,589 5882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,589 5882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,590 5883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,590 5883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:05,591 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,591 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,591 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,592 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:05,592 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,592 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,593 5886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,593 5886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:05,594 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,594 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,594 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,595 5888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:05,595 5888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,596 5889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,596 5889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,597 5890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:05,597 5890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,597 5890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,598 5891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,598 5891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:05,599 5892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,599 5892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,599 5892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,600 5893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:05,600 5893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,601 5894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,601 5894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,601 5894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:05,602 5895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,602 5895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,602 5895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,603 5896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:05,604 5897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,604 5897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,604 5897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,605 5898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:05,606 5899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,606 5899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,607 5900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,607 5900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:05,608 5901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,608 5901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,608 5901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,609 5902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:05,609 5902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:05,610 5903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,610 5903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,625 5918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:05,627 5920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:05,629 5922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,630 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,639 5932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:05,640 5933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:05,640 5933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,641 5934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,644 5937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:05,645 5938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:05,646 5939 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:05,646 5939 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:05,646 5939 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:05,646 5939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,647 5940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,660 5953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:05,664 5957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:05,667 5960 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,667 5960 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,667 5960 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:05,668 5961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,669 5962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,669 5962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:05,669 5962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:05,669 5962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:05,678 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,678 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,693 5986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)'),ARes),true.

2014-09-01 15:25:05,695 5988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)')),[]))
2014-09-01 15:25:05,695 5988 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:25:05,695 5988 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:25:05,696 5989 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:25:05,696 5989 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:25:05,696 5989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:05,697 5990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:05,702 5995 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:05,708 6001 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:05,709 6002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:05,710 6003 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:06,329 6622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:06,329 6622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:06,329 6622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:06,329 6622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65052
2014-09-01 15:25:06,329 6622 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65052
2014-09-01 15:25:06,330 6623 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:06,330 6623 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9457
2014-09-01 15:25:06,330 6623 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9457
2014-09-01 15:25:06,330 6623 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65052 using key 239cd2433d890a52
2014-09-01 15:25:06,330 6623 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:06,331 6624 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:06,372 6665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:06,380 6673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,380 6673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:06,380 6673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:06,381 6674 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:06,381 6674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,381 6674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,382 6675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:06,382 6675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,382 6675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,382 6675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,383 6676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:06,383 6676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,384 6677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,384 6677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,384 6677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:06,385 6678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,385 6678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,385 6678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,386 6679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:06,387 6680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,387 6680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,388 6681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,388 6681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:06,389 6682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,390 6683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,390 6683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,391 6684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:06,391 6684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,391 6684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,392 6685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,392 6685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:06,393 6686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,393 6686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,394 6687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,394 6687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:06,395 6688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,395 6688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,395 6688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,396 6689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:06,396 6689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,397 6690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,397 6690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,397 6690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:06,398 6691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,398 6691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,398 6691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,399 6692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:06,400 6693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,400 6693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,401 6694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,401 6694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:06,402 6695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,403 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,403 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,404 6697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:06,405 6698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:06,405 6698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,406 6699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,406 6699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:06,407 6700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:06,409 6702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,410 6703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,412 6705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:06,414 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:06,415 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,416 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,417 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:06,418 6711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:06,419 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,420 6713 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:06,420 6713 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:06,420 6713 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:06,421 6714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,422 6715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:06,426 6719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:06,426 6719 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,426 6719 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,426 6719 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,426 6719 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,427 6720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,428 6721 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:06,428 6721 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:06,428 6721 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:06,432 6725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,432 6725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,452 6745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting'),ARes),true.

2014-09-01 15:25:06,453 6746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting')),[]))
2014-09-01 15:25:06,453 6746 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : waiting
2014-09-01 15:25:06,454 6747 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:25:06,454 6747 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:25:06,454 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:06,454 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:06,460 6753 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:06,465 6758 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:06,466 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:06,466 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:07,126 7419 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:07,126 7419 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:07,126 7419 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:07,127 7420 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65054
2014-09-01 15:25:07,127 7420 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65054
2014-09-01 15:25:07,127 7420 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:07,127 7420 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9461
2014-09-01 15:25:07,127 7420 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9461
2014-09-01 15:25:07,127 7420 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65054 using key 239cd2433d890a52
2014-09-01 15:25:07,128 7421 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:07,133 7426 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:07,164 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:07,175 7468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,175 7468 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:07,175 7468 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:07,175 7468 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:07,175 7468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,176 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,176 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:07,176 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,177 7470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,177 7470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,177 7470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:07,178 7471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,178 7471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,178 7471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,179 7472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:07,179 7472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,180 7473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,180 7473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,181 7474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:07,181 7474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,181 7474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,182 7475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,182 7475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:07,183 7476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,183 7476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,183 7476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,184 7477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:07,184 7477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,184 7477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,185 7478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,185 7478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:07,186 7479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,186 7479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,186 7479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,187 7480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:07,187 7480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,187 7480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,188 7481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,188 7481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:07,189 7482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,189 7482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,189 7482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,190 7483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:07,190 7483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,191 7484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,191 7484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,192 7485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:07,192 7485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,193 7486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,193 7486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,193 7486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:07,194 7487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,194 7487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,194 7487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,195 7488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:07,195 7488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,196 7489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,196 7489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,197 7490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:07,197 7490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:07,199 7492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,199 7492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,200 7493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:07,201 7494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:07,201 7494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,202 7495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,203 7496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:07,204 7497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:07,204 7497 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:07,204 7497 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:07,204 7497 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:07,204 7497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,205 7498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,206 7499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:07,209 7502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:07,209 7502 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,210 7503 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,211 7504 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,212 7505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,213 7506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,219 7512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)'),ARes),true.

2014-09-01 15:25:07,222 7515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)')),[]))
2014-09-01 15:25:07,222 7515 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:25:07,222 7515 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:25:07,222 7515 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:25:07,222 7515 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:25:07,223 7516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,223 7516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,228 7521 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:07,234 7527 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:07,235 7528 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:07,236 7529 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:07,870 8163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:07,870 8163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:07,871 8164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:07,871 8164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65056
2014-09-01 15:25:07,871 8164 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65056
2014-09-01 15:25:07,871 8164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:07,871 8164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9465
2014-09-01 15:25:07,872 8165 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9465
2014-09-01 15:25:07,872 8165 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65056 using key 239cd2433d890a52
2014-09-01 15:25:07,872 8165 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:07,875 8168 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:07,914 8207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:07,926 8219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,926 8219 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:07,926 8219 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:07,926 8219 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:07,926 8219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,927 8220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,927 8220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:07,928 8221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,928 8221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,928 8221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,929 8222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:07,930 8223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,930 8223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,930 8223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,931 8224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:07,931 8224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,931 8224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,932 8225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,932 8225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:07,933 8226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,933 8226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,934 8227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,934 8227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:07,935 8228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,935 8228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,936 8229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,936 8229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:07,937 8230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,937 8230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,938 8231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,938 8231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:07,939 8232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,939 8232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,940 8233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,940 8233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:07,941 8234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,941 8234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,941 8234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,942 8235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:07,943 8236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,943 8236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,943 8236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,944 8237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:07,945 8238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,945 8238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,945 8238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,946 8239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:07,946 8239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,946 8239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,947 8240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,947 8240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:07,948 8241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,948 8241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,948 8241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,949 8242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:07,949 8242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:07,950 8243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,950 8243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,950 8243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:07,951 8244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:07,953 8246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,954 8247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,957 8250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:07,958 8251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:07,958 8251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,959 8252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,960 8253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:07,961 8254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:07,962 8255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,962 8255 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:07,962 8255 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:07,963 8256 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:07,963 8256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,964 8257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:07,967 8260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,968 8261 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:07,969 8262 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:07,971 8264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,972 8265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:07,980 8273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting'),ARes),true.

2014-09-01 15:25:07,983 8276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting')),[]))
2014-09-01 15:25:07,983 8276 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : waiting
2014-09-01 15:25:07,983 8276 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:25:07,984 8277 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:25:07,984 8277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:07,984 8277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,045 8338 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:08,053 8346 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:08,054 8347 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:08,054 8347 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:08,690 8983 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:08,690 8983 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:08,690 8983 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:08,691 8984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65058
2014-09-01 15:25:08,691 8984 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65058
2014-09-01 15:25:08,691 8984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:08,691 8984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9469
2014-09-01 15:25:08,691 8984 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9469
2014-09-01 15:25:08,691 8984 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65058 using key 239cd2433d890a52
2014-09-01 15:25:08,692 8985 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:08,693 8986 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:08,718 9011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:08,726 9019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,726 9019 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:08,726 9019 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:08,726 9019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,726 9019 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:08,726 9019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,727 9020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:08,728 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,728 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,728 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,729 9022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:08,729 9022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,729 9022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,730 9023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,730 9023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:08,730 9023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,731 9024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,731 9024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,732 9025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:08,732 9025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,732 9025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,733 9026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,733 9026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:08,734 9027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,734 9027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,735 9028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,735 9028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:08,736 9029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,736 9029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,737 9030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,737 9030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:08,738 9031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,738 9031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,738 9031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,739 9032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:08,739 9032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,739 9032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,740 9033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,740 9033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:08,741 9034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,741 9034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,741 9034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,742 9035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:08,742 9035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,743 9036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,743 9036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,744 9037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:08,744 9037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,745 9038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,745 9038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,746 9039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:08,746 9039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,747 9040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,747 9040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,748 9041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:08,748 9041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:08,748 9041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,749 9042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,750 9043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:08,750 9043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:08,751 9044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,752 9045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,753 9046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:08,753 9046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:08,754 9047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,754 9047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,755 9048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:08,756 9049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:08,756 9049 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:08,756 9049 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:08,756 9049 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:08,756 9049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,756 9049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,757 9050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:08,760 9053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,760 9053 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:08,761 9054 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:08,763 9056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,764 9057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,769 9062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)'),ARes),true.

2014-09-01 15:25:08,771 9064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)')),[]))
2014-09-01 15:25:08,771 9064 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:25:08,772 9065 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:25:08,772 9065 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:25:08,772 9065 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:25:08,772 9065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:08,773 9066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:08,777 9070 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:08,781 9074 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:08,782 9075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:08,782 9075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65060
2014-09-01 15:25:09,360 9653 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65060
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:09,360 9653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9473
2014-09-01 15:25:09,361 9654 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9473
2014-09-01 15:25:09,361 9654 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65060 using key 239cd2433d890a52
2014-09-01 15:25:09,361 9654 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:09,362 9655 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:09,385 9678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:09,394 9687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,394 9687 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:09,394 9687 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:09,394 9687 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:09,394 9687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,395 9688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,395 9688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:09,396 9689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,396 9689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,396 9689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,397 9690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:09,397 9690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,398 9691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,398 9691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,398 9691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:09,399 9692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,399 9692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,400 9693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,400 9693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:09,401 9694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,401 9694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,401 9694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,402 9695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_130,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:09,402 9695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,402 9695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,403 9696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,403 9696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:09,404 9697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,404 9697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,404 9697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,405 9698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:09,405 9698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,405 9698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,406 9699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,406 9699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:09,407 9700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,407 9700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,408 9701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,408 9701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:09,409 9702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,409 9702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,409 9702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,410 9703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:09,410 9703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,411 9704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,411 9704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,412 9705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:09,413 9706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,413 9706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,413 9706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,414 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:09,414 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,414 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,415 9708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,415 9708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:09,416 9709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:09,416 9709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,416 9709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,417 9710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:09,418 9711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:09,419 9712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,419 9712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,421 9714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:09,422 9715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:09,422 9715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,423 9716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,424 9717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:09,424 9717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:09,425 9718 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:09,425 9718 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:09,425 9718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,425 9718 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:09,426 9719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,427 9720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:09,431 9724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:09,431 9724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:09,432 9725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,432 9725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,432 9725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:09,432 9725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:09,432 9725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:09,434 9727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,435 9728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,441 9734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting'),ARes),true.

2014-09-01 15:25:09,443 9736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting')),[]))
2014-09-01 15:25:09,443 9736 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : waiting
2014-09-01 15:25:09,443 9736 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:25:09,443 9736 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:25:09,444 9737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:09,444 9737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:09,448 9741 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:09,455 9748 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:09,455 9748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:09,456 9749 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:10,084 10377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:10,085 10378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:10,085 10378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:10,085 10378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65063
2014-09-01 15:25:10,086 10379 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65063
2014-09-01 15:25:10,086 10379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:10,086 10379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9477
2014-09-01 15:25:10,086 10379 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9477
2014-09-01 15:25:10,086 10379 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65063 using key 239cd2433d890a52
2014-09-01 15:25:10,087 10380 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:10,088 10381 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:10,108 10401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:10,116 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,116 10409 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:10,117 10410 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:10,117 10410 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:10,117 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,117 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,118 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:10,118 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,119 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,119 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,119 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:10,120 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,120 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,120 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,121 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:10,121 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,121 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,122 10415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,122 10415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:10,123 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,123 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,123 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,124 10417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_155,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:10,124 10417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,124 10417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,125 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,125 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_156,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:10,126 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,126 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,126 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,127 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:10,127 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,127 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,128 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,128 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:10,129 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,129 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,129 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,130 10423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:10,131 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,131 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,132 10425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,132 10425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:10,133 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,133 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,133 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,134 10427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:10,134 10427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,135 10428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,136 10429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,137 10430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:10,138 10431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,138 10431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,138 10431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,139 10432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:10,139 10432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,140 10433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,140 10433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,141 10434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:10,142 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:10,143 10436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,143 10436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,144 10437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:10,145 10438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:10,145 10438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,146 10439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,147 10440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:10,148 10441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:10,148 10441 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:10,148 10441 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:10,148 10441 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:10,148 10441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,149 10442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,149 10442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:10,153 10446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:10,153 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,153 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,153 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,153 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:10,153 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:10,154 10447 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:10,155 10448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,156 10449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,164 10457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)'),ARes),true.

2014-09-01 15:25:10,167 10460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : waiting)')),[]))
2014-09-01 15:25:10,167 10460 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:25:10,168 10461 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:25:10,168 10461 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:25:10,168 10461 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:25:10,168 10461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,168 10461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,172 10465 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:25:10,177 10470 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:25:10,179 10472 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:25:10,180 10473 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:25:10,948 11241 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65065
2014-09-01 15:25:10,949 11242 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65065
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9481
2014-09-01 15:25:10,949 11242 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9481
2014-09-01 15:25:10,949 11242 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65065 using key 239cd2433d890a52
2014-09-01 15:25:10,950 11243 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:25:10,951 11244 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:25:10,975 11268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:25:10,982 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,982 11275 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:25:10,983 11276 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:25:10,983 11276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,983 11276 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:25:10,983 11276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,983 11276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:25:10,984 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,984 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,984 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,985 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_177,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:25:10,985 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,985 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,986 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,986 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_178,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:25:10,986 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,987 11280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,987 11280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,987 11280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_179,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:25:10,988 11281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,988 11281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,989 11282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,989 11282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_180,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:25:10,990 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,990 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,991 11284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,991 11284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:25:10,992 11285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,992 11285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,992 11285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,993 11286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:25:10,993 11286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,993 11286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,994 11287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,994 11287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:25:10,995 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,995 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,996 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,996 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:25:10,997 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:10,997 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:10,998 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:10,998 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:25:10,999 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:11,000 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,000 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,000 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:25:11,001 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:11,001 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,002 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,002 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:25:11,003 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:11,003 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,003 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,004 11297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:25:11,004 11297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:25:11,005 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,005 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,006 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:25:11,006 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:11,007 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,007 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,008 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:11,009 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:25:11,009 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,010 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,010 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:25:11,011 11304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:25:11,011 11304 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:25:11,011 11304 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:25:11,012 11305 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:25:11,012 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,012 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,012 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:25:11,015 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:25:11,015 11308 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:11,016 11309 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:11,017 11310 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,017 11310 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,017 11310 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:25:11,017 11310 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:25:11,017 11310 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:25:11,018 11311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,018 11311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:25:11,023 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting'),ARes),true.

2014-09-01 15:25:11,025 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : waiting')),[]))
2014-09-01 15:25:11,025 11318 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : waiting
2014-09-01 15:25:11,025 11318 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:25:11,025 11318 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:25:11,025 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:25:11,026 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:13,362 7912 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:13,379 7929 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:13,405 7955 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:13,405 7955 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:14,103 8653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:14,103 8653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:14,103 8653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:14,103 8653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65087
2014-09-01 15:27:14,104 8654 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65087
2014-09-01 15:27:14,104 8654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:14,104 8654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9489
2014-09-01 15:27:14,104 8654 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9489
2014-09-01 15:27:14,105 8655 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65087 using key 91f332e33f60e355
2014-09-01 15:27:14,106 8656 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:14,107 8657 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:14,385 8935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:14,397 8947 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:14,397 8947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,398 8948 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:14,398 8948 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:14,428 8978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,429 8979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,431 8981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:14,432 8982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,432 8982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,433 8983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,433 8983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:14,434 8984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,436 8986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,436 8986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,437 8987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:14,438 8988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,438 8988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,439 8989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,439 8989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:14,440 8990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,441 8991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,441 8991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,442 8992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:14,443 8993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,444 8994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,444 8994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,445 8995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:14,447 8997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,459 9009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,460 9010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,461 9011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:14,462 9012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,462 9012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,463 9013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,464 9014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:14,465 9015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,465 9015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,466 9016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,467 9017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:14,468 9018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,468 9018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,469 9019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,470 9020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:14,471 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,471 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,473 9023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,474 9024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:14,485 9035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,485 9035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,491 9041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,492 9042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:14,495 9045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,496 9046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,498 9048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,501 9051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:14,505 9055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:14,505 9055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,506 9056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,538 9088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:14,543 9093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:14,547 9097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,548 9098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,562 9112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:14,583 9133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:14,586 9136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,587 9137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,592 9142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:14,593 9143 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:14,593 9143 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:14,593 9143 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:14,594 9144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:14,595 9145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,595 9145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,634 9184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:14,639 9189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,639 9189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:14,639 9189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,639 9189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,639 9189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:14,639 9189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,640 9190 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:14,641 9191 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:14,641 9191 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:14,662 9212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,665 9215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,696 9246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-01 15:27:14,699 9249 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-01 15:27:14,699 9249 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:27:14,700 9250 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-01 15:27:14,700 9250 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:27:14,699 9249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-01 15:27:14,701 9251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:14,702 9252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:14,710 9260 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:14,721 9271 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:14,726 9276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:14,726 9276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:15,729 10279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:15,729 10279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:15,729 10279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:15,730 10280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65109
2014-09-01 15:27:15,730 10280 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65109
2014-09-01 15:27:15,730 10280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:15,730 10280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9496
2014-09-01 15:27:15,730 10280 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9496
2014-09-01 15:27:15,730 10280 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65109 using key 91f332e33f60e355
2014-09-01 15:27:15,731 10281 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:15,732 10282 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:15,774 10324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:15,783 10333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,783 10333 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:15,784 10334 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:15,784 10334 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:15,784 10334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,784 10334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,785 10335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:15,785 10335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,785 10335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,786 10336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,787 10337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:15,787 10337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,788 10338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,788 10338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,789 10339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:15,789 10339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,790 10340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,790 10340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,791 10341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:15,791 10341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,792 10342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,792 10342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,793 10343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:15,794 10344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,794 10344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,795 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,795 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:15,796 10346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,796 10346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,797 10347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,797 10347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:15,798 10348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,798 10348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,799 10349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,800 10350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:15,801 10351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,801 10351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,802 10352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,802 10352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:15,803 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,803 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,803 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,804 10354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:15,804 10354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,805 10355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,805 10355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,806 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:15,807 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,807 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,808 10358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,809 10359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:15,810 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,810 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,810 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,811 10361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:15,812 10362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:15,813 10363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,813 10363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,814 10364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:15,815 10365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:15,817 10367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,818 10368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,821 10371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:15,824 10374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:15,825 10375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,828 10378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,830 10380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:15,833 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:15,834 10384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,834 10384 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:15,835 10385 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:15,835 10385 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:15,836 10386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,837 10387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:15,843 10393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:15,843 10393 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,843 10393 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,843 10393 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:15,844 10394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,845 10395 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,845 10395 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:15,845 10395 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:15,845 10395 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:15,849 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,850 10400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,859 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-01 15:27:15,860 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-01 15:27:15,860 10410 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:27:15,861 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:15,862 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:15,866 10416 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:15,873 10423 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:15,873 10423 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:15,874 10424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:16,918 11468 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:16,919 11469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:16,919 11469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:16,919 11469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65117
2014-09-01 15:27:16,919 11469 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65117
2014-09-01 15:27:16,919 11469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:16,919 11469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9501
2014-09-01 15:27:16,920 11470 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9501
2014-09-01 15:27:16,920 11470 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65117 using key 91f332e33f60e355
2014-09-01 15:27:16,920 11470 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:16,921 11471 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:16,957 11507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:16,967 11517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,967 11517 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:16,967 11517 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:16,968 11518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:16,968 11518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,968 11518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,969 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:16,969 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,969 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,970 11520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,970 11520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:16,970 11520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,971 11521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,971 11521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,972 11522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:16,973 11523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,973 11523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,974 11524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,974 11524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:16,975 11525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,976 11526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,976 11526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,977 11527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:16,978 11528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,978 11528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,978 11528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,979 11529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:16,980 11530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,980 11530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,980 11530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,981 11531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:16,981 11531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,981 11531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,982 11532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,982 11532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:16,983 11533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,983 11533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,983 11533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,984 11534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:16,984 11534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,984 11534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,985 11535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,985 11535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:16,986 11536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,986 11536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,987 11537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,987 11537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:16,988 11538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,988 11538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,988 11538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,989 11539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:16,989 11539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,989 11539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,990 11540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,990 11540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:16,991 11541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:16,991 11541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,991 11541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,992 11542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:16,993 11543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:16,994 11544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,994 11544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,996 11546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:16,996 11546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:16,997 11547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:16,997 11547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:16,998 11548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:16,999 11549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:16,999 11549 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:17,000 11550 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:17,000 11550 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:17,000 11550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,000 11550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,001 11551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:17,004 11554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,004 11554 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,005 11555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,006 11556 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,006 11556 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,008 11558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,008 11558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,015 11565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-01 15:27:17,017 11567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-01 15:27:17,017 11567 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-01 15:27:17,018 11568 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:27:17,018 11568 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-01 15:27:17,018 11568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,018 11568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,023 11573 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:17,029 11579 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:17,030 11580 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:17,030 11580 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:17,677 12227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:17,677 12227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:17,677 12227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:17,677 12227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65119
2014-09-01 15:27:17,678 12228 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65119
2014-09-01 15:27:17,678 12228 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:17,678 12228 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9505
2014-09-01 15:27:17,678 12228 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9505
2014-09-01 15:27:17,678 12228 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65119 using key 91f332e33f60e355
2014-09-01 15:27:17,679 12229 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:17,680 12230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:17,705 12255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:17,714 12264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,714 12264 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:17,714 12264 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:17,715 12265 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:17,715 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,715 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,715 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:17,716 12266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,716 12266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,717 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,717 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:17,717 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,718 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,718 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,718 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:17,719 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,719 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,720 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,720 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:17,721 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,721 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,721 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,722 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:17,722 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,723 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,723 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,724 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:17,724 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,724 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,725 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,725 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:17,726 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,726 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,726 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,727 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:17,727 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,727 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,728 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,728 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:17,729 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,729 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,729 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,730 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:17,731 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,731 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,731 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,732 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:17,732 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,733 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,733 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,733 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:17,734 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,734 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,735 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,735 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:17,736 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:17,736 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,736 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,737 12287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:17,738 12288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:17,739 12289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,739 12289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,740 12290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:17,741 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:17,741 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,741 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,743 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:17,743 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:17,743 12293 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:17,743 12293 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:17,744 12294 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:17,744 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,744 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,745 12295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:17,747 12297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:17,747 12297 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,748 12298 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:17,749 12299 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:17,749 12299 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,750 12300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,750 12300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,756 12306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-01 15:27:17,757 12307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-01 15:27:17,757 12307 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:17,758 12308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:17,758 12308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:17,764 12314 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:17,768 12318 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:17,769 12319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:17,769 12319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:18,451 13001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:18,459 13009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:18,460 13010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:18,460 13010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65122
2014-09-01 15:27:18,460 13010 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65122
2014-09-01 15:27:18,460 13010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:18,461 13011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9509
2014-09-01 15:27:18,461 13011 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9509
2014-09-01 15:27:18,461 13011 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65122 using key 91f332e33f60e355
2014-09-01 15:27:18,462 13012 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:18,463 13013 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:18,491 13041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:18,499 13049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,499 13049 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:18,499 13049 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:18,500 13050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,500 13050 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:18,500 13050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,500 13050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:18,501 13051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,501 13051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,501 13051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,502 13052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:18,502 13052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,503 13053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,503 13053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,503 13053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:18,504 13054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,505 13055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,505 13055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,506 13056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:18,506 13056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,506 13056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,507 13057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,507 13057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:18,508 13058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,508 13058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,508 13058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,509 13059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:18,510 13060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,510 13060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,510 13060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,511 13061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:18,511 13061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,511 13061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,512 13062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,512 13062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:18,513 13063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,513 13063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,514 13064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,514 13064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:18,515 13065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,515 13065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,515 13065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,516 13066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:18,517 13067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,517 13067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,517 13067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,518 13068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:18,519 13069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,519 13069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,520 13070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,520 13070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:18,521 13071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,521 13071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,521 13071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,522 13072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:18,522 13072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:18,523 13073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,523 13073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,524 13074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:18,525 13075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:18,526 13076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,526 13076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,527 13077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:18,528 13078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:18,528 13078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,528 13078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,529 13079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:18,530 13080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:18,530 13080 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:18,530 13080 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:18,530 13080 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:18,531 13081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,531 13081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,532 13082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:18,535 13085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,535 13085 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:18,536 13086 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:18,538 13088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,538 13088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,543 13093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-01 15:27:18,545 13095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-01 15:27:18,545 13095 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-01 15:27:18,546 13096 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:27:18,546 13096 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-01 15:27:18,546 13096 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:27:18,546 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:18,546 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:18,550 13100 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:18,554 13104 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:18,555 13105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:18,555 13105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:19,215 13765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:19,215 13765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:19,215 13765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:19,215 13765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65124
2014-09-01 15:27:19,216 13766 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65124
2014-09-01 15:27:19,216 13766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:19,216 13766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9513
2014-09-01 15:27:19,216 13766 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9513
2014-09-01 15:27:19,216 13766 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65124 using key 91f332e33f60e355
2014-09-01 15:27:19,217 13767 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:19,218 13768 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:19,241 13791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:19,248 13798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,249 13799 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:19,249 13799 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:19,249 13799 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:19,249 13799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,250 13800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,250 13800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:19,251 13801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,251 13801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,251 13801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,252 13802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:19,252 13802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,252 13802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,253 13803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,253 13803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:19,254 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,254 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,254 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,255 13805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:19,256 13806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,256 13806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,256 13806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,257 13807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_130,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:19,257 13807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,258 13808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,258 13808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,259 13809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:19,259 13809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,260 13810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,260 13810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,261 13811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:19,262 13812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,262 13812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,262 13812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,263 13813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:19,263 13813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,264 13814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,264 13814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,265 13815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:19,265 13815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,266 13816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,266 13816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,266 13816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:19,267 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,267 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,267 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,268 13818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:19,269 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,269 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,269 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,270 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:19,270 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,270 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,271 13821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,271 13821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:19,272 13822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,272 13822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,273 13823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,273 13823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:19,274 13824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:19,276 13826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,276 13826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,277 13827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:19,278 13828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:19,278 13828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,279 13829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,280 13830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:19,281 13831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:19,281 13831 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:19,281 13831 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:19,281 13831 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:19,281 13831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,282 13832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,282 13832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:19,286 13836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:19,286 13836 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,286 13836 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,286 13836 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,287 13837 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,288 13838 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:19,288 13838 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:19,288 13838 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:19,290 13840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,290 13840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,295 13845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-01 15:27:19,296 13846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-01 15:27:19,297 13847 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:27:19,297 13847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:19,297 13847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:19,302 13852 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:19,323 13873 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:19,323 13873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:19,324 13874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:19,968 14518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:19,968 14518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:19,968 14518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:19,968 14518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65126
2014-09-01 15:27:19,969 14519 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65126
2014-09-01 15:27:19,969 14519 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:19,969 14519 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9517
2014-09-01 15:27:19,969 14519 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9517
2014-09-01 15:27:19,969 14519 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65126 using key 91f332e33f60e355
2014-09-01 15:27:19,969 14519 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:19,970 14520 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:19,992 14542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:19,999 14549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:19,999 14549 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:20,000 14550 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:20,000 14550 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:20,000 14550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,000 14550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,001 14551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:20,001 14551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,001 14551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,002 14552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,002 14552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:20,003 14553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,003 14553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,003 14553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,004 14554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:20,004 14554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,004 14554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,005 14555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,005 14555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:20,006 14556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,006 14556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,007 14557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,007 14557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_155,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:20,008 14558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,008 14558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,008 14558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,009 14559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_156,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:20,009 14559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,010 14560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,010 14560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,011 14561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:20,011 14561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,012 14562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,012 14562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,013 14563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:20,013 14563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,013 14563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,014 14564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,014 14564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:20,015 14565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,015 14565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,015 14565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,016 14566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:20,016 14566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,017 14567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,017 14567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,017 14567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:20,018 14568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,018 14568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,019 14569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,019 14569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:20,020 14570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,020 14570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,021 14571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,021 14571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:20,022 14572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,022 14572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,022 14572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,023 14573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:20,024 14574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:20,024 14574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,025 14575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,026 14576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:20,027 14577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:20,027 14577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,027 14577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,028 14578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:20,029 14579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:20,029 14579 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:20,029 14579 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:20,029 14579 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:20,030 14580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,030 14580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,030 14580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:20,033 14583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,033 14583 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,034 14584 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,035 14585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,036 14586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,040 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-01 15:27:20,042 14592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-01 15:27:20,042 14592 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-01 15:27:20,042 14592 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:27:20,042 14592 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-01 15:27:20,042 14592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,043 14593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,046 14596 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:20,050 14600 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:20,051 14601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:20,051 14601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:20,626 15176 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:20,626 15176 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:20,627 15177 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:20,627 15177 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65128
2014-09-01 15:27:20,627 15177 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65128
2014-09-01 15:27:20,627 15177 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:20,627 15177 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9521
2014-09-01 15:27:20,628 15178 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9521
2014-09-01 15:27:20,628 15178 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65128 using key 91f332e33f60e355
2014-09-01 15:27:20,628 15178 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:20,629 15179 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:20,650 15200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:20,657 15207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,657 15207 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:20,657 15207 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:20,657 15207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,657 15207 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:20,657 15207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,658 15208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:20,658 15208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,658 15208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,659 15209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,659 15209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_177,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:20,659 15209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,660 15210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,660 15210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,660 15210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_178,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:20,661 15211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,661 15211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,661 15211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,662 15212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_179,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:20,662 15212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,663 15213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,663 15213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,664 15214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_180,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:20,664 15214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,665 15215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,665 15215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,666 15216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:20,666 15216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,667 15217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,667 15217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,668 15218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:20,668 15218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,669 15219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,669 15219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,669 15219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:20,670 15220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,670 15220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,670 15220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,671 15221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:20,671 15221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,671 15221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,672 15222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,672 15222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:20,673 15223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,673 15223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,674 15224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,674 15224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:20,675 15225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,675 15225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,675 15225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,676 15226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:20,676 15226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,677 15227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,677 15227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,677 15227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:20,678 15228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:20,678 15228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,679 15229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,679 15229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:20,680 15230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:20,681 15231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,681 15231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,683 15233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:20,683 15233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:20,683 15233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,684 15234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,685 15235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:20,685 15235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:20,685 15235 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:20,685 15235 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:20,686 15236 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:20,686 15236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,686 15236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,686 15236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:20,689 15239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:20,689 15239 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,689 15239 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,689 15239 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,689 15239 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,690 15240 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:20,691 15241 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:20,691 15241 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,691 15241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,692 15242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,696 15246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-01 15:27:20,698 15248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-01 15:27:20,698 15248 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:20,698 15248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:20,698 15248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:20,742 15292 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:20,747 15297 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:20,748 15298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:20,748 15298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:21,365 15915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:21,365 15915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:21,365 15915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:21,365 15915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65130
2014-09-01 15:27:21,366 15916 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65130
2014-09-01 15:27:21,366 15916 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:21,366 15916 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9525
2014-09-01 15:27:21,366 15916 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9525
2014-09-01 15:27:21,366 15916 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65130 using key 91f332e33f60e355
2014-09-01 15:27:21,367 15917 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:21,368 15918 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:21,388 15938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:21,399 15949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,399 15949 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:21,399 15949 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:21,399 15949 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:21,399 15949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,399 15949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,400 15950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:21,400 15950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,400 15950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,401 15951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,401 15951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_202,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:21,401 15951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,402 15952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,402 15952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,402 15952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_203,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:21,403 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,403 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,403 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,403 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_204,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:21,404 15954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,404 15954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,404 15954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,405 15955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_205,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:21,405 15955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,406 15956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,406 15956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,406 15956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_206,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:21,407 15957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,407 15957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,408 15958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,408 15958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_207,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:21,409 15959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,409 15959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,410 15960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,410 15960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_208,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:21,411 15961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,411 15961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,411 15961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,412 15962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:21,412 15962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,413 15963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,413 15963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,413 15963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:21,414 15964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,415 15965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,415 15965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,416 15966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:21,416 15966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,417 15967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,417 15967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,418 15968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:21,418 15968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,418 15968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,419 15969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,419 15969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:21,420 15970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:21,420 15970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,420 15970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,421 15971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:21,421 15971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:21,422 15972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,423 15973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,424 15974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:21,425 15975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:21,425 15975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,425 15975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,426 15976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:21,427 15977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:21,427 15977 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:21,427 15977 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:21,427 15977 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:21,427 15977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,428 15978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,428 15978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:21,431 15981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,431 15981 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:21,432 15982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:21,432 15982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,433 15983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,437 15987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-01 15:27:21,439 15989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-01 15:27:21,439 15989 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-01 15:27:21,439 15989 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:27:21,439 15989 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-01 15:27:21,439 15989 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:27:21,439 15989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:21,440 15990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:21,443 15993 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:21,447 15997 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:21,448 15998 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:21,448 15998 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:22,127 16677 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:22,127 16677 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:22,127 16677 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:22,127 16677 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65132
2014-09-01 15:27:22,128 16678 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65132
2014-09-01 15:27:22,128 16678 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:22,128 16678 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9529
2014-09-01 15:27:22,128 16678 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9529
2014-09-01 15:27:22,128 16678 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65132 using key 91f332e33f60e355
2014-09-01 15:27:22,129 16679 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:22,130 16680 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:22,150 16700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:22,161 16711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,161 16711 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:22,161 16711 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:22,161 16711 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:22,161 16711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,162 16712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,162 16712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_226,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:22,162 16712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,163 16713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,163 16713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,163 16713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_227,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:22,164 16714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,164 16714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,164 16714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,165 16715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_228,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:22,165 16715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,166 16716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,166 16716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,166 16716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_229,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:22,167 16717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,167 16717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,167 16717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,168 16718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_230,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:22,168 16718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,169 16719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,169 16719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,169 16719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_231,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:22,170 16720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,170 16720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,170 16720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,171 16721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_232,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:22,171 16721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,171 16721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,172 16722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,172 16722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_233,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:22,173 16723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,173 16723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,173 16723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,174 16724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_234,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:22,174 16724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,174 16724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,175 16725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,175 16725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:22,176 16726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,176 16726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,177 16727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,177 16727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:22,178 16728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,178 16728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,178 16728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,179 16729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:22,179 16729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,180 16730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,180 16730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,180 16730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:22,181 16731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,181 16731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,182 16732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,182 16732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:22,183 16733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:22,183 16733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,184 16734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,185 16735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:22,185 16735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:22,185 16735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,186 16736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,186 16736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:22,187 16737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:22,187 16737 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:22,188 16738 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:22,188 16738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,188 16738 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:22,188 16738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,189 16739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:22,191 16741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,192 16742 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,193 16743 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,193 16743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,193 16743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,197 16747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-01 15:27:22,199 16749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-01 15:27:22,199 16749 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:27:22,199 16749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,199 16749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,202 16752 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:22,207 16757 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:22,208 16758 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:22,208 16758 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:22,803 17353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:22,803 17353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:22,803 17353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:22,803 17353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65134
2014-09-01 15:27:22,803 17353 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65134
2014-09-01 15:27:22,804 17354 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:22,804 17354 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9533
2014-09-01 15:27:22,804 17354 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9533
2014-09-01 15:27:22,804 17354 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65134 using key 91f332e33f60e355
2014-09-01 15:27:22,804 17354 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:22,805 17355 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:22,823 17373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:22,832 17382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,832 17382 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:22,832 17382 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:22,832 17382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,832 17382 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:22,833 17383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,833 17383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_251,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:22,833 17383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,834 17384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,834 17384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,834 17384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_252,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:22,835 17385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,835 17385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,836 17386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,836 17386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_253,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:22,836 17386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,837 17387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,837 17387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,837 17387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_254,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:22,838 17388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,838 17388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,838 17388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,838 17388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_255,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:22,839 17389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,839 17389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,839 17389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,840 17390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_256,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:22,840 17390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,841 17391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,841 17391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,841 17391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_257,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:22,842 17392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,842 17392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,842 17392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,842 17392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:22,843 17393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,843 17393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,844 17394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,844 17394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:22,844 17394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,844 17394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,845 17395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,845 17395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:22,846 17396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,846 17396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,846 17396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,847 17397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:22,847 17397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,848 17398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,848 17398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,848 17398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:22,849 17399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,849 17399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,850 17400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,850 17400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:22,851 17401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:22,851 17401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,852 17402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,852 17402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:22,853 17403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:22,854 17404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,854 17404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,855 17405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:22,856 17406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:22,856 17406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,857 17407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,858 17408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:22,859 17409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:22,859 17409 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:22,859 17409 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:22,859 17409 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:22,859 17409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,859 17409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,860 17410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:22,863 17413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,863 17413 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:22,864 17414 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:22,864 17414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,865 17415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,869 17419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-01 15:27:22,871 17421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-01 15:27:22,871 17421 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-01 15:27:22,872 17422 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:27:22,872 17422 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-01 15:27:22,872 17422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:22,872 17422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:22,875 17425 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:22,879 17429 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:22,880 17430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:22,880 17430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:23,538 18088 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:23,538 18088 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:23,539 18089 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:23,539 18089 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65136
2014-09-01 15:27:23,539 18089 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65136
2014-09-01 15:27:23,539 18089 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:23,540 18090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9537
2014-09-01 15:27:23,540 18090 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9537
2014-09-01 15:27:23,540 18090 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65136 using key 91f332e33f60e355
2014-09-01 15:27:23,541 18091 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:23,542 18092 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:23,561 18111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:23,569 18119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,569 18119 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:23,569 18119 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:23,569 18119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,569 18119 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:23,570 18120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,570 18120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_276,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:23,571 18121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,571 18121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,571 18121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,572 18122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_277,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:23,572 18122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,572 18122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,573 18123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,573 18123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_278,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:23,574 18124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,574 18124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,575 18125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,575 18125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_279,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:23,576 18126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,576 18126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,576 18126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,577 18127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_280,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:23,577 18127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,578 18128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,578 18128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,578 18128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_281,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:23,579 18129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,579 18129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,579 18129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,580 18130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_282,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:23,580 18130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,580 18130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,581 18131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,581 18131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:23,581 18131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,582 18132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,582 18132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,582 18132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:23,583 18133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,583 18133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,583 18133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,584 18134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:23,584 18134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,585 18135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,585 18135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,586 18136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:23,587 18137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,587 18137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,587 18137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,588 18138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:23,589 18139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,589 18139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,589 18139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,590 18140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:23,590 18140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:23,590 18140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,591 18141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,592 18142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:23,593 18143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:23,593 18143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,594 18144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,595 18145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:23,596 18146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:23,596 18146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,596 18146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,597 18147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:23,598 18148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:23,598 18148 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:23,598 18148 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:23,598 18148 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:23,598 18148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,599 18149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,599 18149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:23,602 18152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:23,602 18152 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:23,603 18153 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,603 18153 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,603 18153 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:23,603 18153 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:23,603 18153 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,603 18153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,603 18153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,608 18158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-01 15:27:23,609 18159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-01 15:27:23,609 18159 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:23,610 18160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:23,610 18160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:23,615 18165 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:23,620 18170 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:23,621 18171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:23,621 18171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:24,320 18870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:24,321 18871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:24,321 18871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:24,322 18872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65138
2014-09-01 15:27:24,322 18872 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65138
2014-09-01 15:27:24,322 18872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:24,322 18872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9541
2014-09-01 15:27:24,322 18872 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9541
2014-09-01 15:27:24,322 18872 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65138 using key 91f332e33f60e355
2014-09-01 15:27:24,323 18873 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:24,324 18874 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:24,343 18893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:24,351 18901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,351 18901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:24,351 18901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:24,351 18901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,351 18901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:24,352 18902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,352 18902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_301,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:24,353 18903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,353 18903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,353 18903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,353 18903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_302,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:24,354 18904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,354 18904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,354 18904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,355 18905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_303,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:24,355 18905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,356 18906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,356 18906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,357 18907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_304,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:24,357 18907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,358 18908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,358 18908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,359 18909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:24,359 18909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,360 18910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,360 18910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,360 18910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:24,361 18911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,361 18911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,362 18912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,362 18912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:24,362 18912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,363 18913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,363 18913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,363 18913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:24,364 18914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,364 18914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,364 18914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,365 18915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:24,365 18915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,365 18915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,366 18916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,366 18916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:24,367 18917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,367 18917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,367 18917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,370 18920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:24,373 18923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,373 18923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,374 18924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,374 18924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:24,375 18925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,376 18926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,378 18928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,378 18928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:24,379 18929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:24,379 18929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,379 18929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,380 18930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:24,381 18931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:24,382 18932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,382 18932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,383 18933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:24,384 18934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:24,384 18934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,384 18934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,385 18935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:24,386 18936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:24,386 18936 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:24,386 18936 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:24,386 18936 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:24,386 18936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,387 18937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,387 18937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:24,390 18940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:24,390 18940 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,390 18940 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,390 18940 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,390 18940 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:24,390 18940 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:24,391 18941 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:24,392 18942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,392 18942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,396 18946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-01 15:27:24,398 18948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-01 15:27:24,399 18949 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-01 15:27:24,399 18949 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:27:24,399 18949 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-01 15:27:24,399 18949 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:27:24,399 18949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:24,399 18949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:24,403 18953 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:24,406 18956 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:24,407 18957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:24,407 18957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:25,034 19584 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65140
2014-09-01 15:27:25,035 19585 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65140
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9545
2014-09-01 15:27:25,035 19585 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9545
2014-09-01 15:27:25,035 19585 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65140 using key 91f332e33f60e355
2014-09-01 15:27:25,036 19586 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:25,037 19587 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:25,056 19606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:25,064 19614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,064 19614 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:25,064 19614 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:25,064 19614 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:25,064 19614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,065 19615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,065 19615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_326,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:25,066 19616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,066 19616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,066 19616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,066 19616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_327,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:25,067 19617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,067 19617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,068 19618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,068 19618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_328,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:25,068 19618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,068 19618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,069 19619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,069 19619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_329,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:25,070 19620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,070 19620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,070 19620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,071 19621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:25,071 19621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,071 19621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,072 19622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,072 19622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:25,073 19623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,073 19623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,073 19623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,073 19623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:25,074 19624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,074 19624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,075 19625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,075 19625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:25,076 19626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,076 19626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,077 19627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,077 19627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:25,078 19628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,078 19628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,078 19628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,078 19628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:25,079 19629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,079 19629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,080 19630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,080 19630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:25,081 19631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,081 19631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,081 19631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,082 19632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:25,082 19632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,083 19633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,083 19633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,084 19634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:25,084 19634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,084 19634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,085 19635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,086 19636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:25,087 19637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:25,088 19638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,088 19638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,089 19639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:25,089 19639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:25,090 19640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,090 19640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,091 19641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:25,092 19642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:25,092 19642 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:25,092 19642 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:25,092 19642 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:25,093 19643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,093 19643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,094 19644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:25,097 19647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,097 19647 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,098 19648 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,099 19649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,099 19649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,103 19653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-01 15:27:25,105 19655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-01 15:27:25,105 19655 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:27:25,105 19655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,106 19656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,109 19659 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:25,123 19673 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:25,124 19674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:25,124 19674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:25,750 20300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:25,750 20300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:25,750 20300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:25,750 20300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65142
2014-09-01 15:27:25,751 20301 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65142
2014-09-01 15:27:25,751 20301 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:25,751 20301 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9549
2014-09-01 15:27:25,751 20301 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9549
2014-09-01 15:27:25,751 20301 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65142 using key 91f332e33f60e355
2014-09-01 15:27:25,751 20301 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:25,752 20302 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:25,769 20319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:25,777 20327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,777 20327 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:25,777 20327 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:25,777 20327 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:25,777 20327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,778 20328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,778 20328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:25,779 20329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,779 20329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,779 20329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,779 20329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:25,780 20330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,780 20330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,780 20330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,781 20331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:25,781 20331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,781 20331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,782 20332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,782 20332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:25,782 20332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,783 20333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,783 20333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,783 20333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:25,784 20334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,784 20334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,784 20334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,785 20335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:25,785 20335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,785 20335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,786 20336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,786 20336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:25,787 20337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,787 20337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,787 20337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,787 20337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:25,788 20338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,788 20338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,789 20339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,789 20339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:25,790 20340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,790 20340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,791 20341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,791 20341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:25,792 20342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,792 20342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,793 20343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,793 20343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:25,794 20344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,794 20344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,794 20344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,795 20345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:25,795 20345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,795 20345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,796 20346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,796 20346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:25,797 20347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:25,797 20347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,797 20347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,798 20348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:25,799 20349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:25,800 20350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,800 20350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,802 20352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:25,802 20352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:25,803 20353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,803 20353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,804 20354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:25,805 20355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:25,805 20355 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:25,805 20355 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:25,805 20355 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:25,806 20356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,806 20356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,806 20356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:25,809 20359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:25,809 20359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,809 20359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,809 20359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,809 20359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,810 20360 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:25,811 20361 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:25,811 20361 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:25,811 20361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,811 20361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,816 20366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-01 15:27:25,817 20367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-01 15:27:25,818 20368 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-01 15:27:25,818 20368 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:27:25,818 20368 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-01 15:27:25,818 20368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:25,818 20368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:25,822 20372 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:27:25,826 20376 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:27:25,827 20377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:27:25,827 20377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:27:26,476 21026 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:27:26,476 21026 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:27:26,476 21026 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:27:26,476 21026 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65144
2014-09-01 15:27:26,477 21027 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65144
2014-09-01 15:27:26,477 21027 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:27:26,477 21027 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9553
2014-09-01 15:27:26,477 21027 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9553
2014-09-01 15:27:26,477 21027 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65144 using key 91f332e33f60e355
2014-09-01 15:27:26,478 21028 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:27:26,479 21029 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:27:26,498 21048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:27:26,505 21055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,505 21055 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:27:26,506 21056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:27:26,506 21056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,506 21056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:27:26,506 21056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,506 21056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:27:26,507 21057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,507 21057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,507 21057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,508 21058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:27:26,508 21058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,508 21058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,509 21059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,509 21059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_378,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:27:26,509 21059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,509 21059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,510 21060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,510 21060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_379,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:27:26,511 21061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,511 21061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,511 21061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,512 21062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_380,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:27:26,512 21062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,513 21063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,513 21063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,514 21064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_381,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:27:26,514 21064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,515 21065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,515 21065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,516 21066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_382,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:27:26,516 21066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,517 21067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,517 21067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,518 21068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_383,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:27:26,518 21068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,519 21069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,519 21069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,519 21069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_384,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:27:26,520 21070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,520 21070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,521 21071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,521 21071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_385,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:27:26,522 21072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,522 21072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,522 21072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,523 21073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_386,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:27:26,523 21073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,523 21073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,523 21073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,524 21074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_387,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:27:26,524 21074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,525 21075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,525 21075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,525 21075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_388,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:27:26,526 21076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:27:26,526 21076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,527 21077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,527 21077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:27:26,529 21079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:26,529 21079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,530 21080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,531 21081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:26,531 21081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:27:26,532 21082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,532 21082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,533 21083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:27:26,533 21083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:27:26,533 21083 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:27:26,533 21083 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:27:26,533 21083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,533 21083 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:27:26,534 21084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,534 21084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:27:26,537 21087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,537 21087 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:27:26,538 21088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:27:26,538 21088 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,538 21088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:27:26,543 21093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-01 15:27:26,544 21094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-01 15:27:26,544 21094 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:27:26,544 21094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:27:26,545 21095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:01,251 3160 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:01,263 3172 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:01,288 3197 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:01,289 3198 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:01,765 3674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:01,765 3674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:01,766 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:01,766 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65162
2014-09-01 15:31:01,766 3675 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65162
2014-09-01 15:31:01,766 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:01,766 3675 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9564
2014-09-01 15:31:01,766 3675 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9564
2014-09-01 15:31:01,767 3676 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65162 using key 48acb6c5f0f660bd
2014-09-01 15:31:01,768 3677 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:01,769 3678 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:01,987 3896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:01,997 3906 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:01,997 3906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:01,997 3906 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:01,998 3907 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:02,018 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,018 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,022 3931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:02,023 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,023 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,024 3933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,025 3934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:02,026 3935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,027 3936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,027 3936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,028 3937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:02,029 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,029 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,030 3939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,031 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:02,032 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,032 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,032 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,033 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:02,034 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,034 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,034 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,035 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:02,036 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,036 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,036 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,037 3946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:02,038 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,038 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,038 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,039 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:02,040 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,040 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,040 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,041 3950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:02,042 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,042 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,042 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,043 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:02,044 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,044 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,044 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,045 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:02,045 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,046 3955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,046 3955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,047 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:02,047 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,047 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,048 3957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,048 3957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:02,049 3958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,049 3958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,050 3959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,078 3987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:02,080 3989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:02,084 3993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,084 3993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,098 4007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:02,099 4008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:02,100 4009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,101 4010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,106 4015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:02,107 4016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:02,107 4016 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:02,107 4016 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:02,107 4016 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:02,108 4017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,109 4018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,122 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:02,126 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:02,126 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,126 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,127 4036 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,128 4037 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,128 4037 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,128 4037 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,128 4037 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,140 4049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,141 4050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,163 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})'),ARes),true.

2014-09-01 15:31:02,175 4084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})')),[]))
2014-09-01 15:31:02,176 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,177 4086 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:02,177 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,186 4095 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:02,198 4107 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:02,200 4109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:02,200 4109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:02,770 4679 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:02,770 4679 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:02,770 4679 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:02,770 4679 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65164
2014-09-01 15:31:02,770 4679 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65164
2014-09-01 15:31:02,771 4680 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:02,771 4680 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9568
2014-09-01 15:31:02,771 4680 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9568
2014-09-01 15:31:02,771 4680 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65164 using key 48acb6c5f0f660bd
2014-09-01 15:31:02,772 4681 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:02,772 4681 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:02,811 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:02,819 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,819 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:02,819 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:02,819 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:02,819 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,820 4729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,820 4729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:02,821 4730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,821 4730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,821 4730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,822 4731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:02,822 4731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,822 4731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,823 4732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,823 4732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:02,824 4733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,824 4733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,824 4733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,825 4734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:02,825 4734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,825 4734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,826 4735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,826 4735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:02,827 4736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,827 4736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,828 4737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,829 4738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:02,830 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,830 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,830 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,831 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:02,831 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,831 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,832 4741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,832 4741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:02,833 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,833 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,834 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,834 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:02,835 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,835 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,836 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,836 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:02,837 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,837 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,838 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,838 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:02,839 4748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,839 4748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,840 4749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,841 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:02,842 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,842 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,842 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,843 4752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:02,844 4753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:02,844 4753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,845 4754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,846 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:02,846 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:02,848 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,849 4758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,850 4759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:02,851 4760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:02,852 4761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,853 4762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,854 4763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:02,855 4764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:02,855 4764 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:02,856 4765 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:02,856 4765 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:02,856 4765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,857 4766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,858 4767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:02,862 4771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,862 4771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:02,863 4772 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:02,864 4773 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:02,868 4777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,868 4777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,879 4788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,ready))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready'),ARes),true.

2014-09-01 15:31:02,882 4791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready')),[]))
2014-09-01 15:31:02,883 4792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:02,883 4792 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : ready
2014-09-01 15:31:02,883 4792 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:31:02,883 4792 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:31:02,884 4793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:02,889 4798 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:02,895 4804 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:02,896 4805 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:02,896 4805 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:03,644 5553 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65166
2014-09-01 15:31:03,645 5554 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65166
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9572
2014-09-01 15:31:03,645 5554 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9572
2014-09-01 15:31:03,645 5554 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65166 using key 48acb6c5f0f660bd
2014-09-01 15:31:03,646 5555 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:03,647 5556 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:03,686 5595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:03,693 5602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,693 5602 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:03,694 5603 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:03,694 5603 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:03,694 5603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,695 5604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,695 5604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:03,696 5605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,696 5605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,697 5606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,697 5606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:03,698 5607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,698 5607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,698 5607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,699 5608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:03,699 5608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,700 5609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,700 5609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,700 5609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:03,701 5610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,701 5610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,701 5610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,702 5611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:03,702 5611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,703 5612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,703 5612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,703 5612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:03,704 5613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,704 5613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,704 5613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,705 5614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:03,705 5614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,705 5614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,706 5615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,706 5615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:03,707 5616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,707 5616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,707 5616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,707 5616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:03,708 5617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,708 5617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,708 5617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,709 5618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:03,709 5618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,710 5619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,710 5619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,710 5619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:03,711 5620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,711 5620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,711 5620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,712 5621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:03,712 5621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,713 5622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,713 5622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,713 5622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:03,714 5623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:03,714 5623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,714 5623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,715 5624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:03,716 5625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:03,717 5626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,717 5626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,718 5627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:03,719 5628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:03,719 5628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,720 5629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,721 5630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:03,722 5631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:03,722 5631 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:03,722 5631 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:03,722 5631 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:03,722 5631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,723 5632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,723 5632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:03,725 5634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:03,725 5634 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,726 5635 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:03,727 5636 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:03,729 5638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,729 5638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,737 5646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}'),ARes),true.

2014-09-01 15:31:03,739 5648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}')),[]))
2014-09-01 15:31:03,740 5649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:03,741 5650 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:03,741 5650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:03,746 5655 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:03,752 5661 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:03,753 5662 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:03,753 5662 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:04,321 6230 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:04,321 6230 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:04,321 6230 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:04,322 6231 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65168
2014-09-01 15:31:04,322 6231 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65168
2014-09-01 15:31:04,322 6231 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:04,322 6231 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9576
2014-09-01 15:31:04,322 6231 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9576
2014-09-01 15:31:04,322 6231 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65168 using key 48acb6c5f0f660bd
2014-09-01 15:31:04,323 6232 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:04,333 6242 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:04,361 6270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:04,374 6283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,374 6283 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:04,375 6284 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:04,375 6284 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:04,375 6284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,375 6284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,376 6285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:04,377 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,377 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,377 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,377 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:04,378 6287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,378 6287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,379 6288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,379 6288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:04,379 6288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,380 6289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,380 6289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,380 6289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:04,381 6290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,381 6290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,382 6291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,382 6291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:04,382 6291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,383 6292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,383 6292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,384 6293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:04,384 6293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,384 6293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,385 6294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,385 6294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:04,386 6295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,386 6295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,386 6295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,387 6296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:04,387 6296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,387 6296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,388 6297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,388 6297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:04,389 6298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,389 6298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,389 6298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,390 6299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:04,390 6299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,391 6300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,391 6300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,391 6300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:04,392 6301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,392 6301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,392 6301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,393 6302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:04,394 6303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,394 6303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,394 6303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,395 6304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:04,395 6304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:04,395 6304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,396 6305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,396 6305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:04,397 6306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:04,398 6307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,398 6307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,399 6308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:04,400 6309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:04,400 6309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,400 6309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,401 6310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:04,402 6311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:04,402 6311 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:04,403 6312 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:04,403 6312 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:04,403 6312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,403 6312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,404 6313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:04,406 6315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:04,406 6315 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,407 6316 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:04,408 6317 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,410 6319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,410 6319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,418 6327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})'),ARes),true.

2014-09-01 15:31:04,421 6330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})')),[]))
2014-09-01 15:31:04,421 6330 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:04,421 6330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:04,422 6331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:04,427 6336 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:04,431 6340 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:04,433 6342 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:04,433 6342 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:04,985 6894 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:04,986 6895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:04,986 6895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:04,986 6895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65170
2014-09-01 15:31:04,987 6896 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65170
2014-09-01 15:31:04,987 6896 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:04,987 6896 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9580
2014-09-01 15:31:04,987 6896 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9580
2014-09-01 15:31:04,987 6896 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65170 using key 48acb6c5f0f660bd
2014-09-01 15:31:04,988 6897 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:04,989 6898 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:05,024 6933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:05,035 6944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,035 6944 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:05,035 6944 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:05,035 6944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,035 6944 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:05,036 6945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,036 6945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:05,037 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,037 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,037 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,038 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:05,038 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,038 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,039 6948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,039 6948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:05,039 6948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,040 6949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,040 6949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,040 6949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:05,041 6950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,041 6950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,041 6950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,042 6951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:05,043 6952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,043 6952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,043 6952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,044 6953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:05,044 6953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,044 6953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,045 6954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,045 6954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:05,046 6955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,046 6955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,046 6955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,047 6956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:05,047 6956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,047 6956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,048 6957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,048 6957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:05,048 6957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,049 6958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,049 6958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,049 6958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:05,050 6959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,050 6959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,050 6959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,051 6960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:05,051 6960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,052 6961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,052 6961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,052 6961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:05,053 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,053 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,053 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,054 6963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:05,054 6963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,054 6963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,055 6964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,055 6964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:05,056 6965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:05,057 6966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,057 6966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,058 6967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:05,059 6968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:05,059 6968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,060 6969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,061 6970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:05,061 6970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:05,061 6970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:05,061 6970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:05,062 6971 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:05,062 6971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,062 6971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,063 6972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:05,068 6977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,068 6977 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,069 6978 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,070 6979 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,070 6979 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,072 6981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,073 6982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,079 6988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}'),ARes),true.

2014-09-01 15:31:05,081 6990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}')),[]))
2014-09-01 15:31:05,081 6990 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,081 6990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,082 6991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,086 6995 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:05,091 7000 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:05,092 7001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:05,092 7001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:05,592 7501 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65172
2014-09-01 15:31:05,593 7502 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65172
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9584
2014-09-01 15:31:05,593 7502 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9584
2014-09-01 15:31:05,593 7502 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65172 using key 48acb6c5f0f660bd
2014-09-01 15:31:05,594 7503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:05,595 7504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:05,615 7524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:05,621 7530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,621 7530 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:05,622 7531 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:05,622 7531 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:05,622 7531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,622 7531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,623 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:05,623 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,623 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,624 7533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,624 7533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:05,625 7534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,625 7534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,625 7534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,626 7535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:05,626 7535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,626 7535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,627 7536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,627 7536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:05,628 7537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,628 7537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,629 7538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,629 7538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_130,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:05,630 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,630 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,631 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,631 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:05,632 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,632 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,633 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,633 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:05,634 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,634 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,634 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,635 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:05,635 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,635 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,636 7545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,636 7545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:05,637 7546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,637 7546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,637 7546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,638 7547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:05,639 7548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,639 7548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,639 7548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,640 7549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:05,641 7550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,641 7550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,642 7551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,642 7551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:05,643 7552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,643 7552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,644 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,644 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:05,645 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:05,645 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,645 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,646 7555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:05,647 7556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:05,648 7557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,648 7557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,649 7558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:05,650 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:05,650 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,650 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,651 7560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:05,652 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:05,652 7561 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:05,652 7561 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:05,652 7561 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:05,653 7562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,653 7562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,654 7563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:05,656 7565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:05,656 7565 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,656 7565 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:05,657 7566 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:05,660 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,660 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,665 7574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,ready)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)'),ARes),true.

2014-09-01 15:31:05,667 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)')),[]))
2014-09-01 15:31:05,667 7576 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:31:05,667 7576 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:31:05,667 7576 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:31:05,668 7577 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:31:05,668 7577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:05,668 7577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:05,673 7582 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:05,681 7590 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:05,682 7591 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:05,682 7591 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:06,210 8119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:06,211 8120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:06,211 8120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:06,212 8121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65174
2014-09-01 15:31:06,212 8121 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65174
2014-09-01 15:31:06,212 8121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:06,212 8121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9588
2014-09-01 15:31:06,213 8122 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9588
2014-09-01 15:31:06,213 8122 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65174 using key 48acb6c5f0f660bd
2014-09-01 15:31:06,213 8122 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:06,214 8123 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:06,240 8149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:06,248 8157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,248 8157 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:06,248 8157 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:06,248 8157 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:06,248 8157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,249 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,249 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:06,250 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,250 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,250 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,251 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:06,251 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,251 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,252 8161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,252 8161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:06,253 8162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,253 8162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,253 8162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,254 8163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:06,254 8163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,255 8164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,255 8164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,255 8164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_155,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:06,256 8165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,256 8165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,256 8165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,257 8166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_156,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:06,257 8166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,258 8167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,258 8167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,258 8167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:06,259 8168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,259 8168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,260 8169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,260 8169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:06,261 8170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,261 8170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,262 8171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,262 8171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:06,263 8172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,263 8172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,264 8173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,264 8173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:06,265 8174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,265 8174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,265 8174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,266 8175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:06,266 8175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,266 8175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,267 8176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,267 8176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:06,268 8177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,268 8177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,268 8177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,269 8178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:06,269 8178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,270 8179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,270 8179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,271 8180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:06,272 8181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:06,273 8182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,273 8182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,274 8183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:06,275 8184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:06,275 8184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,276 8185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,277 8186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:06,277 8186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:06,277 8186 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:06,277 8186 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:06,278 8187 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:06,278 8187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,278 8187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,279 8188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:06,281 8190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,281 8190 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,282 8191 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,283 8192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,284 8193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,289 8198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})'),ARes),true.

2014-09-01 15:31:06,291 8200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})')),[]))
2014-09-01 15:31:06,291 8200 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:06,291 8200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,292 8201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,295 8204 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:06,299 8208 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:06,300 8209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:06,300 8209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:06,777 8686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:06,777 8686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:06,777 8686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:06,777 8686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65176
2014-09-01 15:31:06,777 8686 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65176
2014-09-01 15:31:06,777 8686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:06,778 8687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9592
2014-09-01 15:31:06,778 8687 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9592
2014-09-01 15:31:06,778 8687 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65176 using key 48acb6c5f0f660bd
2014-09-01 15:31:06,778 8687 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:06,779 8688 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:06,799 8708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:06,806 8715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,806 8715 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:06,806 8715 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:06,806 8715 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:06,806 8715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,807 8716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,807 8716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:06,807 8716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,808 8717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,808 8717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,808 8717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_177,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:06,809 8718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,809 8718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,810 8719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,810 8719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_178,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:06,811 8720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,811 8720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,811 8720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,812 8721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_179,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:06,813 8722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,813 8722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,813 8722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,813 8722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_180,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:06,814 8723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,814 8723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,814 8723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,815 8724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:06,815 8724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,816 8725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,816 8725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,817 8726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:06,817 8726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,818 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,818 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,819 8728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:06,819 8728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,820 8729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,820 8729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,820 8729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:06,821 8730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,821 8730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,821 8730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,822 8731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:06,822 8731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,823 8732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,823 8732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,824 8733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:06,825 8734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,825 8734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,825 8734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,826 8735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:06,826 8735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,827 8736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,827 8736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,827 8736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:06,828 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:06,828 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,828 8737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,829 8738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:06,830 8739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:06,830 8739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,831 8740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,832 8741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:06,833 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:06,833 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,833 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,834 8743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:06,835 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:06,835 8744 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:06,835 8744 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:06,836 8745 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:06,836 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,836 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,837 8746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:06,840 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:06,840 8749 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,840 8749 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,840 8749 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,840 8749 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,841 8750 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:06,842 8751 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:06,842 8751 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:06,842 8751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,843 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,847 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,ready))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready'),ARes),true.

2014-09-01 15:31:06,849 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready')),[]))
2014-09-01 15:31:06,849 8758 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : ready
2014-09-01 15:31:06,849 8758 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:31:06,849 8758 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:31:06,850 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:06,850 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:06,853 8762 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:06,862 8771 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:06,862 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:06,863 8772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:07,388 9297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:07,389 9298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:07,389 9298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:07,389 9298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65178
2014-09-01 15:31:07,389 9298 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65178
2014-09-01 15:31:07,389 9298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:07,389 9298 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9596
2014-09-01 15:31:07,390 9299 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9596
2014-09-01 15:31:07,390 9299 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65178 using key 48acb6c5f0f660bd
2014-09-01 15:31:07,390 9299 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:07,391 9300 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:07,413 9322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:07,421 9330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,421 9330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:07,422 9331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:07,422 9331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,422 9331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:07,422 9331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,422 9331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:07,423 9332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,423 9332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,423 9332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,424 9333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_202,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:07,424 9333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,425 9334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,425 9334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,425 9334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_203,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:07,426 9335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,426 9335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,427 9336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,427 9336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_204,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:07,428 9337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,428 9337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,429 9338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,429 9338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_205,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:07,430 9339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,430 9339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,431 9340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,431 9340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_206,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:07,432 9341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,432 9341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,432 9341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,433 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_207,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:07,433 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,433 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,434 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,434 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_208,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:07,435 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,435 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,435 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,436 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:07,436 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,436 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,437 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,437 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:07,438 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,438 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,438 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,439 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:07,439 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,440 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,440 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,441 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:07,441 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,442 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,442 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,443 9352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:07,443 9352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,443 9352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,444 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,444 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:07,445 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:07,446 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,446 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,447 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:07,448 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:07,448 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,448 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,449 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:07,450 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:07,450 9359 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:07,450 9359 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:07,450 9359 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:07,450 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,451 9360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,451 9360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:07,454 9363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:07,454 9363 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,454 9363 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,454 9363 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,454 9363 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,455 9364 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:07,456 9365 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:07,456 9365 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:07,456 9365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,456 9365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,460 9369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}'),ARes),true.

2014-09-01 15:31:07,462 9371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}')),[]))
2014-09-01 15:31:07,462 9371 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:07,462 9371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,463 9372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,466 9375 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:07,470 9379 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:07,471 9380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:07,471 9380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:07,959 9868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:07,959 9868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:07,959 9868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:07,959 9868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65180
2014-09-01 15:31:07,959 9868 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65180
2014-09-01 15:31:07,959 9868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:07,960 9869 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9600
2014-09-01 15:31:07,960 9869 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9600
2014-09-01 15:31:07,960 9869 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65180 using key 48acb6c5f0f660bd
2014-09-01 15:31:07,960 9869 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:07,961 9870 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:07,979 9888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:07,990 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,990 9899 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:07,990 9899 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:07,990 9899 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:07,990 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,991 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,991 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_226,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:07,991 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,992 9901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,992 9901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,992 9901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_227,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:07,993 9902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,993 9902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,993 9902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,994 9903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_228,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:07,994 9903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,994 9903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,995 9904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,995 9904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_229,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:07,996 9905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,996 9905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,996 9905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,997 9906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_230,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:07,997 9906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,997 9906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,998 9907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:07,998 9907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_231,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:07,999 9908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:07,999 9908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:07,999 9908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,000 9909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_232,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:08,001 9910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,001 9910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,001 9910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,002 9911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_233,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:08,002 9911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,002 9911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,003 9912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,003 9912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_234,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:08,004 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,004 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,004 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,005 9914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:08,005 9914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,006 9915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,006 9915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,006 9915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:08,007 9916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,007 9916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,008 9917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,008 9917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:08,009 9918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,009 9918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,009 9918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,010 9919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:08,010 9919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,010 9919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,011 9920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,011 9920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:08,012 9921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:08,013 9922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,013 9922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,015 9924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:08,015 9924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:08,016 9925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,016 9925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,017 9926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:08,018 9927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:08,018 9927 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:08,018 9927 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:08,018 9927 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:08,018 9927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,019 9928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,019 9928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:08,022 9931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,023 9932 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,024 9933 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,024 9933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,025 9934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,028 9937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})'),ARes),true.

2014-09-01 15:31:08,030 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})')),[]))
2014-09-01 15:31:08,030 9939 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,030 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,030 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,033 9942 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:08,038 9947 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:08,039 9948 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:08,039 9948 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:08,542 10451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:08,543 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:08,543 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:08,543 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65182
2014-09-01 15:31:08,543 10452 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65182
2014-09-01 15:31:08,543 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:08,543 10452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9604
2014-09-01 15:31:08,544 10453 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9604
2014-09-01 15:31:08,544 10453 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65182 using key 48acb6c5f0f660bd
2014-09-01 15:31:08,544 10453 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:08,545 10454 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:08,563 10472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:08,573 10482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,573 10482 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:08,573 10482 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:08,574 10483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,574 10483 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:08,574 10483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,574 10483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_251,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:08,575 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,575 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,575 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,576 10485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_252,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:08,576 10485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,577 10486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,577 10486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,578 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_253,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:08,578 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,578 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,579 10488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,579 10488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_254,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:08,580 10489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,580 10489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,580 10489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,581 10490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_255,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:08,581 10490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,581 10490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,582 10491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,582 10491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_256,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:08,583 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,583 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,583 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,584 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_257,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:08,584 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,584 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,585 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,585 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:08,585 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,585 10494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,586 10495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,586 10495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:08,587 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,587 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,587 10496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,588 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:08,588 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,588 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,589 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,589 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:08,590 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,590 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,591 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,591 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:08,591 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,592 10501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,592 10501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,593 10502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:08,593 10502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:08,594 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,594 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,594 10503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:08,595 10504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:08,596 10505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,596 10505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,597 10506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:08,598 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:08,598 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,598 10507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,599 10508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:08,600 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:08,600 10509 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:08,600 10509 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:08,600 10509 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:08,600 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,600 10509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,601 10510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:08,603 10512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:08,603 10512 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:08,604 10513 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,605 10514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,605 10514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,609 10518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}'),ARes),true.

2014-09-01 15:31:08,610 10519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}')),[]))
2014-09-01 15:31:08,610 10519 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:08,611 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:08,611 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:08,614 10523 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:08,619 10528 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:08,620 10529 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:08,620 10529 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:09,119 11028 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:09,120 11029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:09,120 11029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:09,120 11029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65184
2014-09-01 15:31:09,120 11029 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65184
2014-09-01 15:31:09,120 11029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:09,121 11030 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9608
2014-09-01 15:31:09,121 11030 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9608
2014-09-01 15:31:09,121 11030 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65184 using key 48acb6c5f0f660bd
2014-09-01 15:31:09,121 11030 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:09,122 11031 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:09,140 11049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:09,147 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,147 11056 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:09,147 11056 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:09,147 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,147 11056 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:09,147 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,148 11057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_276,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:09,148 11057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,148 11057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,149 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,149 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_277,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:09,149 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,149 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,150 11059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,150 11059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_278,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:09,151 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,151 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,151 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,151 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_279,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:09,152 11061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,152 11061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,153 11062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,153 11062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_280,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:09,153 11062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,154 11063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,154 11063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,154 11063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_281,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:09,155 11064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,155 11064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,156 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,156 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_282,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:09,156 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,156 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,157 11066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,157 11066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:09,158 11067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,158 11067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,158 11067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,159 11068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:09,159 11068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,159 11068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,160 11069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,160 11069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:09,161 11070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,161 11070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,161 11070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,162 11071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:09,163 11072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,163 11072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,164 11073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,164 11073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:09,165 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,165 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,165 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,166 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:09,166 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,166 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,167 11076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,167 11076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:09,168 11077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:09,169 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,169 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,170 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:09,171 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:09,171 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,171 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,172 11081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:09,173 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:09,173 11082 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:09,173 11082 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:09,173 11082 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:09,173 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,174 11083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,174 11083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:09,177 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,177 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,178 11087 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,178 11087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,179 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,183 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,ready)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)'),ARes),true.

2014-09-01 15:31:09,185 11094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)')),[]))
2014-09-01 15:31:09,185 11094 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:31:09,185 11094 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:31:09,185 11094 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:31:09,185 11094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,185 11094 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:31:09,186 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,226 11135 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:09,234 11143 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:09,235 11144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:09,236 11145 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:09,751 11660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65186
2014-09-01 15:31:09,752 11661 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65186
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9612
2014-09-01 15:31:09,752 11661 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9612
2014-09-01 15:31:09,752 11661 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65186 using key 48acb6c5f0f660bd
2014-09-01 15:31:09,753 11662 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:09,754 11663 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:09,770 11679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:09,778 11687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,778 11687 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:09,778 11687 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:09,778 11687 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:09,778 11687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,779 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,779 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_301,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:09,779 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,780 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,780 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,780 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_302,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:09,781 11690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,781 11690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,782 11691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,782 11691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_303,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:09,783 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,783 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,783 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,783 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_304,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:09,784 11693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,784 11693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,785 11694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,785 11694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:09,785 11694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,786 11695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,786 11695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,786 11695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:09,787 11696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,787 11696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,788 11697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,788 11697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:09,789 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,789 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,789 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,789 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:09,790 11699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,790 11699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,791 11700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,791 11700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:09,792 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,792 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,792 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,793 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:09,793 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,794 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,794 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,794 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:09,795 11704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,796 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,796 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,796 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:09,797 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,797 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,797 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,798 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:09,798 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:09,798 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,799 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,799 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:09,800 11709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:09,801 11710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,801 11710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,802 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:09,803 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:09,803 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,803 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,804 11713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:09,805 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:09,805 11714 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:09,805 11714 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:09,805 11714 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:09,805 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,806 11715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,806 11715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:09,809 11718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:09,809 11718 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,809 11718 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:09,810 11719 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:09,811 11720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,812 11721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,816 11725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})'),ARes),true.

2014-09-01 15:31:09,817 11726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})')),[]))
2014-09-01 15:31:09,818 11727 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:09,818 11727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:09,818 11727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:09,821 11730 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:09,826 11735 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:09,827 11736 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:09,828 11737 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:10,327 12236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:10,328 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:10,328 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:10,328 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65188
2014-09-01 15:31:10,328 12237 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65188
2014-09-01 15:31:10,328 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:10,328 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9616
2014-09-01 15:31:10,328 12237 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9616
2014-09-01 15:31:10,329 12238 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65188 using key 48acb6c5f0f660bd
2014-09-01 15:31:10,329 12238 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:10,330 12239 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:10,347 12256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:10,356 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,356 12265 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:10,356 12265 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:10,356 12265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,356 12265 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:10,357 12266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,357 12266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_326,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:10,358 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,358 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,358 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,359 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_327,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:10,359 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,359 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,360 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,360 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_328,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:10,361 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,361 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,361 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,361 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_329,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:10,362 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,362 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,363 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,363 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:10,364 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,364 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,364 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,364 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:10,365 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,365 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,366 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,366 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:10,367 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,367 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,368 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,368 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:10,369 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,369 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,369 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,370 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:10,370 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,370 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,371 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,371 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:10,372 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,372 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,372 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,373 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:10,373 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,374 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,374 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,375 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:10,375 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,376 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,376 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,377 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:10,377 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,377 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,378 12287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,378 12287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:10,379 12288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:10,380 12289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,380 12289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,381 12290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:10,382 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:10,382 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,383 12292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,383 12292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:10,384 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:10,384 12293 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:10,384 12293 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:10,384 12293 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:10,384 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,385 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,385 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:10,388 12297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,388 12297 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,389 12298 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,389 12298 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,389 12298 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,389 12298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,389 12298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,393 12302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,ready))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready'),ARes),true.

2014-09-01 15:31:10,395 12304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready')),[]))
2014-09-01 15:31:10,395 12304 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : ready
2014-09-01 15:31:10,395 12304 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:31:10,395 12304 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:31:10,395 12304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,395 12304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,398 12307 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:10,403 12312 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:10,404 12313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:10,405 12314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:10,906 12815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65190
2014-09-01 15:31:10,907 12816 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65190
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9620
2014-09-01 15:31:10,907 12816 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9620
2014-09-01 15:31:10,907 12816 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65190 using key 48acb6c5f0f660bd
2014-09-01 15:31:10,908 12817 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:10,909 12818 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:10,925 12834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:10,932 12841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,932 12841 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:10,933 12842 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:10,933 12842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,933 12842 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:10,933 12842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,933 12842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:10,934 12843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,934 12843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,935 12844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,935 12844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:10,935 12844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,936 12845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,936 12845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,936 12845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:10,937 12846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,937 12846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,937 12846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,938 12847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:10,938 12847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,938 12847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,939 12848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,939 12848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:10,939 12848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,940 12849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,940 12849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,940 12849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:10,941 12850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,941 12850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,941 12850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,941 12850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:10,942 12851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,942 12851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,942 12851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,943 12852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:10,943 12852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,943 12852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,944 12853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,944 12853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:10,944 12853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,945 12854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,945 12854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,945 12854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:10,946 12855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,946 12855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,947 12856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,947 12856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:10,948 12857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,948 12857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,948 12857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,949 12858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:10,950 12859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,950 12859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,950 12859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,951 12860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:10,951 12860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:10,952 12861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,952 12861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,953 12862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:10,953 12862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:10,954 12863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,954 12863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,955 12864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:10,956 12865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:10,956 12865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,956 12865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,957 12866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:10,958 12867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:10,958 12867 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:10,958 12867 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:10,958 12867 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:10,958 12867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,959 12868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,959 12868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:10,962 12871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,962 12871 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:10,963 12872 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:10,963 12872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,964 12873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,967 12876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}'),ARes),true.

2014-09-01 15:31:10,969 12878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}')),[]))
2014-09-01 15:31:10,969 12878 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:10,969 12878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:10,969 12878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:10,972 12881 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:10,980 12889 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:10,981 12890 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:10,981 12890 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:11,503 13412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:11,503 13412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:11,503 13412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:11,503 13412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65192
2014-09-01 15:31:11,504 13413 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65192
2014-09-01 15:31:11,504 13413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:11,504 13413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9624
2014-09-01 15:31:11,504 13413 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9624
2014-09-01 15:31:11,504 13413 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65192 using key 48acb6c5f0f660bd
2014-09-01 15:31:11,505 13414 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:11,506 13415 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:11,524 13433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:11,535 13444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,535 13444 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:11,535 13444 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:11,535 13444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,535 13444 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:11,536 13445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,536 13445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:11,536 13445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,537 13446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,537 13446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,537 13446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:11,538 13447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,538 13447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,538 13447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,538 13447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_378,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:11,539 13448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,539 13448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,539 13448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,539 13448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_379,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:11,540 13449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,540 13449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,540 13449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,541 13450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_380,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:11,541 13450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,541 13450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,542 13451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,542 13451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_381,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:11,543 13452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,543 13452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,543 13452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,543 13452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_382,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:11,544 13453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,544 13453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,544 13453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,544 13453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_383,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:11,545 13454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,545 13454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,545 13454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,546 13455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_384,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:11,546 13455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,546 13455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,547 13456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,547 13456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_385,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:11,547 13456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,547 13456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,548 13457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,548 13457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_386,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:11,548 13457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,549 13458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,549 13458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,549 13458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_387,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:11,550 13459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,550 13459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,550 13459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,550 13459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_388,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:11,551 13460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:11,551 13460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,551 13460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,552 13461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:11,553 13462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:11,553 13462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,553 13462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,554 13463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:11,555 13464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:11,555 13464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,556 13465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,557 13466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:11,557 13466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:11,557 13466 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:11,557 13466 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:11,558 13467 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:11,558 13467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,558 13467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,559 13468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:11,561 13470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:11,561 13470 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,562 13471 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:11,563 13472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,563 13472 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,564 13473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,568 13477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})'),ARes),true.

2014-09-01 15:31:11,570 13479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})')),[]))
2014-09-01 15:31:11,570 13479 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:11,570 13479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:11,570 13479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:11,574 13483 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:11,580 13489 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:11,581 13490 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:11,581 13490 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65194
2014-09-01 15:31:12,075 13984 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65194
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:12,075 13984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9628
2014-09-01 15:31:12,076 13985 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9628
2014-09-01 15:31:12,076 13985 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65194 using key 48acb6c5f0f660bd
2014-09-01 15:31:12,076 13985 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:12,077 13986 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:12,093 14002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:12,100 14009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,101 14010 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:12,101 14010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,101 14010 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:12,101 14010 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:12,101 14010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,102 14011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:12,102 14011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,102 14011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,103 14012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,103 14012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:12,104 14013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,104 14013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,104 14013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,105 14014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:12,105 14014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,105 14014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,106 14015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,106 14015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_404,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:12,106 14015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,107 14016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,107 14016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,107 14016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_405,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:12,108 14017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,108 14017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,108 14017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,109 14018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_406,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:12,109 14018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,109 14018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,110 14019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,110 14019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_407,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:12,111 14020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,111 14020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,111 14020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,111 14020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_408,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:12,112 14021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,112 14021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,112 14021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,113 14022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_409,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:12,113 14022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,114 14023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,114 14023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,114 14023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_410,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:12,115 14024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,115 14024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,116 14025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,116 14025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_411,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:12,117 14026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,117 14026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,118 14027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,118 14027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_412,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:12,119 14028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,119 14028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,119 14028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,120 14029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_413,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:12,120 14029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,121 14030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,121 14030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,122 14031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:12,123 14032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:12,124 14033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,124 14033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,125 14034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:12,126 14035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:12,126 14035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,126 14035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,127 14036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:12,128 14037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:12,128 14037 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:12,128 14037 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:12,128 14037 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:12,128 14037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,129 14038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,129 14038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:12,132 14041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,132 14041 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,133 14042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,133 14042 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,133 14042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,137 14046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}'),ARes),true.

2014-09-01 15:31:12,138 14047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}')),[]))
2014-09-01 15:31:12,138 14047 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,138 14047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,139 14048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,142 14051 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:12,148 14057 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:12,149 14058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:12,149 14058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:12,652 14561 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:12,652 14561 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:12,652 14561 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:12,652 14561 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65196
2014-09-01 15:31:12,652 14561 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65196
2014-09-01 15:31:12,653 14562 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:12,653 14562 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9632
2014-09-01 15:31:12,653 14562 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9632
2014-09-01 15:31:12,653 14562 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65196 using key 48acb6c5f0f660bd
2014-09-01 15:31:12,654 14563 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:12,655 14564 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:12,670 14579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:12,679 14588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,679 14588 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:12,679 14588 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:12,679 14588 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:12,679 14588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,680 14589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,680 14589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_426,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:12,680 14589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,681 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,681 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,681 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_427,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:12,682 14591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,682 14591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,682 14591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,683 14592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_428,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:12,683 14592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,683 14592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,684 14593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,684 14593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_429,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:12,685 14594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,685 14594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,685 14594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,685 14594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_430,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:12,686 14595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,686 14595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,687 14596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,687 14596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_431,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:12,687 14596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,688 14597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,688 14597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,688 14597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_432,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:12,689 14598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,689 14598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,689 14598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,689 14598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_433,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:12,690 14599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,690 14599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,691 14600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,691 14600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_434,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:12,691 14600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,692 14601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,692 14601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,692 14601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_435,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:12,693 14602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,693 14602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,693 14602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,694 14603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_436,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:12,694 14603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,695 14604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,695 14604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,695 14604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_437,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:12,696 14605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,696 14605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,697 14606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,697 14606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_438,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:12,698 14607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:12,698 14607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,699 14608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,700 14609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_433,formula_432,formula_430,formula_428,formula_431,formula_434,formula_429,formula_437,formula_426,formula_435,formula_438,formula_427,formula_436],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:12,701 14610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:12,701 14610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,702 14611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,703 14612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:12,703 14612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:12,703 14612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,704 14613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,704 14613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:12,705 14614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:12,705 14614 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:12,705 14614 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:12,705 14614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,705 14614 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:12,706 14615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,706 14615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_433,formula_432,formula_430,formula_428,formula_431,formula_434,formula_429,formula_437,formula_426,formula_435,formula_438,formula_427,formula_436],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:12,709 14618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:12,709 14618 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,709 14618 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,709 14618 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:12,710 14619 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:12,711 14620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,711 14620 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:12,711 14620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,715 14624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,ready)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)'),ARes),true.

2014-09-01 15:31:12,717 14626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)')),[]))
2014-09-01 15:31:12,717 14626 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:31:12,717 14626 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:31:12,717 14626 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:31:12,717 14626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:12,717 14626 [Thread-37] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:31:12,717 14626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:12,721 14630 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:12,730 14639 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:12,730 14639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:12,731 14640 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:13,226 15135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:13,226 15135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:13,226 15135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:13,227 15136 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65198
2014-09-01 15:31:13,227 15136 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65198
2014-09-01 15:31:13,227 15136 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:13,227 15136 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9636
2014-09-01 15:31:13,227 15136 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9636
2014-09-01 15:31:13,227 15136 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65198 using key 48acb6c5f0f660bd
2014-09-01 15:31:13,228 15137 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:13,229 15138 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:13,247 15156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:13,258 15167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,258 15167 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:13,259 15168 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:13,259 15168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,259 15168 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:13,259 15168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,260 15169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_451,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:13,260 15169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,260 15169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,261 15170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,261 15170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_452,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:13,261 15170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,262 15171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,262 15171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,262 15171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_453,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:13,263 15172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,263 15172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,263 15172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,263 15172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_454,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:13,264 15173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,264 15173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,264 15173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,265 15174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_455,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:13,265 15174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,266 15175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,266 15175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,266 15175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_456,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:13,267 15176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,267 15176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,268 15177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,268 15177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_457,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:13,268 15177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,269 15178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,269 15178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,270 15179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_458,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:13,270 15179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,271 15180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,271 15180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,271 15180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_459,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:13,272 15181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,272 15181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,273 15182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,273 15182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_460,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:13,274 15183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,274 15183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,274 15183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,275 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_461,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:13,275 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,276 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,276 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,277 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_462,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:13,277 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,277 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,278 15187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,278 15187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_463,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:13,279 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,279 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,279 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,280 15189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_458,formula_457,formula_455,formula_453,formula_456,formula_459,formula_454,formula_462,formula_451,formula_460,formula_463,formula_452,formula_461],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:13,280 15189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:13,281 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,281 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,282 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:13,283 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:13,283 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,283 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,284 15193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:13,285 15194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:13,285 15194 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:13,285 15194 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:13,285 15194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,285 15194 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:13,286 15195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,286 15195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_458,formula_457,formula_455,formula_453,formula_456,formula_459,formula_454,formula_462,formula_451,formula_460,formula_463,formula_452,formula_461],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:13,289 15198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:13,289 15198 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,289 15198 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,289 15198 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,289 15198 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:13,290 15199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:13,290 15199 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:13,290 15199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,294 15203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})'),ARes),true.

2014-09-01 15:31:13,295 15204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(ready = {})')),[]))
2014-09-01 15:31:13,296 15205 [Thread-39] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:13,296 15205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,296 15205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,299 15208 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:13,304 15213 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:13,306 15215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:13,306 15215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:13,945 15854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:13,945 15854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:13,945 15854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:13,945 15854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65200
2014-09-01 15:31:13,946 15855 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65200
2014-09-01 15:31:13,946 15855 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:13,946 15855 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9640
2014-09-01 15:31:13,946 15855 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9640
2014-09-01 15:31:13,946 15855 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65200 using key 48acb6c5f0f660bd
2014-09-01 15:31:13,947 15856 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:13,948 15857 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:13,963 15872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:13,970 15879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,970 15879 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:13,971 15880 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:13,971 15880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,971 15880 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:13,971 15880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,971 15880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_476,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:13,972 15881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,972 15881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,972 15881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,973 15882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_477,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:13,973 15882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,973 15882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,974 15883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,974 15883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_478,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:13,974 15883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,974 15883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,975 15884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,975 15884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_479,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:13,976 15885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,976 15885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,976 15885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,976 15885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_480,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:13,977 15886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,977 15886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,978 15887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,978 15887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_481,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:13,978 15887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,979 15888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,979 15888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,979 15888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_482,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:13,980 15889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,980 15889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,981 15890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,981 15890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_483,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:13,982 15891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,982 15891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,982 15891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,982 15891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_484,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:13,983 15892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,983 15892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,984 15893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,984 15893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_485,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:13,984 15893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,985 15894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,985 15894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,985 15894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_486,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:13,986 15895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,986 15895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,986 15895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,986 15895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_487,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:13,987 15896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,987 15896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,988 15897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,988 15897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_488,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:13,989 15898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:13,989 15898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,990 15899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,990 15899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_483,formula_482,formula_480,formula_478,formula_481,formula_484,formula_479,formula_487,formula_476,formula_485,formula_488,formula_477,formula_486],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:13,991 15900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:13,992 15901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,992 15901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,993 15902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:13,994 15903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:13,994 15903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,994 15903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,995 15904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:13,996 15905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:13,996 15905 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:13,996 15905 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:13,996 15905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:13,996 15905 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:13,997 15906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:13,997 15906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_483,formula_482,formula_480,formula_478,formula_481,formula_484,formula_479,formula_487,formula_476,formula_485,formula_488,formula_477,formula_486],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:13,999 15908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:13,999 15908 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,000 15909 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,000 15909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,001 15910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,004 15913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,ready))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready'),ARes),true.

2014-09-01 15:31:14,006 15915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : ready')),[]))
2014-09-01 15:31:14,006 15915 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: pp : ready
2014-09-01 15:31:14,007 15916 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:31:14,007 15916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,007 15916 [Thread-41] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:31:14,007 15916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,010 15919 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:14,025 15934 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:14,027 15936 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:14,027 15936 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:14,610 16519 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:14,611 16520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:14,611 16520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:14,611 16520 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65202
2014-09-01 15:31:14,611 16520 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65202
2014-09-01 15:31:14,612 16521 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:14,612 16521 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9644
2014-09-01 15:31:14,612 16521 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9644
2014-09-01 15:31:14,612 16521 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65202 using key 48acb6c5f0f660bd
2014-09-01 15:31:14,613 16522 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:14,614 16523 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:14,630 16539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:14,638 16547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,638 16547 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:14,638 16547 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:14,638 16547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,638 16547 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:14,639 16548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,639 16548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_501,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:14,639 16548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,640 16549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,640 16549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,640 16549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_502,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:14,641 16550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,641 16550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,641 16550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,641 16550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_503,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:14,642 16551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,642 16551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,643 16552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,643 16552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_504,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:14,644 16553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,644 16553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,645 16554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,645 16554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_505,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:14,645 16554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,645 16554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,646 16555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,646 16555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_506,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:14,647 16556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,647 16556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,647 16556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,647 16556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_507,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:14,648 16557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,648 16557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,649 16558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,649 16558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_508,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:14,650 16559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,650 16559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,651 16560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,651 16560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_509,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:14,652 16561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,652 16561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,652 16561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,653 16562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_510,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:14,653 16562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,653 16562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,654 16563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,654 16563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_511,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:14,655 16564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,655 16564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,655 16564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,656 16565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_512,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:14,656 16565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,657 16566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,657 16566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,657 16566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_513,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:14,658 16567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:14,658 16567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,658 16567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,659 16568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_508,formula_507,formula_505,formula_503,formula_506,formula_509,formula_504,formula_512,formula_501,formula_510,formula_513,formula_502,formula_511],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:14,660 16569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:14,660 16569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,661 16570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,661 16570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:14,662 16571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:14,662 16571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,663 16572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,664 16573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:14,664 16573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:14,665 16574 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:14,665 16574 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:14,665 16574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,665 16574 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:14,666 16575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,666 16575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_508,formula_507,formula_505,formula_503,formula_506,formula_509,formula_504,formula_512,formula_501,formula_510,formula_513,formula_502,formula_511],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:14,668 16577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:14,668 16577 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,668 16577 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,668 16577 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:14,669 16578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,669 16578 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:14,670 16579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,673 16582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}'),ARes),true.

2014-09-01 15:31:14,675 16584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active /= {}')),[]))
2014-09-01 15:31:14,675 16584 [Thread-43] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is FALSE
2014-09-01 15:31:14,675 16584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:14,676 16585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:14,679 16588 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:14,693 16602 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:14,693 16602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:14,694 16603 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65204
2014-09-01 15:31:15,327 17236 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65204
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:15,327 17236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9648
2014-09-01 15:31:15,327 17236 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9648
2014-09-01 15:31:15,328 17237 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65204 using key 48acb6c5f0f660bd
2014-09-01 15:31:15,328 17237 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:15,330 17239 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:15,346 17255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:15,355 17264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,355 17264 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:15,355 17264 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:15,355 17264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,355 17264 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:15,356 17265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,356 17265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_526,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:15,357 17266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,357 17266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,357 17266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,358 17267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_527,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:15,358 17267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,358 17267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,358 17267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,359 17268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_528,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:15,359 17268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,359 17268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,360 17269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,360 17269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_529,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:15,360 17269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,361 17270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,361 17270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,361 17270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_530,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:15,362 17271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,362 17271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,363 17272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,363 17272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_531,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:15,364 17273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,364 17273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,365 17274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,365 17274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_532,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:15,365 17274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,366 17275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,366 17275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,366 17275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_533,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:15,367 17276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,367 17276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,367 17276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,367 17276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_534,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:15,368 17277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,368 17277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,368 17277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,369 17278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_535,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:15,369 17278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,369 17278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,370 17279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,370 17279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_536,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:15,370 17279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,371 17280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,371 17280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,371 17280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_537,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:15,372 17281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,372 17281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,372 17281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,372 17281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_538,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:15,373 17282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:15,373 17282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,373 17282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,374 17283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_533,formula_532,formula_530,formula_528,formula_531,formula_534,formula_529,formula_537,formula_526,formula_535,formula_538,formula_527,formula_536],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:15,374 17283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:15,375 17284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,375 17284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,376 17285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:15,376 17285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:15,377 17286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,377 17286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,378 17287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:15,378 17287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:15,379 17288 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:15,379 17288 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:15,379 17288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,379 17288 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:15,379 17288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,379 17288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_533,formula_532,formula_530,formula_528,formula_531,formula_534,formula_529,formula_537,formula_526,formula_535,formula_538,formula_527,formula_536],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:15,382 17291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:15,382 17291 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,382 17291 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,382 17291 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:15,383 17292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,383 17292 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:15,384 17293 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,384 17293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,387 17296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})'),ARes),true.

2014-09-01 15:31:15,388 17297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active /= {})')),[]))
2014-09-01 15:31:15,389 17298 [Thread-45] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:15,389 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:15,389 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:15,392 17301 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:15,399 17308 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:15,400 17309 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:15,400 17309 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:15,982 17891 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:15,983 17892 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:15,983 17892 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:15,983 17892 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65206
2014-09-01 15:31:15,983 17892 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65206
2014-09-01 15:31:15,983 17892 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:15,983 17892 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9652
2014-09-01 15:31:15,983 17892 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9652
2014-09-01 15:31:15,984 17893 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65206 using key 48acb6c5f0f660bd
2014-09-01 15:31:15,984 17893 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:15,985 17894 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:16,006 17915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:16,017 17926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,017 17926 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:16,017 17926 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:16,018 17927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,018 17927 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:16,018 17927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,018 17927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_551,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:16,019 17928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,019 17928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,019 17928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,020 17929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_552,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:16,020 17929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,020 17929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,020 17929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,021 17930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_553,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:16,021 17930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,021 17930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,022 17931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,022 17931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_554,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:16,022 17931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,023 17932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,023 17932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,023 17932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_555,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:16,024 17933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,024 17933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,024 17933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,024 17933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_556,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:16,025 17934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,025 17934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,025 17934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,026 17935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_557,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:16,026 17935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,026 17935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,027 17936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,027 17936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_558,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:16,027 17936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,028 17937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,028 17937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,028 17937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_559,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:16,029 17938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,029 17938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,029 17938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,029 17938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_560,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:16,030 17939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,030 17939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,030 17939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,031 17940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_561,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:16,031 17940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,031 17940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,032 17941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,032 17941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_562,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:16,032 17941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,032 17941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,033 17942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,033 17942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_563,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:16,034 17943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,034 17943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,034 17943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,034 17943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_558,formula_557,formula_555,formula_553,formula_556,formula_559,formula_554,formula_562,formula_551,formula_560,formula_563,formula_552,formula_561],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:16,035 17944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:16,036 17945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,036 17945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,037 17946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:16,038 17947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:16,038 17947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,039 17948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,040 17949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:16,041 17950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:16,041 17950 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:16,041 17950 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:16,041 17950 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:16,042 17951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,042 17951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,042 17951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_558,formula_557,formula_555,formula_553,formula_556,formula_559,formula_554,formula_562,formula_551,formula_560,formula_563,formula_552,formula_561],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:16,045 17954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:16,045 17954 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,045 17954 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,045 17954 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,045 17954 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,045 17954 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,046 17955 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,046 17955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,047 17956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,050 17959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}'),ARes),true.

2014-09-01 15:31:16,051 17960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & ready = {}')),[]))
2014-09-01 15:31:16,051 17960 [Thread-47] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,052 17961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,052 17961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,055 17964 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:31:16,063 17972 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:31:16,064 17973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:31:16,064 17973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:31:16,666 18575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:31:16,666 18575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:31:16,667 18576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:31:16,667 18576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65208
2014-09-01 15:31:16,667 18576 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65208
2014-09-01 15:31:16,667 18576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:31:16,667 18576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9656
2014-09-01 15:31:16,667 18576 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9656
2014-09-01 15:31:16,667 18576 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65208 using key 48acb6c5f0f660bd
2014-09-01 15:31:16,668 18577 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:31:16,669 18578 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:31:16,690 18599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:31:16,697 18606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,697 18606 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:31:16,697 18606 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:31:16,697 18606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,697 18606 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:31:16,698 18607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,698 18607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_576,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:31:16,699 18608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,699 18608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,699 18608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,699 18608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_577,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:31:16,700 18609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,700 18609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,701 18610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,701 18610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_578,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:31:16,702 18611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,702 18611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,702 18611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,703 18612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_579,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:31:16,703 18612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,703 18612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,704 18613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,704 18613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_580,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:31:16,705 18614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,705 18614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,706 18615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,706 18615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_581,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:31:16,707 18616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,707 18616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,707 18616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,708 18617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_582,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:31:16,708 18617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,708 18617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,709 18618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,709 18618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_583,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:31:16,710 18619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,710 18619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,710 18619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,711 18620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_584,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:31:16,711 18620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,711 18620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,712 18621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,712 18621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_585,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:31:16,713 18622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,713 18622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,713 18622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,713 18622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_586,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:31:16,714 18623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,714 18623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,715 18624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,715 18624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_587,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:31:16,716 18625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,716 18625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,717 18626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,717 18626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_588,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:31:16,718 18627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:31:16,718 18627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,719 18628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,719 18628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_583,formula_582,formula_580,formula_578,formula_581,formula_584,formula_579,formula_587,formula_576,formula_585,formula_588,formula_577,formula_586],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:31:16,720 18629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:16,721 18630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,721 18630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,722 18631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:16,722 18631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:31:16,723 18632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,723 18632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,724 18633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:31:16,725 18634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:31:16,725 18634 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:31:16,725 18634 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:31:16,725 18634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,725 18634 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:31:16,726 18635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,726 18635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_583,formula_582,formula_580,formula_578,formula_581,formula_584,formula_579,formula_587,formula_576,formula_585,formula_588,formula_577,formula_586],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:31:16,729 18638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:31:16,729 18638 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,729 18638 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,729 18638 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,729 18638 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,729 18638 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:31:16,730 18639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,730 18639 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:31:16,731 18640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:31:16,734 18643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,ready)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)'),ARes),true.

2014-09-01 15:31:16,736 18645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : ready)')),[]))
2014-09-01 15:31:16,736 18645 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:31:16,736 18645 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:31:16,737 18646 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:31:16,737 18646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:31:16,737 18646 [Thread-49] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:31:16,737 18646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:38,571 3209 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:38,588 3226 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:38,611 3249 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:38,611 3249 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:39,200 3838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:39,200 3838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:39,200 3838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:39,200 3838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65271
2014-09-01 15:35:39,201 3839 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65271
2014-09-01 15:35:39,201 3839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:39,201 3839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9670
2014-09-01 15:35:39,201 3839 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9670
2014-09-01 15:35:39,202 3840 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65271 using key 49279465ebf978be
2014-09-01 15:35:39,203 3841 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:39,204 3842 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:39,410 4048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:39,421 4059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,421 4059 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:39,421 4059 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:39,421 4059 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:39,443 4081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,444 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,446 4084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:39,447 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,447 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,447 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,448 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:39,448 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,449 4087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,449 4087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,450 4088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:39,451 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,451 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,452 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,452 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:39,453 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,453 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,454 4092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,455 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:39,455 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,456 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,456 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,457 4095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:39,458 4096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,458 4096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,459 4097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,459 4097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:39,460 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,460 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,460 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,461 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:39,461 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,462 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,462 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,463 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:39,463 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,463 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,464 4102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,465 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:39,466 4104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,466 4104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,466 4104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,467 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:39,468 4106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,469 4107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,469 4107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,470 4108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:39,471 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,471 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,472 4110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,473 4111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:39,473 4111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:39,474 4112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,474 4112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,498 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:39,499 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:39,503 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,504 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,514 4152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:39,515 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:39,516 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,516 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,519 4157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:39,521 4159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:39,522 4160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,554 4192 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:39,554 4192 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:39,554 4192 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:39,555 4193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,568 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:39,571 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:39,583 4221 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,583 4221 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:39,584 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,585 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,585 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:39,585 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:39,585 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:39,585 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,586 4224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,612 4250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 15:35:39,615 4253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)')),[]))
2014-09-01 15:35:39,615 4253 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active & pp /: (ready \/ waiting))
2014-09-01 15:35:39,615 4253 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:39,616 4254 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:39,616 4254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:39,616 4254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:39,623 4261 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:39,629 4267 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:39,630 4268 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:39,630 4268 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:40,300 4938 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:40,300 4938 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:40,300 4938 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:40,300 4938 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65273
2014-09-01 15:35:40,301 4939 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65273
2014-09-01 15:35:40,301 4939 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:40,301 4939 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9674
2014-09-01 15:35:40,301 4939 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9674
2014-09-01 15:35:40,301 4939 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65273 using key 49279465ebf978be
2014-09-01 15:35:40,302 4940 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:40,303 4941 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:40,345 4983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:40,354 4992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,354 4992 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:40,355 4993 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:40,355 4993 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:40,355 4993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,355 4993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,356 4994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:40,356 4994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,357 4995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,357 4995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,358 4996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:40,358 4996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,359 4997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,359 4997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,360 4998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:40,360 4998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,361 4999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,361 4999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,362 5000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:40,362 5000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,363 5001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,363 5001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,364 5002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:40,365 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,365 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,365 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,366 5004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:40,367 5005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,367 5005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,368 5006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,368 5006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:40,369 5007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,369 5007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,370 5008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,370 5008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:40,371 5009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,371 5009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,372 5010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,372 5010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:40,373 5011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,373 5011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,374 5012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,374 5012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:40,375 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,375 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,376 5014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,377 5015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:40,377 5015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,378 5016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,378 5016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,379 5017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:40,380 5018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,380 5018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,381 5019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,381 5019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:40,382 5020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:40,382 5020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,382 5020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,383 5021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:40,384 5022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:40,386 5024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,386 5024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,388 5026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:40,389 5027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:40,390 5028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,390 5028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,392 5030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:40,393 5031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:40,394 5032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,394 5032 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:40,394 5032 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:40,394 5032 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:40,395 5033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,396 5034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_33,formula_32,formula_30,formula_28,formula_31,formula_34,formula_29,formula_37,formula_26,formula_35,formula_38,formula_27,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:40,401 5039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:40,407 5045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,407 5045 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,407 5045 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,407 5045 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:40,408 5046 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,409 5047 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,409 5047 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:40,409 5047 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:40,409 5047 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:40,409 5047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,421 5059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 15:35:40,424 5062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting')),[]))
2014-09-01 15:35:40,424 5062 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:40,424 5062 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:40,424 5062 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:40,425 5063 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:40,425 5063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:40,426 5064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:40,432 5070 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:40,439 5077 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:40,440 5078 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:40,440 5078 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:41,085 5723 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:41,086 5724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:41,086 5724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:41,086 5724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65275
2014-09-01 15:35:41,086 5724 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65275
2014-09-01 15:35:41,087 5725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:41,087 5725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9678
2014-09-01 15:35:41,087 5725 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9678
2014-09-01 15:35:41,087 5725 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65275 using key 49279465ebf978be
2014-09-01 15:35:41,088 5726 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:41,089 5727 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:41,125 5763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:41,137 5775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,137 5775 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:41,137 5775 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:41,137 5775 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:41,138 5776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,138 5776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,139 5777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:41,139 5777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,140 5778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,140 5778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,140 5778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:41,141 5779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,141 5779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,142 5780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,142 5780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:41,142 5780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,143 5781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,143 5781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,143 5781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:41,144 5782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,144 5782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,144 5782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,145 5783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:41,145 5783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,145 5783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,146 5784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,146 5784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:41,147 5785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,147 5785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,148 5786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,148 5786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:41,149 5787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,149 5787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,149 5787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,150 5788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:41,150 5788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,150 5788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,151 5789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,151 5789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:41,151 5789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,152 5790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,152 5790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,152 5790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:41,153 5791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,153 5791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,153 5791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,154 5792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:41,154 5792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,155 5793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,155 5793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,155 5793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:41,156 5794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,156 5794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,156 5794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,157 5795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:41,157 5795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,157 5795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,158 5796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,158 5796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:41,159 5797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:41,160 5798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,160 5798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,162 5800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:41,162 5800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:41,163 5801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,163 5801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,164 5802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:41,164 5802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:41,165 5803 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:41,165 5803 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:41,165 5803 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:41,165 5803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,165 5803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,166 5804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_58,formula_57,formula_55,formula_53,formula_56,formula_59,formula_54,formula_62,formula_51,formula_60,formula_63,formula_52,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:41,168 5806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:41,168 5806 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,169 5807 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,170 5808 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,172 5810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,172 5810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,180 5818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 15:35:41,182 5820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting')),[]))
2014-09-01 15:35:41,183 5821 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:41,183 5821 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:41,183 5821 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:41,183 5821 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:41,183 5821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,184 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,188 5826 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:41,194 5832 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:41,195 5833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:41,195 5833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:41,863 6501 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:41,863 6501 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:41,863 6501 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:41,864 6502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65277
2014-09-01 15:35:41,864 6502 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65277
2014-09-01 15:35:41,864 6502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:41,864 6502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9682
2014-09-01 15:35:41,864 6502 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9682
2014-09-01 15:35:41,865 6503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65277 using key 49279465ebf978be
2014-09-01 15:35:41,865 6503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:41,872 6510 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:41,901 6539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:41,913 6551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,914 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:41,914 6552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,914 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:41,914 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:41,914 6552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,915 6553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:41,915 6553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,915 6553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,916 6554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,916 6554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:41,917 6555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,917 6555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,917 6555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,918 6556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:41,918 6556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,918 6556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,919 6557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,919 6557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:41,920 6558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,920 6558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,920 6558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,921 6559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:41,921 6559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,922 6560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,922 6560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,922 6560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:41,923 6561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,923 6561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,923 6561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,924 6562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:41,925 6563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,925 6563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,925 6563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,926 6564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:41,926 6564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,926 6564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,927 6565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,927 6565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:41,928 6566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,928 6566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,928 6566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,929 6567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:41,930 6568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,930 6568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,930 6568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,931 6569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:41,931 6569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,932 6570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,932 6570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,933 6571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:41,933 6571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,933 6571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,934 6572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,934 6572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:41,935 6573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:41,935 6573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,936 6574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,936 6574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:41,937 6575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:41,938 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,939 6577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,940 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:41,941 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:41,941 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,942 6580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,942 6580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:41,943 6581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:41,943 6581 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:41,943 6581 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:41,944 6582 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:41,944 6582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,944 6582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,945 6583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_83,formula_82,formula_80,formula_78,formula_81,formula_84,formula_79,formula_87,formula_76,formula_85,formula_88,formula_77,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:41,947 6585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:41,947 6585 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,948 6586 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:41,949 6587 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:41,951 6589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,951 6589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,959 6597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)'),ARes),true.

2014-09-01 15:35:41,961 6599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)')),[]))
2014-09-01 15:35:41,962 6600 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 15:35:41,962 6600 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:41,962 6600 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:41,962 6600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:41,963 6601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:41,967 6605 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:41,975 6613 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:41,977 6615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:41,978 6616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65279
2014-09-01 15:35:42,723 7361 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65279
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:42,723 7361 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9686
2014-09-01 15:35:42,724 7362 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9686
2014-09-01 15:35:42,724 7362 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65279 using key 49279465ebf978be
2014-09-01 15:35:42,724 7362 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:42,726 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:42,752 7390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:42,759 7397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,759 7397 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:42,759 7397 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:42,759 7397 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:42,759 7397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,760 7398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,760 7398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:42,760 7398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,761 7399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,761 7399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,761 7399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:42,762 7400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,762 7400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,762 7400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,763 7401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:42,763 7401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,764 7402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,764 7402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,764 7402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:42,765 7403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,765 7403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,766 7404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,766 7404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:42,767 7405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,767 7405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,768 7406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,769 7407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:42,769 7407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,770 7408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,770 7408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,771 7409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:42,771 7409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,772 7410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,772 7410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,773 7411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:42,773 7411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,773 7411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,774 7412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,774 7412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:42,775 7413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,775 7413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,775 7413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,776 7414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:42,776 7414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,777 7415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,777 7415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,778 7416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:42,779 7417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,779 7417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,779 7417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,780 7418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:42,780 7418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,781 7419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,781 7419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,781 7419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:42,782 7420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:42,782 7420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,782 7420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,783 7421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:42,784 7422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:42,785 7423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,785 7423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,786 7424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:42,787 7425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:42,787 7425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,788 7426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,788 7426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:42,789 7427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:42,789 7427 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:42,789 7427 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:42,789 7427 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:42,790 7428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,790 7428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,791 7429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_108,formula_107,formula_105,formula_103,formula_106,formula_109,formula_104,formula_112,formula_101,formula_110,formula_113,formula_102,formula_111],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:42,793 7431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:42,793 7431 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,793 7431 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,793 7431 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,794 7432 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,795 7433 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:42,795 7433 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:42,795 7433 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:42,796 7434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,796 7434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,801 7439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active'),ARes),true.

2014-09-01 15:35:42,802 7440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active')),[]))
2014-09-01 15:35:42,802 7440 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:42,802 7440 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:42,802 7440 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:42,803 7441 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:42,803 7441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:42,803 7441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:42,807 7445 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:42,811 7449 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:42,812 7450 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:42,812 7450 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:43,416 8054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:43,416 8054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:43,416 8054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:43,416 8054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65281
2014-09-01 15:35:43,416 8054 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65281
2014-09-01 15:35:43,417 8055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:43,417 8055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9690
2014-09-01 15:35:43,417 8055 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9690
2014-09-01 15:35:43,417 8055 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65281 using key 49279465ebf978be
2014-09-01 15:35:43,417 8055 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:43,419 8057 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:43,441 8079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:43,448 8086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,448 8086 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:43,448 8086 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:43,448 8086 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:43,448 8086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,449 8087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,449 8087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:43,449 8087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,450 8088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,450 8088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,451 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:43,451 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,451 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,452 8090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,452 8090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:43,453 8091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,453 8091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,454 8092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,454 8092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:43,455 8093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,455 8093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,456 8094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,456 8094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_130,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:43,457 8095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,457 8095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,457 8095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,458 8096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:43,459 8097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,459 8097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,460 8098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,460 8098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:43,461 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,461 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,461 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,462 8100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:43,462 8100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,463 8101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,463 8101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,464 8102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:43,464 8102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,464 8102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,465 8103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,465 8103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:43,466 8104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,466 8104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,466 8104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,467 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:43,467 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,467 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,468 8106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,468 8106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:43,469 8107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,469 8107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,469 8107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,470 8108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:43,471 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:43,471 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,471 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,472 8110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:43,473 8111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:43,474 8112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,474 8112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,475 8113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:43,476 8114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:43,477 8115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,477 8115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,478 8116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:43,479 8117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:43,479 8117 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:43,479 8117 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:43,479 8117 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:43,480 8118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,480 8118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,481 8119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_133,formula_132,formula_130,formula_128,formula_131,formula_134,formula_129,formula_137,formula_126,formula_135,formula_138,formula_127,formula_136],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:43,483 8121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:43,483 8121 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,484 8122 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:43,485 8123 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:43,487 8125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,487 8125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,492 8130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 15:35:43,494 8132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)')),[]))
2014-09-01 15:35:43,494 8132 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 15:35:43,495 8133 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:43,495 8133 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:43,495 8133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:43,495 8133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:43,499 8137 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:43,507 8145 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:43,508 8146 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:43,508 8146 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:44,132 8770 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:44,141 8779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:44,141 8779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:44,141 8779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65283
2014-09-01 15:35:44,141 8779 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65283
2014-09-01 15:35:44,142 8780 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:44,142 8780 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9694
2014-09-01 15:35:44,142 8780 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9694
2014-09-01 15:35:44,142 8780 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65283 using key 49279465ebf978be
2014-09-01 15:35:44,144 8782 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:44,145 8783 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:44,167 8805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:44,175 8813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,175 8813 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:44,176 8814 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:44,176 8814 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:44,176 8814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,176 8814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,177 8815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:44,177 8815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,177 8815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,178 8816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,178 8816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:44,178 8816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,179 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,179 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,179 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:44,180 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,180 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,180 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,181 8819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:44,181 8819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,182 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,182 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,183 8821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_155,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:44,183 8821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,184 8822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,184 8822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,185 8823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_156,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:44,185 8823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,185 8823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,185 8823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,186 8824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:44,186 8824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,187 8825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,187 8825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,187 8825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:44,188 8826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,188 8826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,188 8826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,189 8827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:44,189 8827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,190 8828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,190 8828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,191 8829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:44,191 8829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,192 8830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,192 8830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,192 8830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:44,193 8831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,193 8831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,194 8832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,194 8832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:44,195 8833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,195 8833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,195 8833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,196 8834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:44,196 8834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,197 8835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,197 8835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,197 8835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:44,198 8836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:44,199 8837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,200 8838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,201 8839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:44,201 8839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:44,202 8840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,202 8840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,203 8841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:44,204 8842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:44,204 8842 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:44,204 8842 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:44,205 8843 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:44,205 8843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,205 8843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,206 8844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_158,formula_157,formula_155,formula_153,formula_156,formula_159,formula_154,formula_162,formula_151,formula_160,formula_163,formula_152,formula_161],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:44,209 8847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,209 8847 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,210 8848 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,210 8848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,211 8849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,215 8853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID'),ARes),true.

2014-09-01 15:35:44,217 8855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID')),[]))
2014-09-01 15:35:44,217 8855 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:44,217 8855 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:44,217 8855 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:44,217 8855 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:44,218 8856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,218 8856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,252 8890 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:44,256 8894 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:44,257 8895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:44,258 8896 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:44,864 9502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:44,864 9502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:44,864 9502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:44,864 9502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65285
2014-09-01 15:35:44,864 9502 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65285
2014-09-01 15:35:44,864 9502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:44,865 9503 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9698
2014-09-01 15:35:44,865 9503 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9698
2014-09-01 15:35:44,865 9503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65285 using key 49279465ebf978be
2014-09-01 15:35:44,865 9503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:44,866 9504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:44,886 9524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:44,893 9531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,893 9531 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:44,893 9531 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:44,893 9531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,893 9531 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:44,894 9532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,894 9532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:44,894 9532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,895 9533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,895 9533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,895 9533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_177,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:44,896 9534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,896 9534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,896 9534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,897 9535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_178,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:44,897 9535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,897 9535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,898 9536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,898 9536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_179,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:44,899 9537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,899 9537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,899 9537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,899 9537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_180,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:44,900 9538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,900 9538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,900 9538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,901 9539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:44,901 9539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,901 9539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,902 9540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,902 9540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:44,903 9541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,903 9541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,903 9541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,904 9542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:44,904 9542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,905 9543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,905 9543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,905 9543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:44,906 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,906 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,907 9545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,907 9545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:44,908 9546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,908 9546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,909 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,909 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:44,910 9548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,910 9548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,910 9548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,911 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:44,911 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,912 9550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,912 9550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,912 9550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:44,913 9551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:44,913 9551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,914 9552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,914 9552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:44,915 9553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:44,916 9554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,917 9555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,918 9556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:44,918 9556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:44,919 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,919 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,920 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:44,921 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:44,921 9559 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:44,921 9559 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:44,921 9559 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:44,921 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,922 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,922 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_183,formula_182,formula_180,formula_178,formula_181,formula_184,formula_179,formula_187,formula_176,formula_185,formula_188,formula_177,formula_186],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:44,926 9564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,926 9564 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:44,927 9565 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:44,928 9566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,929 9567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,934 9572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 15:35:44,936 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 15:35:44,936 9574 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 15:35:44,936 9574 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:44,936 9574 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:44,936 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:44,937 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:44,941 9579 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:44,950 9588 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:44,951 9589 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:44,951 9589 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:45,524 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:45,524 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:45,524 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:45,524 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65287
2014-09-01 15:35:45,524 10162 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65287
2014-09-01 15:35:45,525 10163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:45,525 10163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9702
2014-09-01 15:35:45,525 10163 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9702
2014-09-01 15:35:45,525 10163 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65287 using key 49279465ebf978be
2014-09-01 15:35:45,526 10164 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:45,526 10164 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:45,550 10188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:45,559 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,559 10197 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:45,559 10197 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:45,559 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,559 10197 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:45,559 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,560 10198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:45,560 10198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,561 10199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,561 10199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,561 10199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_202,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:45,562 10200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,562 10200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,562 10200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,562 10200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_203,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:45,563 10201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,563 10201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,563 10201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,564 10202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_204,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:45,564 10202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,565 10203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,565 10203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,565 10203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_205,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:45,566 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,566 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,566 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,566 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_206,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:45,567 10205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,567 10205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,568 10206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,568 10206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_207,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:45,569 10207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,569 10207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,570 10208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,570 10208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_208,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:45,571 10209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,571 10209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,571 10209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,572 10210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:45,572 10210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,573 10211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,573 10211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,573 10211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:45,574 10212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,575 10213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,575 10213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,576 10214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:45,576 10214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,577 10215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,577 10215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,577 10215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:45,578 10216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,578 10216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,579 10217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,579 10217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:45,580 10218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:45,580 10218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,580 10218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,581 10219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:45,582 10220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:45,583 10221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,583 10221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,584 10222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:45,585 10223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:45,586 10224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,586 10224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,587 10225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:45,588 10226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:45,588 10226 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:45,588 10226 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:45,588 10226 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:45,588 10226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,588 10226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,589 10227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_208,formula_207,formula_205,formula_203,formula_206,formula_209,formula_204,formula_212,formula_201,formula_210,formula_213,formula_202,formula_211],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:45,591 10229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:45,591 10229 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,592 10230 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:45,593 10231 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:45,594 10232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,594 10232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,599 10237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 15:35:45,601 10239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 15:35:45,601 10239 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:45,602 10240 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:45,602 10240 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:45,602 10240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:45,602 10240 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:45,602 10240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:45,605 10243 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:45,611 10249 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:45,612 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:45,612 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65289
2014-09-01 15:35:46,198 10836 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65289
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:46,198 10836 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9706
2014-09-01 15:35:46,199 10837 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9706
2014-09-01 15:35:46,199 10837 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65289 using key 49279465ebf978be
2014-09-01 15:35:46,199 10837 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:46,200 10838 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:46,218 10856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:46,225 10863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,225 10863 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:46,226 10864 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:46,226 10864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,226 10864 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:46,226 10864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,227 10865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_226,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:46,227 10865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,228 10866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,228 10866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,228 10866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_227,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:46,229 10867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,229 10867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,230 10868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,230 10868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_228,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:46,231 10869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,231 10869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,232 10870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,232 10870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_229,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:46,233 10871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,233 10871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,233 10871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,233 10871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_230,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:46,234 10872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,234 10872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,234 10872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,235 10873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_231,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:46,235 10873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,235 10873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,236 10874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,236 10874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_232,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:46,236 10874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,237 10875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,237 10875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,237 10875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_233,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:46,238 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,238 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,238 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,239 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_234,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:46,239 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,239 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,240 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,240 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:46,240 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,241 10879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,241 10879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,241 10879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:46,242 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,242 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,242 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,242 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:46,243 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,243 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,243 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,244 10882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:46,244 10882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,245 10883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,245 10883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,246 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:46,246 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:46,247 10885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,247 10885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,248 10886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:46,249 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:46,249 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,250 10888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,251 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:46,251 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:46,251 10889 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:46,251 10889 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:46,252 10890 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:46,252 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,252 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,252 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_233,formula_232,formula_230,formula_228,formula_231,formula_234,formula_229,formula_237,formula_226,formula_235,formula_238,formula_227,formula_236],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:46,255 10893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,255 10893 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,256 10894 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,256 10894 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,256 10894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,257 10895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,261 10899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 15:35:46,262 10900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 15:35:46,262 10900 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 15:35:46,263 10901 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:46,263 10901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,263 10901 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:46,263 10901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,266 10904 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:46,270 10908 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:46,271 10909 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:46,272 10910 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:46,889 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:46,889 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:46,889 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:46,889 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65291
2014-09-01 15:35:46,889 11527 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65291
2014-09-01 15:35:46,889 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:46,890 11528 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9710
2014-09-01 15:35:46,890 11528 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9710
2014-09-01 15:35:46,890 11528 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65291 using key 49279465ebf978be
2014-09-01 15:35:46,890 11528 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:46,891 11529 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:46,910 11548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:46,921 11559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,921 11559 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:46,921 11559 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:46,921 11559 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:46,921 11559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,922 11560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,922 11560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_251,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:46,923 11561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,923 11561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,923 11561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,924 11562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_252,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:46,924 11562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,925 11563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,925 11563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,925 11563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_253,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:46,926 11564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,926 11564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,927 11565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,927 11565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_254,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:46,927 11565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,928 11566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,928 11566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,928 11566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_255,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:46,929 11567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,929 11567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,930 11568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,930 11568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_256,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:46,930 11568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,931 11569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,931 11569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,931 11569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_257,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:46,932 11570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,932 11570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,933 11571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,933 11571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:46,934 11572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,934 11572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,934 11572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,934 11572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:46,935 11573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,935 11573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,936 11574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,936 11574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:46,937 11575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,937 11575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,938 11576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,938 11576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:46,939 11577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,939 11577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,939 11577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,939 11577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:46,940 11578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,940 11578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,941 11579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,941 11579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:46,942 11580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:46,942 11580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,942 11580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,943 11581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:46,943 11581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:46,944 11582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,945 11583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,946 11584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:46,946 11584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:46,947 11585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,947 11585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,948 11586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:46,949 11587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:46,949 11587 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:46,949 11587 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:46,949 11587 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:46,949 11587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,949 11587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,950 11588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_258,formula_257,formula_255,formula_253,formula_256,formula_259,formula_254,formula_262,formula_251,formula_260,formula_263,formula_252,formula_261],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:46,952 11590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:46,952 11590 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,952 11590 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:46,953 11591 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:46,954 11592 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:46,954 11592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,954 11592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,958 11596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 15:35:46,960 11598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 15:35:46,960 11598 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 15:35:46,961 11599 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:46,961 11599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:46,961 11599 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 15:35:46,961 11599 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:46,961 11599 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:46,961 11599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:46,965 11603 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:46,970 11608 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:46,971 11609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:46,971 11609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:47,599 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:47,599 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:47,599 12237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:47,600 12238 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65293
2014-09-01 15:35:47,600 12238 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65293
2014-09-01 15:35:47,600 12238 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:47,600 12238 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9714
2014-09-01 15:35:47,600 12238 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9714
2014-09-01 15:35:47,600 12238 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65293 using key 49279465ebf978be
2014-09-01 15:35:47,601 12239 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:47,602 12240 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:47,621 12259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:47,628 12266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,628 12266 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:47,629 12267 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:47,629 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,629 12267 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:47,629 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,629 12267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_276,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:47,630 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,630 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,630 12268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,631 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_277,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:47,631 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,632 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,632 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,632 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_278,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:47,633 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,633 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,634 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,634 12272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_279,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:47,635 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,635 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,635 12273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,636 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_280,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:47,637 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,637 12275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,638 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,638 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_281,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:47,638 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,639 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,639 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,639 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_282,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:47,640 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,640 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,640 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,641 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:47,641 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,641 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,642 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,642 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:47,642 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,643 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,643 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,643 12281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:47,644 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,644 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,644 12282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,645 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:47,645 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,645 12283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,646 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,646 12284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:47,647 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,647 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,647 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,647 12285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:47,648 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:47,648 12286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,649 12287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,649 12287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:47,650 12288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:47,650 12288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,651 12289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,652 12290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:47,652 12290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:47,653 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,653 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,654 12292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:47,655 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:47,655 12293 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:47,655 12293 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:47,655 12293 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:47,655 12293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,656 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,656 12294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_283,formula_282,formula_280,formula_278,formula_281,formula_284,formula_279,formula_287,formula_276,formula_285,formula_288,formula_277,formula_286],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:47,659 12297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,660 12298 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:47,661 12299 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:47,661 12299 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:47,662 12300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,662 12300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,668 12306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 15:35:47,670 12308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 15:35:47,670 12308 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ pp : PID)
2014-09-01 15:35:47,670 12308 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 2
2014-09-01 15:35:47,671 12309 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:47,671 12309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:47,671 12309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:47,674 12312 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:47,679 12317 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:47,681 12319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:47,682 12320 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65295
2014-09-01 15:35:48,261 12899 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65295
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:48,261 12899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9718
2014-09-01 15:35:48,261 12899 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9718
2014-09-01 15:35:48,262 12900 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65295 using key 49279465ebf978be
2014-09-01 15:35:48,262 12900 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:48,263 12901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:48,280 12918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:48,292 12930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,292 12930 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:48,292 12930 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:48,292 12930 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:48,292 12930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,292 12930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,293 12931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_301,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:48,293 12931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,294 12932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,294 12932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,294 12932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_302,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:48,295 12933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,295 12933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,295 12933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,296 12934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_303,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:48,297 12935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,297 12935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,297 12935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,297 12935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_304,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:48,298 12936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,298 12936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,298 12936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,299 12937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:48,299 12937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,299 12937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,300 12938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,300 12938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:48,301 12939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,301 12939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,301 12939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,301 12939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:48,302 12940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,302 12940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,302 12940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,303 12941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:48,303 12941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,304 12942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,304 12942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,304 12942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:48,305 12943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,305 12943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,305 12943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,306 12944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:48,306 12944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,307 12945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,307 12945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,308 12946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:48,308 12946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,308 12946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,309 12947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,309 12947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:48,310 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,310 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,310 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,310 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:48,311 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,311 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,311 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,312 12950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:48,313 12951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:48,313 12951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,314 12952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,315 12953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:48,315 12953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:48,316 12954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,316 12954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,317 12955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:48,318 12956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:48,318 12956 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:48,318 12956 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:48,318 12956 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:48,318 12956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,319 12957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,319 12957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_308,formula_307,formula_305,formula_303,formula_306,formula_309,formula_304,formula_312,formula_301,formula_310,formula_313,formula_302,formula_311],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:48,322 12960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,322 12960 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,323 12961 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,323 12961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,324 12962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,330 12968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 15:35:48,333 12971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 15:35:48,333 12971 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:48,333 12971 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:48,333 12971 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:48,333 12971 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:48,333 12971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,334 12972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,336 12974 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:48,340 12978 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:48,341 12979 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:48,341 12979 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:48,927 13565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:48,927 13565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:48,927 13565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:48,928 13566 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65297
2014-09-01 15:35:48,928 13566 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65297
2014-09-01 15:35:48,928 13566 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:48,928 13566 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9722
2014-09-01 15:35:48,928 13566 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9722
2014-09-01 15:35:48,928 13566 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65297 using key 49279465ebf978be
2014-09-01 15:35:48,929 13567 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:48,929 13567 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:48,951 13589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:48,959 13597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,959 13597 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:48,959 13597 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:48,959 13597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,959 13597 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:48,959 13597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,960 13598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_326,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:48,960 13598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,960 13598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,961 13599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,961 13599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_327,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:48,962 13600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,962 13600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,962 13600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,963 13601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_328,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:48,963 13601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,963 13601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,964 13602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,964 13602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_329,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:48,965 13603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,965 13603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,965 13603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,966 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:48,966 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,966 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,967 13605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,967 13605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:48,968 13606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,968 13606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,969 13607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,969 13607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:48,970 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,970 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,970 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,971 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:48,971 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,971 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,972 13610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,972 13610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:48,973 13611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,973 13611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,973 13611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,974 13612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:48,975 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,975 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,975 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,976 13614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:48,976 13614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,977 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,977 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,977 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:48,978 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,978 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,978 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,979 13617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:48,979 13617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:48,980 13618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,980 13618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,981 13619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:48,982 13620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:48,983 13621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,983 13621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,984 13622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:48,985 13623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:48,985 13623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,985 13623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,986 13624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:48,987 13625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:48,987 13625 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:48,987 13625 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:48,987 13625 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:48,987 13625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,987 13625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,988 13626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_333,formula_332,formula_330,formula_328,formula_331,formula_334,formula_329,formula_337,formula_326,formula_335,formula_338,formula_327,formula_336],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:48,990 13628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:48,990 13628 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:48,991 13629 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:48,992 13630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:48,993 13631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:48,999 13637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 15:35:49,001 13639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 15:35:49,001 13639 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 15:35:49,001 13639 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:49,002 13640 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:49,002 13640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,002 13640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,006 13644 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:49,011 13649 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:49,012 13650 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:49,012 13650 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:49,650 14288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:49,651 14289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:49,651 14289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:49,651 14289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65299
2014-09-01 15:35:49,651 14289 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65299
2014-09-01 15:35:49,651 14289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:49,651 14289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9726
2014-09-01 15:35:49,651 14289 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9726
2014-09-01 15:35:49,652 14290 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65299 using key 49279465ebf978be
2014-09-01 15:35:49,652 14290 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:49,653 14291 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:49,671 14309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:49,683 14321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,683 14321 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:49,683 14321 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:49,683 14321 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:49,684 14322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,684 14322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,684 14322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:49,685 14323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,685 14323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,685 14323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,686 14324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:49,686 14324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,686 14324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,687 14325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,687 14325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:49,687 14325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,687 14325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,688 14326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,688 14326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:49,689 14327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,689 14327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,689 14327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,689 14327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:49,690 14328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,690 14328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,690 14328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,691 14329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:49,691 14329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,691 14329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,692 14330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,692 14330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:49,692 14330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,692 14330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,693 14331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,693 14331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:49,694 14332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,694 14332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,694 14332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,694 14332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:49,695 14333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,695 14333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,695 14333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,696 14334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:49,696 14334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,696 14334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,697 14335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,697 14335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:49,697 14335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,698 14336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,698 14336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,698 14336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:49,699 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,699 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,699 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,699 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:49,700 14338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:49,700 14338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,700 14338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,701 14339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:49,702 14340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:49,702 14340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,703 14341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,704 14342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:49,704 14342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:49,704 14342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,705 14343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,706 14344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:49,706 14344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:49,707 14345 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:49,707 14345 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:49,707 14345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,707 14345 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:49,707 14345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,708 14346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_358,formula_357,formula_355,formula_353,formula_356,formula_359,formula_354,formula_362,formula_351,formula_360,formula_363,formula_352,formula_361],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:49,711 14349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,711 14349 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,712 14350 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:49,712 14350 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:49,712 14350 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:49,712 14350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,713 14351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,719 14357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 15:35:49,721 14359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 15:35:49,721 14359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 15:35:49,721 14359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 15:35:49,721 14359 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 15:35:49,721 14359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:49,722 14360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:49,725 14363 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:49,734 14372 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:49,735 14373 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:49,735 14373 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:50,339 14977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:50,347 14985 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:50,348 14986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:50,348 14986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65301
2014-09-01 15:35:50,348 14986 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65301
2014-09-01 15:35:50,348 14986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:50,349 14987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9730
2014-09-01 15:35:50,349 14987 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9730
2014-09-01 15:35:50,349 14987 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65301 using key 49279465ebf978be
2014-09-01 15:35:50,350 14988 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:50,351 14989 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:50,370 15008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:50,379 15017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,379 15017 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:50,379 15017 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:50,379 15017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,379 15017 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:50,380 15018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,380 15018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:50,380 15018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,380 15018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,381 15019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,381 15019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:50,382 15020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,382 15020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,382 15020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,382 15020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_378,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:50,383 15021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,383 15021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,383 15021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,384 15022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_379,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:50,384 15022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,384 15022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,385 15023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,385 15023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_380,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:50,386 15024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,386 15024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,386 15024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,387 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_381,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:50,387 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,387 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,388 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,388 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_382,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:50,388 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,389 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,389 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,389 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_383,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:50,390 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,390 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,390 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,390 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_384,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:50,391 15029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,391 15029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,391 15029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,392 15030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_385,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:50,392 15030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,392 15030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,393 15031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,393 15031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_386,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:50,394 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,394 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,394 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,394 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_387,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:50,395 15033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,395 15033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,396 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,396 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_388,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:50,396 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:50,397 15035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,397 15035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,398 15036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:50,399 15037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:50,399 15037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,400 15038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,401 15039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:50,401 15039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:50,402 15040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,402 15040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,403 15041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:50,404 15042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:50,404 15042 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:50,404 15042 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:50,404 15042 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:50,404 15042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,405 15043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,405 15043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_383,formula_382,formula_380,formula_378,formula_381,formula_384,formula_379,formula_387,formula_376,formula_385,formula_388,formula_377,formula_386],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:50,408 15046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,408 15046 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:50,409 15047 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:50,409 15047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,415 15053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 15:35:50,418 15056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 15:35:50,418 15056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:50,418 15056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:50,418 15056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:50,418 15056 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:50,418 15056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:50,419 15057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:50,422 15060 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 15:35:50,426 15064 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 15:35:50,428 15066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 15:35:50,428 15066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65303
2014-09-01 15:35:51,319 15957 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65303
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 15:35:51,319 15957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9734
2014-09-01 15:35:51,320 15958 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9734
2014-09-01 15:35:51,320 15958 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65303 using key 49279465ebf978be
2014-09-01 15:35:51,320 15958 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 15:35:51,321 15959 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 15:35:51,336 15974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 15:35:51,343 15981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,343 15981 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 15:35:51,343 15981 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 15:35:51,343 15981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,343 15981 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 15:35:51,344 15982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,344 15982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 15:35:51,345 15983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,345 15983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,345 15983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,346 15984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 15:35:51,346 15984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,346 15984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,347 15985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,347 15985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 15:35:51,348 15986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,348 15986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,349 15987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,349 15987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_404,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 15:35:51,350 15988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,350 15988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,350 15988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,350 15988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_405,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 15:35:51,351 15989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,351 15989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,351 15989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,352 15990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_406,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 15:35:51,352 15990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,352 15990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,353 15991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,353 15991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_407,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 15:35:51,354 15992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,354 15992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,355 15993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,355 15993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_408,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 15:35:51,356 15994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,356 15994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,356 15994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,356 15994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_409,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 15:35:51,357 15995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,357 15995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,357 15995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,358 15996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_410,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 15:35:51,358 15996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,358 15996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,359 15997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,359 15997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_411,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 15:35:51,360 15998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,360 15998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,360 15998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,361 15999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_412,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 15:35:51,361 15999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,361 15999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,362 16000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,362 16000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_413,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 15:35:51,363 16001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 15:35:51,363 16001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,363 16001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,364 16002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 15:35:51,365 16003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:51,365 16003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,366 16004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,367 16005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:51,367 16005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 15:35:51,368 16006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,368 16006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,369 16007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 15:35:51,370 16008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 15:35:51,370 16008 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 15:35:51,370 16008 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 15:35:51,370 16008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,370 16008 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 15:35:51,370 16008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,371 16009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_408,formula_407,formula_405,formula_403,formula_406,formula_409,formula_404,formula_412,formula_401,formula_410,formula_413,formula_402,formula_411],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 15:35:51,373 16011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 15:35:51,373 16011 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 15:35:51,374 16012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,374 16012 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 15:35:51,375 16013 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 15:35:51,375 16013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 15:35:51,380 16018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 15:35:51,382 16020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 15:35:51,382 16020 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 15:35:51,383 16021 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 15:35:51,383 16021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 15:35:51,383 16021 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 15:35:51,383 16021 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 15:35:51,383 16021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:58,776 3695 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:05:58,790 3709 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:05:58,809 3728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:05:58,810 3729 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:05:59,413 4332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:05:59,413 4332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:05:59,413 4332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:05:59,413 4332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65448
2014-09-01 16:05:59,413 4332 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65448
2014-09-01 16:05:59,414 4333 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:05:59,414 4333 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9777
2014-09-01 16:05:59,414 4333 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9777
2014-09-01 16:05:59,415 4334 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65448 using key 15267119ca0b41d0
2014-09-01 16:05:59,416 4335 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:05:59,417 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:05:59,632 4551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:05:59,640 4559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,640 4559 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:05:59,640 4559 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:05:59,641 4560 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:05:59,665 4584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,666 4585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,668 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:05:59,669 4588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,669 4588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,670 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,670 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:05:59,671 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,671 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,671 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,672 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:05:59,672 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,672 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,673 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,673 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:05:59,674 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,674 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,675 4594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,676 4595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:05:59,677 4596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,677 4596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,678 4597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,678 4597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:05:59,679 4598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,679 4598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,680 4599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,680 4599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:05:59,681 4600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,681 4600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,681 4600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,682 4601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:05:59,682 4601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,683 4602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,683 4602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,683 4602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:05:59,684 4603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,684 4603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,685 4604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,685 4604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:05:59,686 4605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,686 4605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,686 4605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,687 4606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:05:59,688 4607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,688 4607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,688 4607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,689 4608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:05:59,689 4608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,689 4608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,690 4609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,690 4609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:05:59,691 4610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:05:59,691 4610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,692 4611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,711 4630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:05:59,712 4631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:05:59,715 4634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,715 4634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,729 4648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:05:59,730 4649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:05:59,731 4650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,731 4650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,736 4655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:05:59,738 4657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:05:59,738 4657 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:05:59,738 4657 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:05:59,738 4657 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:05:59,739 4658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,740 4659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,750 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:05:59,754 4673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,756 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:05:59,757 4676 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:05:59,765 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,766 4685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:05:59,784 4703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),R),true.

2014-09-01 16:05:59,786 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:05:59,788 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:05:59,788 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:33,810 6318 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:33,824 6332 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:33,846 6354 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:33,847 6355 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:34,465 6973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:34,466 6974 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:34,466 6974 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:34,466 6974 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65465
2014-09-01 16:07:34,466 6974 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65465
2014-09-01 16:07:34,466 6974 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:34,467 6975 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9785
2014-09-01 16:07:34,467 6975 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9785
2014-09-01 16:07:34,468 6976 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65465 using key 5414815fcb83d00c
2014-09-01 16:07:34,469 6977 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:34,470 6978 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:34,672 7180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:34,679 7187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,679 7187 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:34,680 7188 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:34,680 7188 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:34,700 7208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,700 7208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,702 7210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:34,703 7211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,703 7211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,703 7211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,704 7212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:34,705 7213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,705 7213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,705 7213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,706 7214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:34,706 7214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,706 7214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,707 7215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,707 7215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:34,708 7216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,708 7216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,708 7216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,709 7217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:34,710 7218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,710 7218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,710 7218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,711 7219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:34,711 7219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,712 7220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,712 7220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,712 7220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:34,713 7221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,713 7221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,714 7222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,714 7222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:34,715 7223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,715 7223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,715 7223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,716 7224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:34,717 7225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,717 7225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,717 7225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,718 7226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:34,719 7227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,719 7227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,720 7228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,720 7228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:34,721 7229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,721 7229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,721 7229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,722 7230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:34,722 7230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,723 7231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,723 7231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,724 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:34,724 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:34,725 7233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,725 7233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,739 7247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:34,741 7249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:34,745 7253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,745 7253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,759 7267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:34,760 7268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:34,761 7269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,762 7270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,767 7275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:34,768 7276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:34,769 7277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:34,769 7277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:34,769 7277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:34,770 7278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,770 7278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,782 7290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:34,785 7293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:34,785 7293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:34,786 7294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:34,787 7295 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:34,794 7302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,794 7302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,811 7319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),R),true.

2014-09-01 16:07:34,812 7320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:34,814 7322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,815 7323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,823 7331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 16:07:34,826 7334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)')),[]))
2014-09-01 16:07:34,828 7336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:34,828 7336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active & pp /: (ready \/ waiting))
2014-09-01 16:07:34,828 7336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:34,828 7336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:34,829 7337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:34,837 7345 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:34,843 7351 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:34,845 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:34,845 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65467
2014-09-01 16:07:35,537 8045 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65467
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:35,537 8045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9789
2014-09-01 16:07:35,538 8046 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9789
2014-09-01 16:07:35,538 8046 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65467 using key 5414815fcb83d00c
2014-09-01 16:07:35,538 8046 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:35,539 8047 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:35,570 8078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:35,578 8086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,578 8086 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:35,579 8087 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:35,579 8087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,579 8087 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:35,579 8087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,580 8088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:35,581 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,581 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,581 8089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,582 8090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:35,583 8091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,583 8091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,583 8091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,584 8092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:35,584 8092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,584 8092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,585 8093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,585 8093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:35,586 8094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,586 8094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,586 8094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,587 8095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:35,588 8096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,588 8096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,588 8096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,589 8097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:35,589 8097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,590 8098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,590 8098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,591 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:35,591 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,591 8099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,592 8100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,592 8100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:35,593 8101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,593 8101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,593 8101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,594 8102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:35,595 8103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,595 8103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,595 8103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,596 8104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:35,596 8104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,597 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,597 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,597 8105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:35,598 8106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,598 8106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,599 8107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,599 8107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:35,600 8108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,600 8108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,600 8108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,601 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_39,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:35,601 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:35,601 8109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,602 8110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,602 8110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:35,603 8111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:35,605 8113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,605 8113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,606 8114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:35,607 8115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:35,607 8115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,608 8116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,609 8117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:35,610 8118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:35,610 8118 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:35,610 8118 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:35,610 8118 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:35,611 8119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,611 8119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,612 8120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:35,614 8122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:35,614 8122 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,614 8122 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,614 8122 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:35,615 8123 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,616 8124 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,616 8124 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:35,616 8124 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:35,616 8124 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:35,619 8127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,619 8127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,629 8137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),R),true.

2014-09-01 16:07:35,631 8139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:35,632 8140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,633 8141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,640 8148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 16:07:35,643 8151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting')),[]))
2014-09-01 16:07:35,643 8151 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:35,643 8151 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:35,643 8151 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:35,643 8151 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:35,644 8152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:35,644 8152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:35,650 8158 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:35,654 8162 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:35,655 8163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:35,655 8163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:36,252 8760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:36,252 8760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:36,252 8760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:36,252 8760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65469
2014-09-01 16:07:36,253 8761 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65469
2014-09-01 16:07:36,253 8761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:36,253 8761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9793
2014-09-01 16:07:36,253 8761 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9793
2014-09-01 16:07:36,253 8761 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65469 using key 5414815fcb83d00c
2014-09-01 16:07:36,254 8762 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:36,255 8763 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:36,282 8790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:36,289 8797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,289 8797 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:36,290 8798 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:36,290 8798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,290 8798 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:36,290 8798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,291 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:36,291 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,291 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,292 8800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,292 8800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:36,293 8801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,293 8801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,293 8801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,294 8802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:36,294 8802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,294 8802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,295 8803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,295 8803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:36,296 8804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,296 8804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,296 8804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,297 8805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:36,297 8805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,298 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,298 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,298 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:36,299 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,299 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,300 8808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,300 8808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:36,301 8809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,301 8809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,302 8810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,303 8811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:36,303 8811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,304 8812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,304 8812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,305 8813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:36,305 8813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,305 8813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,306 8814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,306 8814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:36,307 8815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,307 8815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,308 8816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,308 8816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:36,309 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,309 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,309 8817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,310 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:36,310 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,310 8818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,311 8819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,312 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:36,312 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,313 8821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,313 8821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,314 8822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:36,315 8823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:36,317 8825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,317 8825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,318 8826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:36,318 8826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:36,319 8827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,319 8827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,320 8828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:36,321 8829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:36,321 8829 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:36,321 8829 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:36,321 8829 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:36,321 8829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,322 8830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,322 8830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:36,325 8833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,325 8833 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,326 8834 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,327 8835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,328 8836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,333 8841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),R),true.

2014-09-01 16:07:36,334 8842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:07:36,335 8843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,335 8843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,340 8848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 16:07:36,341 8849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting')),[]))
2014-09-01 16:07:36,342 8850 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:36,342 8850 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:36,342 8850 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:36,342 8850 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:36,342 8850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,343 8851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,348 8856 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:36,353 8861 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:36,355 8863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:36,355 8863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:36,919 9427 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:36,919 9427 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:36,919 9427 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:36,919 9427 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65471
2014-09-01 16:07:36,919 9427 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65471
2014-09-01 16:07:36,920 9428 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:36,920 9428 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9797
2014-09-01 16:07:36,920 9428 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9797
2014-09-01 16:07:36,920 9428 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65471 using key 5414815fcb83d00c
2014-09-01 16:07:36,921 9429 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:36,922 9430 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:36,952 9460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:36,959 9467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,959 9467 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:36,959 9467 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:36,959 9467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,959 9467 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:36,960 9468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,960 9468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:36,961 9469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,961 9469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,961 9469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,962 9470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:36,962 9470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,962 9470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,963 9471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,963 9471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:36,964 9472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,964 9472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,964 9472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,965 9473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:36,966 9474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,966 9474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,966 9474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,967 9475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:36,967 9475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,968 9476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,968 9476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,969 9477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:36,969 9477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,969 9477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,970 9478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,970 9478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:36,971 9479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,971 9479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,971 9479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,972 9480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:36,972 9480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,973 9481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,973 9481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,973 9481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:36,974 9482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,974 9482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,975 9483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,975 9483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:36,976 9484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,976 9484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,977 9485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,977 9485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_89,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:36,978 9486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,978 9486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,978 9486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,979 9487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_90,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:36,980 9488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,980 9488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,980 9488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,981 9489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_91,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:36,982 9490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:36,982 9490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,982 9490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,983 9491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:36,983 9491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:36,984 9492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,985 9493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,986 9494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:36,987 9495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:36,987 9495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,988 9496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,988 9496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:36,989 9497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:36,989 9497 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:36,989 9497 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:36,990 9498 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:36,990 9498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,990 9498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:36,991 9499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:36,993 9501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:36,993 9501 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,993 9501 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,993 9501 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,993 9501 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:36,994 9502 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:36,996 9504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:36,996 9504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,001 9509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),R),true.

2014-09-01 16:07:37,003 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:07:37,003 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,004 9512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,008 9516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)'),ARes),true.

2014-09-01 16:07:37,009 9517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)')),[]))
2014-09-01 16:07:37,009 9517 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:07:37,009 9517 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:37,010 9518 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:37,010 9518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,010 9518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,014 9522 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:37,018 9526 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:37,019 9527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:37,019 9527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:37,616 10124 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:37,617 10125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:37,617 10125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:37,617 10125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65473
2014-09-01 16:07:37,617 10125 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65473
2014-09-01 16:07:37,617 10125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:37,617 10125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9801
2014-09-01 16:07:37,617 10125 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9801
2014-09-01 16:07:37,618 10126 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65473 using key 5414815fcb83d00c
2014-09-01 16:07:37,618 10126 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:37,619 10127 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:37,639 10147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:37,646 10154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,646 10154 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:37,646 10154 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:37,646 10154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,647 10155 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:37,647 10155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,648 10156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:37,649 10157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,649 10157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,649 10157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,650 10158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:37,650 10158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,650 10158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,651 10159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,651 10159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:37,651 10159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,652 10160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,652 10160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,652 10160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:37,653 10161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,653 10161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,654 10162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,654 10162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:37,655 10163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,655 10163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,655 10163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,656 10164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:37,656 10164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,656 10164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,657 10165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,657 10165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:37,658 10166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,658 10166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,658 10166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,659 10167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:37,659 10167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,659 10167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,660 10168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,660 10168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:37,661 10169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,661 10169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,661 10169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,662 10170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:37,663 10171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,663 10171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,663 10171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,664 10172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_115,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:37,664 10172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,665 10173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,665 10173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,665 10173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_116,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:37,666 10174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,666 10174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,667 10175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,667 10175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:37,668 10176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:37,668 10176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,668 10176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,669 10177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:37,670 10178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:37,671 10179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,671 10179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,673 10181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:37,673 10181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:37,674 10182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,674 10182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,675 10183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:37,676 10184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:37,676 10184 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:37,676 10184 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:37,676 10184 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:37,677 10185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,677 10185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,678 10186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:37,680 10188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:37,680 10188 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,681 10189 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:37,682 10190 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:37,683 10191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,684 10192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,688 10196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),R),true.

2014-09-01 16:07:37,689 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:07:37,690 10198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,690 10198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,694 10202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active'),ARes),true.

2014-09-01 16:07:37,696 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active')),[]))
2014-09-01 16:07:37,696 10204 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:37,696 10204 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:37,696 10204 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:37,696 10204 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:37,696 10204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:37,697 10205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:37,700 10208 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:37,704 10212 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:37,706 10214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:37,706 10214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:38,331 10839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:38,332 10840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:38,332 10840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:38,332 10840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65475
2014-09-01 16:07:38,332 10840 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65475
2014-09-01 16:07:38,332 10840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:38,332 10840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9805
2014-09-01 16:07:38,332 10840 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9805
2014-09-01 16:07:38,333 10841 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65475 using key 5414815fcb83d00c
2014-09-01 16:07:38,333 10841 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:38,334 10842 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:38,357 10865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:38,366 10874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,366 10874 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:38,366 10874 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:38,366 10874 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:38,366 10874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,367 10875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,367 10875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:38,368 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,368 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,368 10876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,369 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:38,369 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,369 10877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,370 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,370 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:38,370 10878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,371 10879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,371 10879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,372 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:38,372 10880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,373 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,373 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,373 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:38,374 10882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,374 10882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,374 10882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,375 10883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:38,375 10883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,375 10883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,376 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,376 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:38,376 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,377 10885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,377 10885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,377 10885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:38,378 10886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,378 10886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,378 10886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,379 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:38,379 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,379 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,379 10887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,380 10888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:38,380 10888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,381 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,381 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,381 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_141,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:38,382 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,382 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,382 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,383 10891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:38,383 10891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,383 10891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,384 10892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,384 10892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:38,385 10893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:38,385 10893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,385 10893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,386 10894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:38,386 10894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:38,387 10895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,388 10896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,389 10897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:38,389 10897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:38,390 10898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,390 10898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,391 10899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:38,392 10900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:38,392 10900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:38,392 10900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:38,392 10900 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:38,393 10901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,393 10901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,393 10901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:38,396 10904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:38,396 10904 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,396 10904 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,396 10904 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,397 10905 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:38,398 10906 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:38,398 10906 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:38,400 10908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,400 10908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,405 10913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),R),true.

2014-09-01 16:07:38,407 10915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:07:38,407 10915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,407 10915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,411 10919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 16:07:38,413 10921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)')),[]))
2014-09-01 16:07:38,413 10921 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:07:38,413 10921 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:38,413 10921 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:38,413 10921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:38,414 10922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:38,417 10925 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:38,424 10932 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:38,426 10934 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:38,426 10934 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:39,124 11632 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:39,125 11633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:39,125 11633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:39,125 11633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65477
2014-09-01 16:07:39,125 11633 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65477
2014-09-01 16:07:39,125 11633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:39,125 11633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9809
2014-09-01 16:07:39,125 11633 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9809
2014-09-01 16:07:39,126 11634 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65477 using key 5414815fcb83d00c
2014-09-01 16:07:39,126 11634 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:39,127 11635 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:39,146 11654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:39,153 11661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,153 11661 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:39,153 11661 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:39,153 11661 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:39,153 11661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,154 11662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,154 11662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:39,155 11663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,155 11663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,156 11664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,156 11664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:39,156 11664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,157 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,157 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,157 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:39,158 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,158 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,158 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,159 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:39,159 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,159 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,160 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,160 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:39,160 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,160 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,161 11669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,161 11669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:39,162 11670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,162 11670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,162 11670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,163 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:39,163 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,163 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,163 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,164 11672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:39,164 11672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,164 11672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,165 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,165 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:39,166 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,166 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,166 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,167 11675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:39,167 11675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,168 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,168 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,168 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:39,169 11677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,169 11677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,170 11678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,170 11678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:39,171 11679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,172 11680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,172 11680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,173 11681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:39,174 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,174 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,174 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,175 11683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:39,176 11684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:39,176 11684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,177 11685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,178 11686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:39,178 11686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:39,178 11686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,179 11687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,180 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:39,180 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:39,181 11689 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:39,181 11689 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:39,181 11689 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:39,181 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,181 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,182 11690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:39,184 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,185 11693 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,186 11694 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,187 11695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,187 11695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,191 11699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:07:39,193 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:07:39,193 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,193 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,197 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID'),ARes),true.

2014-09-01 16:07:39,198 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID')),[]))
2014-09-01 16:07:39,199 11707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:39,199 11707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:39,199 11707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:39,199 11707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:39,199 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,199 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,245 11753 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:39,250 11758 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:39,253 11761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:39,254 11762 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:39,931 12439 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:39,932 12440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:39,932 12440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:39,932 12440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65479
2014-09-01 16:07:39,932 12440 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65479
2014-09-01 16:07:39,932 12440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:39,932 12440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9813
2014-09-01 16:07:39,932 12440 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9813
2014-09-01 16:07:39,933 12441 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65479 using key 5414815fcb83d00c
2014-09-01 16:07:39,933 12441 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:39,934 12442 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:39,955 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:39,962 12470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,962 12470 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:39,962 12470 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:39,962 12470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,962 12470 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:39,963 12471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,963 12471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:39,964 12472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,964 12472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,964 12472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,965 12473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:39,965 12473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,965 12473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,966 12474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,966 12474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:39,966 12474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,967 12475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,967 12475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,967 12475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:39,968 12476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,968 12476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,969 12477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,969 12477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:39,970 12478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,970 12478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,971 12479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,971 12479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:39,972 12480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,972 12480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,973 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,973 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:39,973 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,974 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,974 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,974 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:39,975 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,975 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,975 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,976 12484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:39,976 12484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,977 12485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,977 12485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,977 12485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:39,978 12486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,979 12487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,979 12487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,980 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:39,980 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,980 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,981 12489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,981 12489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:39,982 12490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,982 12490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,982 12490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,983 12491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:39,983 12491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:39,984 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,984 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,985 12493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:39,985 12493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:39,986 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,986 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,988 12496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:39,989 12497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:39,989 12497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,990 12498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,991 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:39,991 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:39,991 12499 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:39,992 12500 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:39,992 12500 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:39,992 12500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,992 12500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:39,993 12501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:39,995 12503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,996 12504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:39,997 12505 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:39,997 12505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:39,998 12506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,002 12510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:07:40,003 12511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:40,004 12512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,004 12512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,008 12516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 16:07:40,010 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 16:07:40,010 12518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:07:40,010 12518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:40,010 12518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:40,010 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,011 12519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,014 12522 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:40,017 12525 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:40,018 12526 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:40,019 12527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:40,657 13165 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:40,665 13173 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:40,666 13174 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:40,666 13174 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65481
2014-09-01 16:07:40,666 13174 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65481
2014-09-01 16:07:40,666 13174 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:40,666 13174 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9817
2014-09-01 16:07:40,667 13175 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9817
2014-09-01 16:07:40,667 13175 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65481 using key 5414815fcb83d00c
2014-09-01 16:07:40,668 13176 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:40,669 13177 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:40,699 13207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:40,710 13218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,711 13219 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:40,711 13219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,711 13219 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:40,711 13219 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:40,711 13219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,712 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:40,712 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,712 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,713 13221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,713 13221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:40,714 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,714 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,714 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,715 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:40,715 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,715 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,716 13224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,716 13224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:40,716 13224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,717 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,717 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,717 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:40,718 13226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,719 13227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,719 13227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,720 13228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:40,721 13229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,721 13229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,721 13229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,722 13230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:40,722 13230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,723 13231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,723 13231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,723 13231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:40,724 13232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,724 13232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,725 13233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,725 13233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:40,726 13234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,726 13234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,726 13234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,727 13235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:40,728 13236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,728 13236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,728 13236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,729 13237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:40,730 13238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,730 13238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,730 13238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,731 13239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:40,732 13240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,732 13240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,732 13240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,733 13241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:40,734 13242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:40,734 13242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,735 13243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,736 13244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:40,737 13245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:40,738 13246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,738 13246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,739 13247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:40,740 13248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:40,741 13249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,741 13249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,742 13250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:40,743 13251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:40,743 13251 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:40,744 13252 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:40,744 13252 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:40,744 13252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,744 13252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,745 13253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:40,748 13256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:40,748 13256 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,748 13256 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:40,749 13257 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,750 13258 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,750 13258 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:40,750 13258 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:40,750 13258 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:40,750 13258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,751 13259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,755 13263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:07:40,756 13264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:40,757 13265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,757 13265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,761 13269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 16:07:40,764 13272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 16:07:40,765 13273 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:40,765 13273 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:40,765 13273 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:40,765 13273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:40,765 13273 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:40,765 13273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:40,770 13278 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:40,779 13287 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:40,780 13288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:40,781 13289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:41,417 13925 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:41,418 13926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:41,418 13926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:41,418 13926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65483
2014-09-01 16:07:41,419 13927 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65483
2014-09-01 16:07:41,419 13927 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:41,419 13927 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9821
2014-09-01 16:07:41,419 13927 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9821
2014-09-01 16:07:41,419 13927 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65483 using key 5414815fcb83d00c
2014-09-01 16:07:41,420 13928 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:41,421 13929 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:41,440 13948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:41,447 13955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,447 13955 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:41,448 13956 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:41,448 13956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,448 13956 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:41,448 13956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,449 13957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:41,449 13957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,449 13957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,450 13958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,450 13958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:41,451 13959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,451 13959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,451 13959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,452 13960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:41,452 13960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,452 13960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,453 13961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,453 13961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:41,454 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,454 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,454 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,454 13962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:41,455 13963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,455 13963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,456 13964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,456 13964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:41,456 13964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,457 13965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,457 13965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,457 13965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:41,458 13966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,458 13966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,459 13967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,459 13967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:41,460 13968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,460 13968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,461 13969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,461 13969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:41,462 13970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,462 13970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,463 13971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,463 13971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:41,464 13972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,464 13972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,464 13972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,465 13973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:41,466 13974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,466 13974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,466 13974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,467 13975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:41,468 13976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,468 13976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,469 13977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,469 13977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:41,470 13978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:41,470 13978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,470 13978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,471 13979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:41,472 13980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:41,473 13981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,473 13981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,474 13982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:41,475 13983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:41,475 13983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,475 13983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,476 13984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:41,477 13985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:41,477 13985 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:41,477 13985 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:41,477 13985 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:41,477 13985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,478 13986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,478 13986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:41,481 13989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:41,481 13989 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:41,482 13990 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:41,483 13991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,483 13991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,488 13996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:07:41,489 13997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:41,489 13997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,490 13998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,493 14001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 16:07:41,495 14003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 16:07:41,495 14003 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:07:41,495 14003 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:41,495 14003 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:41,495 14003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:41,496 14004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:41,499 14007 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:41,502 14010 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:41,503 14011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:41,504 14012 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:42,112 14620 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65485
2014-09-01 16:07:42,113 14621 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65485
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9825
2014-09-01 16:07:42,113 14621 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9825
2014-09-01 16:07:42,113 14621 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65485 using key 5414815fcb83d00c
2014-09-01 16:07:42,114 14622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:42,115 14623 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:42,131 14639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:42,138 14646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,138 14646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:42,138 14646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:42,138 14646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,138 14646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:42,139 14647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,139 14647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:42,139 14647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,140 14648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,140 14648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,140 14648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:42,141 14649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,142 14650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,142 14650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,142 14650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:42,143 14651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,143 14651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,143 14651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,144 14652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:42,144 14652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,144 14652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,145 14653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,145 14653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:42,145 14653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,146 14654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,146 14654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,146 14654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:42,147 14655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,147 14655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,147 14655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,148 14656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:42,148 14656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,149 14657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,149 14657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,149 14657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:42,150 14658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,150 14658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,150 14658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,151 14659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:42,151 14659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,151 14659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,152 14660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,152 14660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:42,152 14660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,153 14661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,153 14661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,153 14661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_271,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:42,154 14662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,154 14662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,155 14663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,155 14663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_272,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:42,156 14664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,156 14664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,157 14665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,157 14665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_273,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:42,158 14666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,158 14666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,158 14666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,159 14667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:42,160 14668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:42,161 14669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,161 14669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,162 14670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:42,163 14671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:42,163 14671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,164 14672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,165 14673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:42,166 14674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:42,166 14674 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:42,166 14674 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:42,166 14674 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:42,166 14674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,166 14674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,167 14675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:42,169 14677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:42,169 14677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,169 14677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,169 14677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,170 14678 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,171 14679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,171 14679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,176 14684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:07:42,177 14685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:07:42,178 14686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,178 14686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,182 14690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 16:07:42,185 14693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 16:07:42,185 14693 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:07:42,185 14693 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:42,185 14693 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:07:42,185 14693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,185 14693 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:42,185 14693 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:42,185 14693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,190 14698 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:42,193 14701 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:42,194 14702 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:42,195 14703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:42,804 15312 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65487
2014-09-01 16:07:42,805 15313 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65487
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9829
2014-09-01 16:07:42,805 15313 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9829
2014-09-01 16:07:42,805 15313 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65487 using key 5414815fcb83d00c
2014-09-01 16:07:42,806 15314 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:42,807 15315 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:42,830 15338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:42,840 15348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,841 15349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:42,841 15349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:42,841 15349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:42,841 15349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,841 15349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,842 15350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:42,843 15351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,843 15351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,843 15351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,843 15351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:42,844 15352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,844 15352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,845 15353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,845 15353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:42,845 15353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,846 15354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,846 15354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,846 15354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:42,847 15355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,848 15356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,848 15356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,848 15356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:42,849 15357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,849 15357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,849 15357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,850 15358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:42,850 15358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,851 15359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,851 15359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,851 15359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:42,852 15360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,852 15360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,853 15361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,853 15361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:42,854 15362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,854 15362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,854 15362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,854 15362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:42,855 15363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,855 15363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,856 15364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,856 15364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_296,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:42,857 15365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,857 15365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,858 15366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,858 15366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_297,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:42,858 15366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,859 15367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,859 15367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,860 15368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_298,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:42,860 15368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,860 15368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,861 15369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,861 15369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_299,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:42,862 15370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:42,863 15371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,863 15371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,864 15372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:42,864 15372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:42,865 15373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,865 15373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,866 15374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:42,867 15375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:42,867 15375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,868 15376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,868 15376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:42,869 15377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:42,869 15377 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:42,869 15377 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:42,869 15377 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:42,869 15377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,870 15378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,870 15378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:42,872 15380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,873 15381 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:42,874 15382 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:42,874 15382 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:42,874 15382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,875 15383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,880 15388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:07:42,882 15390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:42,882 15390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,882 15390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,886 15394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:07:42,889 15397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:07:42,889 15397 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ pp : PID)
2014-09-01 16:07:42,889 15397 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 2
2014-09-01 16:07:42,889 15397 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:42,889 15397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:42,889 15397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:42,893 15401 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:42,896 15404 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:42,897 15405 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:42,897 15405 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65489
2014-09-01 16:07:43,510 16018 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65489
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:43,510 16018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9833
2014-09-01 16:07:43,510 16018 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9833
2014-09-01 16:07:43,511 16019 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65489 using key 5414815fcb83d00c
2014-09-01 16:07:43,511 16019 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:43,512 16020 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:43,528 16036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:43,537 16045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,538 16046 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:43,538 16046 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:43,538 16046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,538 16046 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:43,539 16047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,539 16047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:43,540 16048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,540 16048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,541 16049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,541 16049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:43,542 16050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,542 16050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,543 16051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,543 16051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:43,544 16052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,544 16052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,545 16053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,545 16053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:43,545 16053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,546 16054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,546 16054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,547 16055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:43,547 16055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,548 16056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,548 16056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,549 16057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_318,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:43,549 16057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,549 16057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,550 16058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,550 16058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_319,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:43,551 16059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,551 16059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,551 16059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,552 16060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_320,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:43,552 16060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,552 16060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,553 16061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,553 16061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_321,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:43,553 16061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,554 16062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,554 16062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,554 16062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_322,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:43,555 16063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,555 16063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,555 16063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,556 16064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_323,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:43,556 16064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,556 16064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,557 16065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,557 16065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_324,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:43,557 16065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,557 16065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,558 16066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,558 16066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_325,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:43,558 16066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:43,559 16067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,559 16067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,559 16067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:43,560 16068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:43,561 16069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,561 16069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,562 16070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:43,562 16070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:43,563 16071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,563 16071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,564 16072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:43,564 16072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:43,564 16072 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:43,564 16072 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:43,565 16073 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:43,565 16073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,565 16073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,566 16074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:43,568 16076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,568 16076 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:43,569 16077 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:43,569 16077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,570 16078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,575 16083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:07:43,577 16085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:43,578 16086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,578 16086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,584 16092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:07:43,588 16096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:07:43,588 16096 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:43,588 16096 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:43,588 16096 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:43,588 16096 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:43,589 16097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:43,589 16097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:43,592 16100 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:43,598 16106 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:43,598 16106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:43,598 16106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:44,288 16796 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:44,288 16796 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:44,288 16796 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:44,288 16796 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65491
2014-09-01 16:07:44,288 16796 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65491
2014-09-01 16:07:44,288 16796 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:44,289 16797 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9837
2014-09-01 16:07:44,289 16797 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9837
2014-09-01 16:07:44,289 16797 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65491 using key 5414815fcb83d00c
2014-09-01 16:07:44,289 16797 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:44,290 16798 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:44,307 16815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:44,320 16828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,321 16829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,322 16830 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:44,322 16830 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:44,323 16831 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:44,323 16831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,324 16832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:44,324 16832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,325 16833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,325 16833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,326 16834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:44,326 16834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,327 16835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,327 16835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,327 16835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:44,328 16836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,328 16836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,328 16836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,329 16837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:44,329 16837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,330 16838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,330 16838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,330 16838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_343,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:44,331 16839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,331 16839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,332 16840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,332 16840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_344,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:44,333 16841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,333 16841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,333 16841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,334 16842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_345,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:44,335 16843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,335 16843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,335 16843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,335 16843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_346,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:44,336 16844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,336 16844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,336 16844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,337 16845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_347,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:44,337 16845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,337 16845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,338 16846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,338 16846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_348,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:44,338 16846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,339 16847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,339 16847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,339 16847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_349,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:44,340 16848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,340 16848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,340 16848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,341 16849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_350,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:44,341 16849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,341 16849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,342 16850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,342 16850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:44,343 16851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:44,343 16851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,343 16851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,344 16852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:44,345 16853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:44,345 16853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,346 16854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,347 16855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:44,348 16856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:44,348 16856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,348 16856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,349 16857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:44,350 16858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:44,350 16858 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:44,350 16858 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:44,350 16858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,350 16858 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:44,351 16859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,351 16859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:44,354 16862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,355 16863 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:44,356 16864 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:44,356 16864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,357 16865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,364 16872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),R),true.

2014-09-01 16:07:44,367 16875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:44,368 16876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,369 16877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,374 16882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 16:07:44,377 16885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 16:07:44,377 16885 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:07:44,377 16885 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:44,377 16885 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:44,377 16885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:44,378 16886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:44,381 16889 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:44,385 16893 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:44,386 16894 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:44,386 16894 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65493
2014-09-01 16:07:45,042 17550 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65493
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:45,042 17550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9841
2014-09-01 16:07:45,042 17550 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9841
2014-09-01 16:07:45,043 17551 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65493 using key 5414815fcb83d00c
2014-09-01 16:07:45,043 17551 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:45,044 17552 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:45,060 17568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:45,067 17575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,067 17575 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:45,068 17576 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:45,068 17576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,068 17576 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:45,068 17576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,068 17576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_365,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:45,069 17577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,069 17577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,069 17577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,070 17578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_366,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:45,070 17578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,071 17579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,071 17579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,071 17579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_367,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:45,072 17580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,073 17581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,073 17581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,074 17582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_368,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:45,076 17584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,076 17584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,077 17585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,077 17585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_369,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:45,078 17586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,078 17586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,078 17586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,079 17587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_370,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:45,079 17587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,079 17587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,080 17588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,080 17588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_371,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:45,080 17588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,080 17588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,081 17589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,081 17589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_372,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:45,081 17589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,082 17590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,082 17590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,082 17590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_373,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:45,083 17591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,083 17591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,083 17591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,083 17591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_374,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:45,084 17592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,084 17592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,084 17592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,085 17593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_375,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:45,086 17594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,086 17594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,086 17594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,087 17595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:45,088 17596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,088 17596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,088 17596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,089 17597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:45,090 17598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,090 17598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,090 17598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,091 17599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:45,092 17600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:45,092 17600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,093 17601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,094 17602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:45,094 17602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:45,095 17603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,095 17603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,096 17604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:45,097 17605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:45,097 17605 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:45,098 17606 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:45,098 17606 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:45,098 17606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,098 17606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,099 17607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:45,103 17611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:45,103 17611 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,103 17611 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,103 17611 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,103 17611 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,104 17612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,104 17612 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,105 17613 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,105 17613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,110 17618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:07:45,113 17621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:45,114 17622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,114 17622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,121 17629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:07:45,124 17632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:07:45,124 17632 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:07:45,124 17632 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:07:45,124 17632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,124 17632 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:07:45,124 17632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,127 17635 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:45,136 17644 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:45,137 17645 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:45,138 17646 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65495
2014-09-01 16:07:45,821 18329 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65495
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:45,821 18329 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9845
2014-09-01 16:07:45,822 18330 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9845
2014-09-01 16:07:45,822 18330 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65495 using key 5414815fcb83d00c
2014-09-01 16:07:45,822 18330 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:45,823 18331 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:45,840 18348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:45,847 18355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,847 18355 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:45,847 18355 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:45,847 18355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,847 18355 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:45,848 18356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,848 18356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_391,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:45,849 18357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,849 18357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,849 18357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,849 18357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_392,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:45,850 18358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,850 18358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,851 18359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,851 18359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_393,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:45,851 18359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,851 18359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,852 18360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,852 18360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_394,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:45,853 18361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,853 18361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,853 18361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,854 18362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_395,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:45,854 18362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,855 18363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,855 18363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,855 18363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_396,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:45,856 18364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,856 18364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,856 18364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,857 18365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_397,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:45,857 18365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,858 18366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,858 18366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,858 18366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_398,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:45,859 18367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,860 18368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,860 18368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,860 18368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_399,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:45,861 18369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,861 18369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,861 18369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,862 18370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_400,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:45,862 18370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,862 18370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,863 18371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,863 18371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:45,863 18371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,864 18372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,864 18372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,864 18372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:45,865 18373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,865 18373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,865 18373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,865 18373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:45,866 18374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:45,866 18374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,867 18375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,867 18375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:45,868 18376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:45,869 18377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,869 18377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,870 18378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:45,871 18379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:45,871 18379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,872 18380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,872 18380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:45,873 18381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:45,873 18381 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:45,873 18381 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:45,873 18381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,873 18381 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:45,874 18382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,874 18382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:45,876 18384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:45,876 18384 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,877 18385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,877 18385 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,878 18386 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,878 18386 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:45,878 18386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,878 18386 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:45,878 18386 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:45,885 18393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),R),true.

2014-09-01 16:07:45,887 18395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:45,887 18395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,887 18395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,891 18399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 16:07:45,893 18401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 16:07:45,893 18401 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:45,894 18402 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:45,894 18402 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:45,894 18402 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:45,894 18402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:45,894 18402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:45,897 18405 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:07:45,903 18411 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:07:45,904 18412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:07:45,905 18413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:07:46,520 19028 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:07:46,528 19036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:07:46,529 19037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:07:46,529 19037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65497
2014-09-01 16:07:46,529 19037 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65497
2014-09-01 16:07:46,529 19037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:07:46,529 19037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9849
2014-09-01 16:07:46,529 19037 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9849
2014-09-01 16:07:46,530 19038 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65497 using key 5414815fcb83d00c
2014-09-01 16:07:46,530 19038 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:07:46,531 19039 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:07:46,546 19054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:07:46,552 19060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,553 19061 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:07:46,553 19061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,553 19061 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:07:46,553 19061 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:07:46,553 19061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,553 19061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_417,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:07:46,554 19062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,554 19062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,555 19063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,555 19063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_418,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:07:46,556 19064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,556 19064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,556 19064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,556 19064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_419,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:07:46,557 19065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,557 19065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,557 19065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,558 19066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_420,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:07:46,558 19066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,558 19066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,558 19066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,559 19067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_421,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:07:46,559 19067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,559 19067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,560 19068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,560 19068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_422,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:07:46,560 19068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,560 19068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,561 19069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,561 19069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_423,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:07:46,561 19069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,562 19070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,562 19070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,562 19070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_424,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:07:46,563 19071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,563 19071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,563 19071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,563 19071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_425,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:07:46,564 19072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,564 19072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,564 19072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,564 19072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_426,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:07:46,565 19073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,565 19073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,565 19073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,566 19074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_427,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:07:46,566 19074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,566 19074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,567 19075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,567 19075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_428,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:07:46,568 19076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,568 19076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,568 19076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,569 19077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_429,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:07:46,569 19077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:07:46,570 19078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,570 19078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,571 19079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_424,formula_423,formula_421,formula_419,formula_422,formula_425,formula_420,formula_428,formula_417,formula_426,formula_429,formula_418,formula_427],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:07:46,571 19079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:46,572 19080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,572 19080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,573 19081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:46,574 19082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:07:46,574 19082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,574 19082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,575 19083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:07:46,576 19084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:07:46,576 19084 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:07:46,576 19084 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:07:46,576 19084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,576 19084 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:07:46,576 19084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,577 19085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_424,formula_423,formula_421,formula_419,formula_422,formula_425,formula_420,formula_428,formula_417,formula_426,formula_429,formula_418,formula_427],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:07:46,579 19087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:46,579 19087 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:07:46,580 19088 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:07:46,580 19088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,581 19089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,586 19094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:07:46,588 19096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:07:46,589 19097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,589 19097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:07:46,593 19101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:07:46,596 19104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:07:46,596 19104 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:07:46,596 19104 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:07:46,596 19104 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:07:46,596 19104 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:07:46,596 19104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:07:46,597 19105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:07,932 3246 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:07,948 3262 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:07,969 3283 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:07,970 3284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:08,602 3916 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:08,603 3917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:08,603 3917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:08,603 3917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65500
2014-09-01 16:09:08,603 3917 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65500
2014-09-01 16:09:08,603 3917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:08,603 3917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9855
2014-09-01 16:09:08,604 3918 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9855
2014-09-01 16:09:08,605 3919 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65500 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:08,605 3919 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:08,606 3920 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:08,823 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:08,832 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,832 4146 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:08,832 4146 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:08,832 4146 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:08,850 4164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,851 4165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,853 4167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:08,853 4167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,853 4167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,854 4168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,854 4168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:08,855 4169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,855 4169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,856 4170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,856 4170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:08,856 4170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,857 4171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,857 4171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,858 4172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:08,858 4172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,859 4173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,859 4173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,860 4174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:08,860 4174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,860 4174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,861 4175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,861 4175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:08,862 4176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,862 4176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,863 4177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,864 4178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:08,864 4178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,865 4179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,865 4179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,866 4180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:08,867 4181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,867 4181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,867 4181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,868 4182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:08,869 4183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,869 4183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,869 4183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,870 4184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:08,870 4184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,871 4185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,871 4185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,872 4186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:08,872 4186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,873 4187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,873 4187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,874 4188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:08,874 4188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,875 4189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,875 4189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,876 4190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:08,877 4191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:08,877 4191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,878 4192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,895 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:08,897 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:08,901 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,902 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,915 4229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:08,916 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:08,917 4231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,918 4232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,922 4236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:08,923 4237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:08,925 4239 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:08,925 4239 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:08,925 4239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,925 4239 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:08,925 4239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,938 4252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:08,942 4256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:08,942 4256 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,942 4256 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:08,943 4257 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:08,944 4258 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,944 4258 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,944 4258 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:08,944 4258 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:08,944 4258 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:08,955 4269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,955 4269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,977 4291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),R),true.

2014-09-01 16:09:08,980 4294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:08,982 4296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,983 4297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:08,992 4306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 16:09:08,995 4309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID & pp /: active & pp /: ready \\/ waiting)')),[]))
2014-09-01 16:09:08,997 4311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:08,997 4311 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active & pp /: (ready \/ waiting))
2014-09-01 16:09:08,997 4311 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:08,997 4311 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:08,998 4312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,010 4324 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:09,021 4335 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:09,022 4336 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:09,022 4336 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:09,792 5106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:09,792 5106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:09,792 5106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:09,793 5107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65502
2014-09-01 16:09:09,793 5107 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65502
2014-09-01 16:09:09,793 5107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:09,793 5107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9859
2014-09-01 16:09:09,793 5107 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9859
2014-09-01 16:09:09,793 5107 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65502 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:09,794 5108 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:09,794 5108 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:09,839 5153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:09,850 5164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,851 5165 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:09,851 5165 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:09,851 5165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,851 5165 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:09,851 5165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,852 5166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:09,852 5166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,853 5167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,853 5167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,854 5168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:09,854 5168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,855 5169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,855 5169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,856 5170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:09,857 5171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,857 5171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,857 5171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,858 5172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:09,859 5173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,859 5173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,860 5174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,860 5174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:09,861 5175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,861 5175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,862 5176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,862 5176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:09,863 5177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,863 5177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,864 5178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,864 5178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:09,865 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,865 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,865 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,866 5180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:09,866 5180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,866 5180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,867 5181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,867 5181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:09,868 5182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,868 5182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,868 5182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,869 5183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:09,870 5184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,870 5184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,870 5184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,871 5185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:09,872 5186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,872 5186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,873 5187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,874 5188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:09,875 5189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,875 5189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,875 5189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,876 5190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_39,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:09,877 5191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:09,877 5191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,878 5192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,879 5193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:09,880 5194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:09,882 5196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,883 5197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,885 5199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:09,885 5199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:09,886 5200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,887 5201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,888 5202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:09,890 5204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:09,890 5204 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:09,890 5204 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:09,890 5204 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:09,891 5205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,891 5205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,892 5206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:09,896 5210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:09,896 5210 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,896 5210 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,897 5211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:09,898 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:09,902 5216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,902 5216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,913 5227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),R),true.

2014-09-01 16:09:09,915 5229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:09,917 5231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,917 5231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,925 5239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 16:09:09,928 5242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & pp /: active & pp /: ready \\/ waiting')),[]))
2014-09-01 16:09:09,928 5242 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:09,929 5243 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:09,929 5243 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:09,929 5243 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:09,929 5243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:09,930 5244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:09,936 5250 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:09,944 5258 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:09,945 5259 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:09,945 5259 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:10,628 5942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:10,628 5942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:10,628 5942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:10,628 5942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65504
2014-09-01 16:09:10,628 5942 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65504
2014-09-01 16:09:10,629 5943 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:10,629 5943 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9863
2014-09-01 16:09:10,629 5943 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9863
2014-09-01 16:09:10,629 5943 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65504 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:10,630 5944 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:10,632 5946 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:10,666 5980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:10,677 5991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,677 5991 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:10,678 5992 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:10,678 5992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,678 5992 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:10,678 5992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,679 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:10,679 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,679 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,680 5994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,680 5994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:10,680 5994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,681 5995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,681 5995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,682 5996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:10,682 5996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,683 5997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,683 5997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,683 5997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:10,684 5998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,684 5998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,685 5999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,685 5999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:10,685 5999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,686 6000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,686 6000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,687 6001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:10,687 6001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,687 6001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,688 6002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,688 6002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:10,689 6003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,689 6003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,689 6003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,690 6004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:10,690 6004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,690 6004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,691 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,691 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:10,692 6006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,692 6006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,692 6006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,693 6007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:10,693 6007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,693 6007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,694 6008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,694 6008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:10,695 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,695 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,695 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,696 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:10,696 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,697 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,697 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,697 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:10,698 6012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:10,698 6012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,698 6012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,699 6013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:10,700 6014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:10,701 6015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,701 6015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,703 6017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:10,703 6017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:10,704 6018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,704 6018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,705 6019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:10,706 6020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:10,706 6020 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:10,706 6020 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:10,706 6020 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:10,706 6020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,707 6021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,708 6022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:10,711 6025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:10,711 6025 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,711 6025 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,711 6025 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,711 6025 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,712 6026 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,713 6027 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:10,713 6027 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:10,713 6027 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:10,714 6028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,715 6029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,720 6034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),R),true.

2014-09-01 16:09:10,721 6035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:09:10,722 6036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,723 6037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,728 6042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting'),ARes),true.

2014-09-01 16:09:10,731 6045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting')),[]))
2014-09-01 16:09:10,731 6045 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:10,732 6046 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:10,732 6046 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:10,732 6046 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:10,732 6046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:10,733 6047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:10,738 6052 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:10,745 6059 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:10,746 6060 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:10,747 6061 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:11,526 6840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:11,527 6841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:11,528 6842 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:11,528 6842 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65506
2014-09-01 16:09:11,529 6843 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65506
2014-09-01 16:09:11,529 6843 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:11,530 6844 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9867
2014-09-01 16:09:11,530 6844 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9867
2014-09-01 16:09:11,530 6844 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65506 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:11,531 6845 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:11,532 6846 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:11,571 6885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:11,580 6894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,580 6894 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:11,580 6894 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:11,580 6894 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:11,580 6894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,581 6895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,581 6895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:11,582 6896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,582 6896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,583 6897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,584 6898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:11,585 6899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,586 6900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,586 6900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,587 6901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:11,588 6902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,588 6902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,589 6903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,589 6903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:11,590 6904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,591 6905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,591 6905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,592 6906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:11,593 6907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,593 6907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,594 6908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,595 6909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:11,596 6910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,596 6910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,597 6911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,597 6911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:11,598 6912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,599 6913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,600 6914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,600 6914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:11,601 6915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,601 6915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,602 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,602 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:11,603 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,603 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,604 6918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,604 6918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:11,605 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,605 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,605 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,606 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_89,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:11,606 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,607 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,607 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,607 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_90,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:11,608 6922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,608 6922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,608 6922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,609 6923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_91,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:11,609 6923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:11,610 6924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,610 6924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,610 6924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:11,611 6925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:11,612 6926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,613 6927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,614 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:11,616 6930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:11,617 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,618 6932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,620 6934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:11,621 6935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:11,621 6935 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:11,621 6935 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:11,621 6935 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:11,622 6936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,622 6936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,623 6937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:11,625 6939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:11,625 6939 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,626 6940 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:11,627 6941 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:11,629 6943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,629 6943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,637 6951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),R),true.

2014-09-01 16:09:11,638 6952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:09:11,639 6953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,639 6953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,644 6958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)'),ARes),true.

2014-09-01 16:09:11,646 6960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active)')),[]))
2014-09-01 16:09:11,646 6960 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:09:11,647 6961 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:11,647 6961 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:11,647 6961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:11,648 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:11,657 6971 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:11,662 6976 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:11,663 6977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:11,663 6977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:12,383 7697 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:12,383 7697 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:12,383 7697 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:12,383 7697 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65508
2014-09-01 16:09:12,384 7698 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65508
2014-09-01 16:09:12,384 7698 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:12,384 7698 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9871
2014-09-01 16:09:12,384 7698 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9871
2014-09-01 16:09:12,384 7698 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65508 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:12,385 7699 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:12,386 7700 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:12,406 7720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:12,415 7729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,415 7729 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:12,415 7729 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:12,415 7729 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:12,415 7729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,416 7730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,416 7730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:12,416 7730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,417 7731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,417 7731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,417 7731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:12,418 7732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,418 7732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,418 7732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,419 7733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:12,419 7733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,420 7734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,420 7734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,420 7734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:12,421 7735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,422 7736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,422 7736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,423 7737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:12,424 7738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,424 7738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,424 7738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,425 7739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:12,425 7739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,426 7740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,426 7740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,426 7740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:12,427 7741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,427 7741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,427 7741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,428 7742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:12,428 7742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,428 7742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,429 7743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,429 7743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:12,430 7744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,430 7744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,430 7744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,431 7745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:12,432 7746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,432 7746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,432 7746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,433 7747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_115,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:12,433 7747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,434 7748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,434 7748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,435 7749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_116,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:12,435 7749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,435 7749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,436 7750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,436 7750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:12,437 7751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:12,437 7751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,438 7752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,438 7752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:12,439 7753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:12,440 7754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,440 7754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,441 7755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:12,442 7756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:12,442 7756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,443 7757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,444 7758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:12,444 7758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:12,445 7759 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:12,445 7759 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:12,445 7759 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:12,445 7759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,445 7759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,446 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:12,449 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:12,449 7763 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:12,450 7764 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:12,453 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,453 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,458 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),R),true.

2014-09-01 16:09:12,459 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:09:12,460 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,460 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,464 7778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active'),ARes),true.

2014-09-01 16:09:12,466 7780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active')),[]))
2014-09-01 16:09:12,466 7780 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:12,466 7780 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:12,466 7780 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:12,466 7780 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:12,466 7780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:12,467 7781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:12,470 7784 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:12,474 7788 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:12,475 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:12,475 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:13,111 8425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65510
2014-09-01 16:09:13,112 8426 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65510
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9875
2014-09-01 16:09:13,112 8426 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9875
2014-09-01 16:09:13,112 8426 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65510 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:13,113 8427 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:13,114 8428 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:13,140 8454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:13,149 8463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,149 8463 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:13,149 8463 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:13,149 8463 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:13,149 8463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,150 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,150 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:13,151 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,151 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,151 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,152 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:13,153 8467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,153 8467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,153 8467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,154 8468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:13,155 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,155 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,155 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,156 8470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:13,157 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,157 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,157 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,157 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:13,158 8472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,158 8472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,159 8473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,159 8473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:13,160 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,160 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,160 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,161 8475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:13,161 8475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,161 8475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,162 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,162 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:13,162 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,163 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,163 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,163 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:13,164 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,164 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,164 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,165 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:13,165 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,165 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,166 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,166 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_141,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:13,168 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,168 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,169 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,170 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:13,171 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,172 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,172 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,173 8487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:13,174 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:13,174 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,175 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,175 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:13,176 8490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:13,178 8492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,178 8492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,179 8493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:13,180 8494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:13,180 8494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,180 8494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,181 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:13,182 8496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:13,182 8496 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:13,182 8496 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:13,182 8496 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:13,183 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,183 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,184 8498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:13,187 8501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:13,187 8501 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,187 8501 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,187 8501 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,188 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,189 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:13,189 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:13,189 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:13,190 8504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,190 8504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,196 8510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),R),true.

2014-09-01 16:09:13,197 8511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:09:13,197 8511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,198 8512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,202 8516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)'),ARes),true.

2014-09-01 16:09:13,204 8518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting)')),[]))
2014-09-01 16:09:13,204 8518 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:09:13,204 8518 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:13,204 8518 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:13,205 8519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:13,205 8519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:13,208 8522 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:13,215 8529 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:13,216 8530 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:13,217 8531 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:13,973 9287 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:13,981 9295 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:13,982 9296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:13,982 9296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65513
2014-09-01 16:09:13,982 9296 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65513
2014-09-01 16:09:13,982 9296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:13,983 9297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9879
2014-09-01 16:09:13,983 9297 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9879
2014-09-01 16:09:13,983 9297 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65513 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:13,984 9298 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:13,985 9299 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:14,011 9325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:14,019 9333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,020 9334 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:14,020 9334 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:14,020 9334 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:14,020 9334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,021 9335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,022 9336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:14,022 9336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,023 9337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,023 9337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,024 9338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:14,024 9338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,024 9338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,025 9339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,025 9339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:14,026 9340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,026 9340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,026 9340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,027 9341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:14,028 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,028 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,029 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,029 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:14,030 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,030 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,031 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,031 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:14,032 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,032 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,032 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,033 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:14,033 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,033 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,034 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,034 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:14,034 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,035 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,035 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,035 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:14,036 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,036 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,036 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,037 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:14,037 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,038 9352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,038 9352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,039 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:14,039 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,039 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,040 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,040 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:14,041 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,041 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,041 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,042 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:14,042 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,042 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,043 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,043 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:14,044 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:14,045 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,045 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,046 9360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:14,047 9361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:14,047 9361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,047 9361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,048 9362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:14,049 9363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:14,049 9363 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:14,049 9363 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:14,049 9363 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:14,049 9363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,050 9364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,050 9364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:14,053 9367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,053 9367 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,054 9368 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,055 9369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,055 9369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,059 9373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:09:14,061 9375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),[]))),[]))
2014-09-01 16:09:14,061 9375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,061 9375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,065 9379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID'),ARes),true.

2014-09-01 16:09:14,066 9380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID')),[]))
2014-09-01 16:09:14,066 9380 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:14,067 9381 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:14,067 9381 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:14,067 9381 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:14,067 9381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,067 9381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,114 9428 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:14,118 9432 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:14,120 9434 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:14,120 9434 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:14,775 10089 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:14,775 10089 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:14,776 10090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:14,776 10090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65515
2014-09-01 16:09:14,776 10090 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65515
2014-09-01 16:09:14,776 10090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:14,776 10090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9883
2014-09-01 16:09:14,776 10090 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9883
2014-09-01 16:09:14,776 10090 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65515 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:14,777 10091 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:14,778 10092 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:14,799 10113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:14,806 10120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,806 10120 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:14,807 10121 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:14,807 10121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,807 10121 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:14,807 10121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,808 10122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:14,808 10122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,808 10122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,809 10123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,809 10123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:14,809 10123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,809 10123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,810 10124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,810 10124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:14,811 10125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,811 10125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,811 10125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,811 10125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:14,812 10126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,812 10126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,813 10127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,813 10127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:14,814 10128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,814 10128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,814 10128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,815 10129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:14,816 10130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,816 10130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,816 10130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,817 10131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:14,818 10132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,818 10132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,818 10132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,819 10133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:14,820 10134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,820 10134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,820 10134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,820 10134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:14,821 10135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,821 10135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,822 10136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,822 10136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:14,823 10137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,823 10137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,823 10137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,824 10138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:14,824 10138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,825 10139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,825 10139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,825 10139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:14,826 10140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,826 10140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,827 10141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,827 10141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:14,827 10141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:14,828 10142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,828 10142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,829 10143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:14,830 10144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:14,831 10145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,831 10145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,832 10146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:14,833 10147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:14,833 10147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,834 10148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,835 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:14,835 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:14,835 10149 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:14,836 10150 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:14,836 10150 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:14,836 10150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,836 10150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,837 10151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:14,839 10153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:14,839 10153 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,839 10153 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,839 10153 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:14,840 10154 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:14,841 10155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,841 10155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,845 10159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:09:14,846 10160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:14,847 10161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,847 10161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,852 10166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 16:09:14,855 10169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 16:09:14,855 10169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:14,855 10169 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:09:14,856 10170 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:14,856 10170 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:14,856 10170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:14,859 10173 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:14,865 10179 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:14,866 10180 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:14,866 10180 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:15,462 10776 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:15,463 10777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:15,463 10777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:15,463 10777 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65517
2014-09-01 16:09:15,463 10777 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65517
2014-09-01 16:09:15,464 10778 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:15,464 10778 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9887
2014-09-01 16:09:15,464 10778 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9887
2014-09-01 16:09:15,464 10778 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65517 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:15,465 10779 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:15,468 10782 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:15,487 10801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:15,494 10808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,494 10808 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:15,494 10808 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:15,494 10808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,494 10808 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:15,494 10808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,495 10809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:15,495 10809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,495 10809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,496 10810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,496 10810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:15,497 10811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,497 10811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,497 10811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,497 10811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:15,498 10812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,498 10812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,498 10812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,499 10813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:15,499 10813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,500 10814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,500 10814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,501 10815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:15,501 10815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,501 10815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,502 10816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,502 10816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:15,503 10817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,503 10817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,503 10817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,503 10817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:15,504 10818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,504 10818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,504 10818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,505 10819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:15,505 10819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,505 10819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,506 10820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,506 10820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:15,506 10820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,507 10821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,507 10821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,507 10821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:15,508 10822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,508 10822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,508 10822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,509 10823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:15,509 10823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,509 10823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,510 10824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,510 10824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:15,510 10824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,510 10824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,511 10825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,511 10825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:15,512 10826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:15,512 10826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,512 10826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,513 10827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:15,514 10828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:15,514 10828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,515 10829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,516 10830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:15,516 10830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:15,516 10830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,517 10831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,518 10832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:15,518 10832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:15,518 10832 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:15,518 10832 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:15,518 10832 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:15,519 10833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,519 10833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,519 10833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:15,522 10836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,522 10836 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:15,523 10837 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:15,524 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,524 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,528 10842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:09:15,530 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:15,530 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,530 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,534 10848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID'),ARes),true.

2014-09-01 16:09:15,536 10850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & pp /: ready \\/ waiting & pp : PID')),[]))
2014-09-01 16:09:15,537 10851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:15,538 10852 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:15,538 10852 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:15,539 10853 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:15,539 10853 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:15,539 10853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:15,543 10857 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:15,548 10862 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:15,548 10862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:15,549 10863 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65519
2014-09-01 16:09:16,163 11477 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65519
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:16,163 11477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9891
2014-09-01 16:09:16,163 11477 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9891
2014-09-01 16:09:16,164 11478 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65519 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:16,164 11478 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:16,165 11479 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:16,184 11498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:16,190 11504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,190 11504 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:16,191 11505 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:16,191 11505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,191 11505 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:16,191 11505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,191 11505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:16,192 11506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,192 11506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,192 11506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,193 11507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:16,193 11507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,193 11507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,194 11508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,194 11508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:16,194 11508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,195 11509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,195 11509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,195 11509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:16,196 11510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,196 11510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,197 11511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,197 11511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:16,198 11512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,198 11512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,198 11512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,198 11512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:16,199 11513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,199 11513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,200 11514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,200 11514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:16,200 11514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,201 11515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,201 11515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,201 11515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:16,202 11516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,202 11516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,202 11516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,203 11517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:16,203 11517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,204 11518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,204 11518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,204 11518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:16,205 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,205 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,205 11519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,206 11520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:16,206 11520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,207 11521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,207 11521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,208 11522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:16,208 11522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,208 11522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,209 11523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,209 11523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:16,209 11523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,210 11524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,210 11524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,210 11524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:16,211 11525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:16,212 11526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,212 11526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,213 11527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:16,214 11528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:16,214 11528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,215 11529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,216 11530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:16,217 11531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:16,217 11531 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:16,217 11531 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:16,217 11531 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:16,217 11531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,218 11532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,218 11532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:16,220 11534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:16,220 11534 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,221 11535 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,222 11536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,222 11536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,226 11540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:09:16,227 11541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:16,228 11542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,228 11542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,231 11545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 16:09:16,233 11547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 16:09:16,233 11547 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:09:16,234 11548 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:16,234 11548 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:16,234 11548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,234 11548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,237 11551 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:16,241 11555 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:16,242 11556 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:16,243 11557 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:16,889 12203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:16,889 12203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:16,889 12203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:16,889 12203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65521
2014-09-01 16:09:16,890 12204 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65521
2014-09-01 16:09:16,890 12204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:16,890 12204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9895
2014-09-01 16:09:16,890 12204 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9895
2014-09-01 16:09:16,890 12204 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65521 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:16,890 12204 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:16,891 12205 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:16,910 12224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:16,918 12232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,918 12232 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:16,918 12232 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:16,918 12232 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:16,918 12232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,919 12233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,919 12233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:16,919 12233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,920 12234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,920 12234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,920 12234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:16,921 12235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,921 12235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,921 12235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,922 12236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:16,922 12236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,922 12236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,923 12237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,923 12237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:16,924 12238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,924 12238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,924 12238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,925 12239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:16,925 12239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,925 12239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,926 12240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,926 12240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:16,927 12241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,927 12241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,927 12241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,928 12242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:16,928 12242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,929 12243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,929 12243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,930 12244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:16,930 12244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,931 12245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,931 12245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,932 12246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:16,932 12246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,932 12246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,933 12247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,933 12247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:16,933 12247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,934 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,934 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,934 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_271,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:16,935 12249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,935 12249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,935 12249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,936 12250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_272,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:16,936 12250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,936 12250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,937 12251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,937 12251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_273,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:16,937 12251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:16,938 12252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,938 12252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,938 12252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:16,939 12253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:16,940 12254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,941 12255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,942 12256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:16,943 12257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:16,943 12257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,943 12257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,944 12258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:16,945 12259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:16,945 12259 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:16,945 12259 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:16,945 12259 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:16,945 12259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,946 12260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,946 12260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:16,948 12262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:16,948 12262 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,948 12262 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:16,949 12263 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:16,950 12264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,950 12264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,955 12269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),R),true.

2014-09-01 16:09:16,956 12270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-01 16:09:16,957 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,957 12271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,960 12274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),member(none,identifier(none,pp),identifier(none,'PID'))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID'),ARes),true.

2014-09-01 16:09:16,962 12276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & not(pp /: ready \\/ waiting) & pp : PID')),[]))
2014-09-01 16:09:16,963 12277 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:09:16,963 12277 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:16,963 12277 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:09:16,963 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:16,963 12277 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:16,963 12277 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:16,963 12277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:16,967 12281 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:16,971 12285 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:16,974 12288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:16,975 12289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65523
2014-09-01 16:09:17,604 12918 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65523
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:17,604 12918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9899
2014-09-01 16:09:17,604 12918 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9899
2014-09-01 16:09:17,605 12919 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65523 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:17,605 12919 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:17,606 12920 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:17,625 12939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:17,631 12945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,631 12945 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:17,632 12946 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:17,632 12946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,632 12946 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:17,632 12946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,633 12947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:17,633 12947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,633 12947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,634 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,634 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:17,634 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,635 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,635 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,635 12949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:17,636 12950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,636 12950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,636 12950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,637 12951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:17,637 12951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,638 12952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,638 12952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,639 12953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:17,639 12953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,640 12954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,640 12954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,641 12955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:17,641 12955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,642 12956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,642 12956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,643 12957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:17,643 12957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,644 12958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,644 12958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,645 12959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:17,645 12959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,646 12960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,646 12960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,647 12961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:17,647 12961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,648 12962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,648 12962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,649 12963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_296,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:17,649 12963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,650 12964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,650 12964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,650 12964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_297,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:17,651 12965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,651 12965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,652 12966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,652 12966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_298,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:17,653 12967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,653 12967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,654 12968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,654 12968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_299,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:17,655 12969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:17,655 12969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,656 12970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,656 12970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:17,657 12971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:17,658 12972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,658 12972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,659 12973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:17,660 12974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:17,660 12974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,661 12975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,662 12976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:17,662 12976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:17,662 12976 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:17,663 12977 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:17,663 12977 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:17,663 12977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,663 12977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,663 12977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:17,666 12980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,666 12980 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:17,667 12981 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:17,668 12982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,668 12982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,675 12989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:09:17,677 12991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:17,678 12992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,678 12992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,683 12997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,pp),identifier(none,'PID')))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:09:17,685 12999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp : PID) & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:09:17,685 12999 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ pp : PID)
2014-09-01 16:09:17,685 12999 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 2
2014-09-01 16:09:17,685 12999 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:17,685 12999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:17,685 12999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:17,688 13002 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:17,692 13006 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:17,693 13007 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:17,693 13007 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:18,322 13636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:18,322 13636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:18,322 13636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:18,322 13636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65525
2014-09-01 16:09:18,322 13636 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65525
2014-09-01 16:09:18,323 13637 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:18,323 13637 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9903
2014-09-01 16:09:18,323 13637 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9903
2014-09-01 16:09:18,323 13637 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65525 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:18,324 13638 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:18,325 13639 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:18,342 13656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:18,351 13665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,351 13665 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:18,351 13665 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:18,351 13665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,351 13665 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:18,351 13665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,352 13666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:18,352 13666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,352 13666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,353 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,353 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:18,353 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,354 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,354 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,354 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:18,355 13669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,355 13669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,356 13670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,356 13670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:18,357 13671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,357 13671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,357 13671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,358 13672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:18,358 13672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,359 13673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,359 13673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,359 13673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_318,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:18,360 13674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,360 13674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,361 13675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,361 13675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_319,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:18,362 13676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,362 13676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,363 13677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,363 13677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_320,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:18,364 13678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,364 13678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,365 13679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,365 13679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_321,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:18,366 13680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,366 13680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,367 13681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,367 13681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_322,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:18,368 13682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,368 13682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,368 13682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,369 13683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_323,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:18,369 13683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,370 13684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,370 13684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,370 13684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_324,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:18,371 13685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,371 13685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,372 13686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,372 13686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_325,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:18,373 13687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:18,373 13687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,373 13687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,374 13688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:18,375 13689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:18,375 13689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,376 13690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,377 13691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:18,377 13691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:18,377 13691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,378 13692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,379 13693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:18,379 13693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:18,379 13693 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:18,379 13693 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:18,380 13694 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:18,380 13694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,380 13694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,380 13694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:18,383 13697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:18,383 13697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:18,384 13698 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,384 13698 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,384 13698 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:18,384 13698 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:18,384 13698 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:18,384 13698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,385 13699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,390 13704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:09:18,392 13706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:18,393 13707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,394 13708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,400 13714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),identifier(none,active))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:09:18,403 13717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: active & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:09:18,403 13717 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:18,404 13718 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:18,404 13718 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:18,404 13718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:18,404 13718 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:18,404 13718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:18,408 13722 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:18,414 13728 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:18,415 13729 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:18,415 13729 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:19,084 14398 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:19,085 14399 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:19,085 14399 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:19,085 14399 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65527
2014-09-01 16:09:19,085 14399 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65527
2014-09-01 16:09:19,086 14400 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:19,086 14400 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9907
2014-09-01 16:09:19,086 14400 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9907
2014-09-01 16:09:19,086 14400 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65527 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:19,087 14401 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:19,088 14402 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:19,104 14418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:19,112 14426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,112 14426 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:19,112 14426 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:19,113 14427 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:19,113 14427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,113 14427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,113 14427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:19,114 14428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,114 14428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,114 14428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,115 14429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:19,115 14429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,115 14429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,115 14429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,116 14430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:19,116 14430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,116 14430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,117 14431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,117 14431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:19,117 14431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,118 14432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,118 14432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,118 14432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_343,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:19,120 14434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,120 14434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,121 14435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,121 14435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_344,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:19,121 14435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,122 14436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,122 14436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,122 14436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_345,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:19,123 14437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,123 14437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,123 14437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,123 14437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_346,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:19,124 14438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,124 14438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,124 14438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,125 14439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_347,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:19,125 14439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,125 14439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,126 14440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,126 14440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_348,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:19,127 14441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,127 14441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,127 14441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,128 14442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_349,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:19,128 14442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,128 14442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,129 14443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,129 14443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_350,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:19,130 14444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,130 14444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,130 14444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,131 14445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:19,132 14446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,132 14446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,132 14446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,133 14447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:19,134 14448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:19,134 14448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,135 14449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,136 14450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:19,136 14450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:19,137 14451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,137 14451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,138 14452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:19,139 14453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:19,139 14453 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:19,139 14453 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:19,139 14453 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:19,140 14454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,140 14454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,140 14454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:19,143 14457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:19,143 14457 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,143 14457 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,143 14457 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,143 14457 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,144 14458 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,145 14459 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,145 14459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,145 14459 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,145 14459 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,145 14459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,151 14465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),R),true.

2014-09-01 16:09:19,152 14466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:19,153 14467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,153 14467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,158 14472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 16:09:19,162 14476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: ready \\/ waiting) & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 16:09:19,162 14476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,163 14477 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: (ready \/ waiting))
2014-09-01 16:09:19,163 14477 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:19,163 14477 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:19,163 14477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,166 14480 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:19,170 14484 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:19,171 14485 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:19,172 14486 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:19,833 15147 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:19,834 15148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:19,834 15148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:19,834 15148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65529
2014-09-01 16:09:19,834 15148 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65529
2014-09-01 16:09:19,834 15148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:19,835 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9911
2014-09-01 16:09:19,835 15149 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9911
2014-09-01 16:09:19,835 15149 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65529 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:19,835 15149 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:19,836 15150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:19,860 15174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:19,868 15182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,868 15182 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:19,868 15182 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:19,868 15182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,868 15182 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:19,869 15183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,869 15183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_365,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:19,870 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,870 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,870 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,870 15184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_366,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:19,871 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,871 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,871 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,871 15185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_367,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:19,872 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,872 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,872 15186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,873 15187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_368,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:19,873 15187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,873 15187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,874 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,874 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_369,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:19,874 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,874 15188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,875 15189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,875 15189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_370,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:19,875 15189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,876 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,876 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,876 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_371,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:19,877 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,877 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,877 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,877 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_372,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:19,878 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,878 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,878 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,879 15193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_373,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:19,879 15193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,879 15193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,879 15193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,880 15194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_374,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:19,880 15194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,880 15194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,881 15195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,881 15195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_375,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:19,882 15196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,882 15196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,882 15196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,882 15196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:19,883 15197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,883 15197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,883 15197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,884 15198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:19,884 15198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:19,884 15198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,885 15199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,885 15199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:19,886 15200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:19,886 15200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,886 15200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,887 15201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:19,888 15202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:19,888 15202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,888 15202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,889 15203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:19,890 15204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:19,890 15204 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:19,890 15204 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:19,890 15204 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:19,890 15204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,891 15205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,891 15205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:19,894 15208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,894 15208 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:19,895 15209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,895 15209 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:19,896 15210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,901 15215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:09:19,903 15217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:19,903 15217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,904 15218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,908 15222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,not_member(none,identifier(none,pp),identifier(none,active)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,1))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),equal(none,integer(none,1),integer(none,2))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:09:19,911 15225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(pp /: active) & (((pp : PID & 1=1 & pp /: ready \\/ waiting) or (pp : PID & 1=2 & pp /: ready \\/ waiting)) & not((pp : PID & 1=1 & pp /: ready \\/ waiting) & (pp : PID & 1=2 & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:09:19,911 15225 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(pp /: active)
2014-09-01 16:09:19,911 15225 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-01 16:09:19,911 15225 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is FALSE
2014-09-01 16:09:19,911 15225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:19,912 15226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:19,915 15229 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:19,928 15242 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:19,929 15243 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:19,929 15243 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:20,567 15881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:20,567 15881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:20,567 15881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:20,567 15881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65531
2014-09-01 16:09:20,568 15882 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65531
2014-09-01 16:09:20,568 15882 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:20,568 15882 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9915
2014-09-01 16:09:20,568 15882 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9915
2014-09-01 16:09:20,568 15882 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65531 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:20,569 15883 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:20,570 15884 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:20,589 15903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:20,597 15911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,597 15911 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:20,597 15911 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:20,597 15911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,597 15911 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:20,598 15912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,598 15912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_391,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:20,599 15913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,599 15913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,601 15915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,601 15915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_392,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:20,602 15916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,602 15916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,602 15916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,603 15917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_393,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:20,603 15917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,603 15917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,604 15918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,604 15918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_394,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:20,605 15919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,605 15919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,605 15919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,606 15920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_395,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:20,606 15920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,606 15920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,607 15921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,607 15921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_396,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:20,608 15922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,608 15922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,608 15922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,608 15922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_397,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:20,609 15923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,609 15923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,610 15924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,610 15924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_398,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:20,611 15925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,611 15925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,611 15925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,612 15926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_399,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:20,612 15926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,612 15926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,613 15927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,613 15927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_400,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:20,614 15928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,614 15928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,614 15928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,615 15929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:20,615 15929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,615 15929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,616 15930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,616 15930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:20,616 15930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,617 15931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,617 15931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,617 15931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:20,618 15932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:20,618 15932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,618 15932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,619 15933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:20,620 15934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:20,620 15934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,621 15935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,622 15936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:20,622 15936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:20,623 15937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,623 15937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,624 15938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:20,624 15938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:20,625 15939 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:20,625 15939 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:20,625 15939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,625 15939 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:20,625 15939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,626 15940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:20,628 15942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,629 15943 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:20,630 15944 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:20,630 15944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,631 15945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,636 15950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),R),true.

2014-09-01 16:09:20,639 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:20,639 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,639 15953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,645 15959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2)))),negation(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,1))),conjunct(none,conjunct(none,member(none,identifier(none,pp),identifier(none,'PID')),not_member(none,identifier(none,pp),identifier(none,active))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))'),ARes),true.

2014-09-01 16:09:20,647 15961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp /: ready \\/ waiting & (((pp : PID & pp /: active & 1=1) or (pp : PID & pp /: active & 1=2)) & not((pp : PID & pp /: active & 1=1) & (pp : PID & pp /: active & 1=2)))')),[]))
2014-09-01 16:09:20,647 15961 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:20,648 15962 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:20,648 15962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:20,648 15962 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:20,648 15962 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:20,648 15962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:20,652 15966 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-01 16:09:20,657 15971 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-01 16:09:20,658 15972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-01 16:09:20,658 15972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-01 16:09:21,283 16597 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-01 16:09:21,283 16597 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-01 16:09:21,283 16597 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-01 16:09:21,283 16597 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 65533
2014-09-01 16:09:21,283 16597 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 65533
2014-09-01 16:09:21,284 16598 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-01 16:09:21,284 16598 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 9919
2014-09-01 16:09:21,284 16598 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 9919
2014-09-01 16:09:21,284 16598 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 65533 using key 5bf6feee2f4c9ca5
2014-09-01 16:09:21,284 16598 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-01 16:09:21,285 16599 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-01 16:09:21,300 16614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-01 16:09:21,308 16622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,308 16622 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-01 16:09:21,308 16622 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-01 16:09:21,309 16623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,309 16623 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-01 16:09:21,309 16623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,309 16623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_417,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-01 16:09:21,310 16624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,310 16624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,310 16624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,311 16625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_418,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-01 16:09:21,311 16625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,311 16625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,312 16626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,312 16626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_419,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-01 16:09:21,312 16626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,313 16627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,313 16627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,313 16627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_420,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-01 16:09:21,314 16628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,314 16628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,315 16629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,315 16629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_421,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-01 16:09:21,316 16630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,316 16630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,316 16630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,317 16631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_422,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-01 16:09:21,317 16631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,318 16632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,318 16632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,318 16632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_423,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-01 16:09:21,319 16633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,319 16633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,319 16633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,320 16634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_424,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-01 16:09:21,320 16634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,320 16634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,321 16635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,321 16635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_425,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-01 16:09:21,321 16635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,322 16636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,322 16636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,322 16636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_426,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-01 16:09:21,323 16637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,323 16637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,323 16637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,323 16637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_427,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-01 16:09:21,324 16638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,324 16638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,325 16639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,325 16639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_428,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-01 16:09:21,326 16640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,326 16640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,326 16640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,327 16641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_429,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-01 16:09:21,328 16642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-01 16:09:21,328 16642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,328 16642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,329 16643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_424,formula_423,formula_421,formula_419,formula_422,formula_425,formula_420,formula_428,formula_417,formula_426,formula_429,formula_418,formula_427],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-01 16:09:21,330 16644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:21,330 16644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,331 16645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,332 16646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:21,332 16646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-01 16:09:21,332 16646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,333 16647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,334 16648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-01 16:09:21,334 16648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-01 16:09:21,334 16648 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-01 16:09:21,335 16649 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-01 16:09:21,335 16649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,335 16649 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-01 16:09:21,335 16649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,335 16649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_424,formula_423,formula_421,formula_419,formula_422,formula_425,formula_420,formula_428,formula_417,formula_426,formula_429,formula_418,formula_427],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-01 16:09:21,338 16652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:21,338 16652 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,339 16653 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,339 16653 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-01 16:09:21,339 16653 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-01 16:09:21,339 16653 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-01 16:09:21,339 16653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,339 16653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,345 16659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),R),true.

2014-09-01 16:09:21,346 16660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))))))))),[]))
2014-09-01 16:09:21,347 16661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,347 16661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-01 16:09:21,351 16665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),conjunct(none,disjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting))))),negation(none,conjunct(none,conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),conjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))))))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))'),ARes),true.

2014-09-01 16:09:21,353 16667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(pp,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & pp : PID & (((1=1 & pp /: active & pp /: ready \\/ waiting) or (1=2 & pp /: active & pp /: ready \\/ waiting)) & not((1=1 & pp /: active & pp /: ready \\/ waiting) & (1=2 & pp /: active & pp /: ready \\/ waiting)))')),[]))
2014-09-01 16:09:21,353 16667 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over pp is TRUE
2014-09-01 16:09:21,353 16667 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-01 16:09:21,353 16667 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        pp = PID1
2014-09-01 16:09:21,353 16667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-01 16:09:21,353 16667 [Thread-35] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-01 16:09:21,354 16668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
