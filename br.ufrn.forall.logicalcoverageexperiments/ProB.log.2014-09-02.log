2014-09-02 11:50:23,535 3361 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 11:50:23,547 3373 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 11:50:23,550 3376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 11:50:23,551 3377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 11:50:24,132 3958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 11:50:24,133 3959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 11:50:24,133 3959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 11:50:24,133 3959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54552
2014-09-02 11:50:24,133 3959 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54552
2014-09-02 11:50:24,133 3959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 11:50:24,133 3959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10840
2014-09-02 11:50:24,134 3960 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10840
2014-09-02 11:50:24,134 3960 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54552 using key c552db47f10c0cd
2014-09-02 11:50:24,135 3961 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 11:50:24,136 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 11:50:24,340 4166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 11:50:24,350 4176 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 11:50:24,350 4176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,350 4176 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 11:50:24,350 4176 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 11:50:24,373 4199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,374 4200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,376 4202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 11:50:24,376 4202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,377 4203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,377 4203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,378 4204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 11:50:24,378 4204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,378 4204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,379 4205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,379 4205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 11:50:24,380 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,380 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,380 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,381 4207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 11:50:24,382 4208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,382 4208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,382 4208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,383 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 11:50:24,384 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,384 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,384 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,385 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 11:50:24,385 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,386 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,386 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,387 4213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 11:50:24,387 4213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,387 4213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,388 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,388 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 11:50:24,389 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,389 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,390 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,390 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 11:50:24,391 4217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,391 4217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,391 4217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,392 4218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 11:50:24,393 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,393 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,394 4220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,394 4220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 11:50:24,395 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,395 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,395 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,396 4222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 11:50:24,397 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,397 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,397 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,398 4224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 11:50:24,399 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:50:24,399 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,399 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,415 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 11:50:24,417 4243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:50:24,421 4247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,422 4248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,434 4260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 11:50:24,435 4261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 11:50:24,436 4262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,437 4263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,442 4268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 11:50:24,444 4270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 11:50:24,445 4271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,446 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 11:50:24,446 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 11:50:24,446 4272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,446 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 11:50:24,458 4284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 11:50:24,463 4289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:50:24,475 4301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:50:24,476 4302 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,476 4302 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,476 4302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:50:24,476 4302 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,477 4303 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:50:24,478 4304 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:50:24,478 4304 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:50:24,478 4304 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:22,725 2689 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 11:53:22,736 2700 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 11:53:22,739 2703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 11:53:22,739 2703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 11:53:23,195 3159 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 11:53:23,195 3159 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 11:53:23,195 3159 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 11:53:23,195 3159 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54565
2014-09-02 11:53:23,195 3159 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54565
2014-09-02 11:53:23,196 3160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 11:53:23,196 3160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10855
2014-09-02 11:53:23,196 3160 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10855
2014-09-02 11:53:23,197 3161 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54565 using key 482e412941b51b1d
2014-09-02 11:53:23,197 3161 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 11:53:23,198 3162 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 11:53:23,403 3367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 11:53:23,411 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,411 3375 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 11:53:23,412 3376 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 11:53:23,412 3376 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 11:53:23,433 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,433 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,436 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 11:53:23,436 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,437 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,437 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,438 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 11:53:23,438 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,438 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,439 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,439 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 11:53:23,440 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,440 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,440 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,441 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 11:53:23,442 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,442 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,443 3407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,443 3407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 11:53:23,444 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,444 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,444 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,445 3409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 11:53:23,446 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,446 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,446 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,447 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 11:53:23,447 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,448 3412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,448 3412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,449 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 11:53:23,449 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,450 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,450 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,451 3415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 11:53:23,451 3415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,452 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,452 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,453 3417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 11:53:23,454 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,454 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,454 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,455 3419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 11:53:23,456 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,456 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,456 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,457 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 11:53:23,458 3422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,458 3422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,458 3422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,459 3423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 11:53:23,460 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:23,460 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,461 3425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,482 3446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 11:53:23,483 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:53:23,487 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,487 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,496 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 11:53:23,497 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 11:53:23,498 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,498 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,501 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 11:53:23,502 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 11:53:23,503 3467 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 11:53:23,503 3467 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 11:53:23,503 3467 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 11:53:23,504 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,504 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,516 3480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 11:53:23,520 3484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:53:23,531 3495 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,531 3495 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,531 3495 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,531 3495 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,532 3496 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:23,533 3497 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:23,533 3497 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,533 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,534 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,553 3517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 11:53:23,557 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 11:53:23,559 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:23,560 3524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 11:53:23,560 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:23,561 3525 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 11:53:23,561 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 11:53:23,561 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 11:53:23,561 3525 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 11:53:23,562 3526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,562 3526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:23,572 3536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 11:53:23,575 3539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 11:53:23,575 3539 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:23,576 3540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:23,576 3540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,220 2497 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 11:53:51,230 2507 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 11:53:51,233 2510 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 11:53:51,234 2511 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 11:53:51,695 2972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 11:53:51,695 2972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 11:53:51,695 2972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 11:53:51,696 2973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54571
2014-09-02 11:53:51,696 2973 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54571
2014-09-02 11:53:51,696 2973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 11:53:51,696 2973 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10863
2014-09-02 11:53:51,696 2973 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10863
2014-09-02 11:53:51,697 2974 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54571 using key a25254a59571e17a
2014-09-02 11:53:51,698 2975 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 11:53:51,699 2976 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 11:53:51,914 3191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 11:53:51,926 3203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,926 3203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 11:53:51,927 3204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 11:53:51,927 3204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 11:53:51,951 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,952 3229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,954 3231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 11:53:51,955 3232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,955 3232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,956 3233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,957 3234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 11:53:51,957 3234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,958 3235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,958 3235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,959 3236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 11:53:51,960 3237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,960 3237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,960 3237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,961 3238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 11:53:51,962 3239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,963 3240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,963 3240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,964 3241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 11:53:51,965 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,966 3243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,967 3244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,967 3244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 11:53:51,968 3245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,969 3246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,969 3246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,971 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 11:53:51,972 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,973 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,974 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,974 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 11:53:51,975 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,976 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,976 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,977 3254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 11:53:51,978 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,978 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,978 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,979 3256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 11:53:51,980 3257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,980 3257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,981 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,982 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 11:53:51,982 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,983 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,983 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,984 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 11:53:51,985 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,985 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,986 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:51,987 3264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 11:53:51,987 3264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 11:53:51,988 3265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:51,988 3265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,009 3286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 11:53:52,010 3287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:53:52,014 3291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,015 3292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,028 3305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 11:53:52,029 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 11:53:52,030 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,030 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,041 3318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 11:53:52,043 3320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 11:53:52,044 3321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 11:53:52,045 3322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,046 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,046 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 11:53:52,047 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 11:53:52,047 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,048 3325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 11:53:52,048 3325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,057 3334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 11:53:52,061 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,070 3347 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 11:53:52,071 3348 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,074 3351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,075 3352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 11:53:52,092 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 11:53:52,095 3372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 11:53:52,096 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 11:53:52,096 3373 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 11:53:52,097 3374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:47,546 2940 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:17:47,559 2953 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:17:47,563 2957 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:17:47,564 2958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:17:48,068 3462 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:17:48,068 3462 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:17:48,068 3462 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:17:48,068 3462 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54703
2014-09-02 12:17:48,068 3462 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54703
2014-09-02 12:17:48,069 3463 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:17:48,069 3463 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10942
2014-09-02 12:17:48,069 3463 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10942
2014-09-02 12:17:48,070 3464 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54703 using key 2f14fac4c84692d3
2014-09-02 12:17:48,071 3465 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:17:48,072 3466 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:17:48,285 3679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:17:48,297 3691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,298 3692 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:17:48,298 3692 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:17:48,299 3693 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:17:48,321 3715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,321 3715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,324 3718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:17:48,325 3719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,325 3719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,326 3720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,326 3720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:17:48,327 3721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,327 3721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,327 3721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,328 3722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:17:48,329 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,329 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,329 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,330 3724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:17:48,331 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,331 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,331 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,332 3726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:17:48,333 3727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,334 3728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,334 3728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,335 3729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:17:48,336 3730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,337 3731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,337 3731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,338 3732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:17:48,339 3733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,340 3734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,341 3735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,341 3735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:17:48,342 3736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,343 3737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,343 3737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,344 3738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:17:48,345 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,346 3740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,346 3740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,347 3741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:17:48,348 3742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,349 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,349 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,350 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:17:48,351 3745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,352 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,352 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,353 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:17:48,354 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,354 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,355 3749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,356 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:17:48,357 3751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:17:48,357 3751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,358 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,383 3777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:17:48,384 3778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:17:48,388 3782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,389 3783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,404 3798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:17:48,405 3799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:17:48,406 3800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,407 3801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,417 3811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:17:48,419 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 12:17:48,419 3813 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:17:48,419 3813 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:17:48,420 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:17:48,420 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:17:48,420 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 12:17:48,420 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:17:48,420 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:17:48,421 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,421 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,422 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 12:17:48,422 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 12:17:48,423 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:17:48,423 3817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,423 3817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,429 3823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 12:17:48,432 3826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:17:48,432 3826 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,433 3827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:17:48,434 3828 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,443 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,444 3838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:17:48,464 3858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:17:48,467 3861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:17:48,468 3862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:17:48,468 3862 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:17:48,469 3863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:31,290 2431 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:21:31,301 2442 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:21:31,304 2445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:21:31,305 2446 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:21:31,811 2952 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:21:31,811 2952 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:21:31,811 2952 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:21:31,812 2953 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54723
2014-09-02 12:21:31,812 2953 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54723
2014-09-02 12:21:31,812 2953 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:21:31,812 2953 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10955
2014-09-02 12:21:31,813 2954 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10955
2014-09-02 12:21:31,813 2954 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54723 using key 925d05539b06685b
2014-09-02 12:21:31,814 2955 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:21:31,815 2956 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:21:32,021 3162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:21:32,033 3174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,034 3175 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:21:32,034 3175 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:21:32,034 3175 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:21:32,061 3202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,062 3203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,065 3206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:21:32,066 3207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,066 3207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,067 3208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,067 3208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:21:32,068 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,068 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,069 3210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,069 3210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:21:32,070 3211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,070 3211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,070 3211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,071 3212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:21:32,072 3213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,072 3213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,073 3214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,074 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:21:32,074 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,075 3216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,075 3216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,076 3217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:21:32,077 3218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,078 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,078 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,079 3220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:21:32,080 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,080 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,080 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,081 3222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:21:32,082 3223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,082 3223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,083 3224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,083 3224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:21:32,084 3225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,085 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,085 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,086 3227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:21:32,087 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,087 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,087 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,088 3229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:21:32,089 3230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,089 3230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,089 3230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,090 3231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:21:32,090 3231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,091 3232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,091 3232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,092 3233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:21:32,092 3233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:21:32,093 3234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,093 3234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,119 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:21:32,120 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:21:32,123 3264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,124 3265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,138 3279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:21:32,139 3280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:21:32,140 3281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,141 3282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,149 3290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:21:32,152 3293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 12:21:32,152 3293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:21:32,152 3293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:21:32,152 3293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:21:32,152 3293 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:21:32,153 3294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 12:21:32,153 3294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:21:32,153 3294 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:21:32,154 3295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,154 3295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,155 3296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 12:21:32,155 3296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 12:21:32,155 3296 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:21:32,156 3297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,156 3297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,163 3304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 12:21:32,167 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:21:32,175 3316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:21:32,176 3317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:21:32,177 3318 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,181 3322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,182 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:21:32,216 3357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:21:32,218 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:21:32,218 3359 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:21:32,219 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:21:32,219 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,114 2253 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:22:15,129 2268 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:22:15,133 2272 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:22:15,133 2272 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:22:15,608 2747 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:22:15,609 2748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:22:15,609 2748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:22:15,609 2748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54728
2014-09-02 12:22:15,609 2748 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54728
2014-09-02 12:22:15,609 2748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:22:15,609 2748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10961
2014-09-02 12:22:15,610 2749 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10961
2014-09-02 12:22:15,610 2749 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54728 using key bbe9725c7747bff6
2014-09-02 12:22:15,611 2750 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:22:15,612 2751 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:22:15,793 2932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:22:15,806 2945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,807 2946 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:22:15,807 2946 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:22:15,807 2946 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:22:15,834 2973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,835 2974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,838 2977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:22:15,838 2977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,839 2978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,839 2978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,840 2979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:22:15,840 2979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,841 2980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,841 2980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,842 2981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:22:15,842 2981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,842 2981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,843 2982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,844 2983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:22:15,844 2983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,845 2984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,845 2984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,846 2985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:22:15,847 2986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,847 2986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,847 2986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,848 2987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:22:15,849 2988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,849 2988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,849 2988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,850 2989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:22:15,850 2989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,851 2990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,851 2990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,852 2991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:22:15,852 2991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,852 2991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,853 2992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,853 2992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:22:15,854 2993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,854 2993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,854 2993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,855 2994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:22:15,856 2995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,856 2995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,856 2995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,857 2996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:22:15,858 2997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,858 2997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,858 2997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,859 2998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:22:15,860 2999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,860 2999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,860 2999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,861 3000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:22:15,862 3001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:15,862 3001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,862 3001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,879 3018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:22:15,881 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:22:15,885 3024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,886 3025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,899 3038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:22:15,900 3039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:22:15,901 3040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,902 3041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,913 3052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),greater_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:22:15,915 3054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 12:22:15,915 3054 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) >= 1
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:15,916 3055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:22:15,917 3056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,918 3057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,919 3058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 12:22:15,919 3058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 12:22:15,919 3058 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:22:15,920 3059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,921 3060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,928 3067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 12:22:15,931 3070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:22:15,931 3070 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,932 3071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:22:15,933 3072 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,941 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,942 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:15,963 3102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),greater_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) >= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:22:15,966 3105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) >= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:22:15,967 3106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:15,968 3107 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:15,968 3107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,090 6235 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:22:40,105 6250 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:22:40,109 6254 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:22:40,109 6254 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:22:40,613 6758 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:22:40,613 6758 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:22:40,614 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:22:40,614 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54734
2014-09-02 12:22:40,614 6759 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54734
2014-09-02 12:22:40,614 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:22:40,614 6759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10966
2014-09-02 12:22:40,615 6760 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10966
2014-09-02 12:22:40,615 6760 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54734 using key f76027278ac67f93
2014-09-02 12:22:40,616 6761 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:22:40,617 6762 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:22:40,824 6969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:22:40,837 6982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,840 6985 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:22:40,840 6985 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:22:40,840 6985 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:22:40,865 7010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,866 7011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,868 7013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:22:40,869 7014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,870 7015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,870 7015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,871 7016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:22:40,871 7016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,872 7017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,872 7017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,873 7018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:22:40,874 7019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,874 7019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,875 7020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,876 7021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:22:40,876 7021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,877 7022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,877 7022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,878 7023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:22:40,878 7023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,879 7024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,879 7024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,880 7025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:22:40,880 7025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,880 7025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,881 7026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,881 7026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:22:40,882 7027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,882 7027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,883 7028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,884 7029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:22:40,885 7030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,885 7030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,886 7031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,887 7032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:22:40,888 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,888 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,889 7034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,889 7034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:22:40,890 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,891 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,891 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,892 7037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:22:40,893 7038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,894 7039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,894 7039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,895 7040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:22:40,896 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,897 7042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,897 7042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,898 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:22:40,899 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:22:40,899 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,900 7045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,920 7065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:22:40,923 7068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:22:40,927 7072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,928 7073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,937 7082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:22:40,938 7083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:22:40,939 7084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,939 7084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,947 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:22:40,950 7095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 12:22:40,950 7095 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:22:40,951 7096 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:22:40,951 7096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,952 7097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,952 7097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 12:22:40,953 7098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 12:22:40,953 7098 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:22:40,953 7098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,954 7099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:40,960 7105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 12:22:40,964 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:22:40,975 7120 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,975 7120 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,975 7120 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:22:40,976 7121 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,977 7122 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,977 7122 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:22:40,977 7122 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:22:40,977 7122 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:40,978 7123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:40,979 7124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:22:41,003 7148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:22:41,005 7150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:22:41,006 7151 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:22:41,006 7151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:22:41,007 7152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:42,789 2600 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:23:42,802 2613 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:23:42,806 2617 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:23:42,807 2618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:23:43,299 3110 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:23:43,300 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:23:43,300 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:23:43,300 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54740
2014-09-02 12:23:43,300 3111 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54740
2014-09-02 12:23:43,300 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:23:43,301 3112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10972
2014-09-02 12:23:43,301 3112 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10972
2014-09-02 12:23:43,302 3113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54740 using key f68a0db1ea5ac04d
2014-09-02 12:23:43,302 3113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:23:43,303 3114 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:23:43,522 3333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:23:43,531 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,531 3342 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:23:43,532 3343 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:23:43,532 3343 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:23:43,561 3372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,562 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,565 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:23:43,566 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,567 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,567 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,568 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:23:43,568 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,569 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,569 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,570 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:23:43,571 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,571 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,571 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,572 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:23:43,573 3384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,573 3384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,574 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,574 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:23:43,575 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,575 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,576 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,577 3388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:23:43,578 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,578 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,578 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,579 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:23:43,580 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,580 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,580 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,581 3392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:23:43,582 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,582 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,582 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,583 3394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:23:43,584 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,584 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,585 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,585 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:23:43,586 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,586 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,587 3398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,588 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:23:43,588 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,589 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,589 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,590 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:23:43,591 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,591 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,591 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,593 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:23:43,594 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:23:43,594 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,595 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,618 3429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:23:43,619 3430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:23:43,623 3434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,624 3435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,640 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:23:43,641 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:23:43,642 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,642 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,653 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:23:43,657 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 12:23:43,657 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:23:43,657 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:23:43,657 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:23:43,657 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:23:43,657 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 12:23:43,658 3469 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:23:43,658 3469 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:23:43,659 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,659 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,660 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 12:23:43,661 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 12:23:43,661 3472 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:23:43,662 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,662 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,670 3481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 12:23:43,674 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,677 3488 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:23:43,678 3489 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,688 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,689 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:23:43,710 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:23:43,712 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) <= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:23:43,713 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:23:43,714 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:23:43,714 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:11,468 2234 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 12:24:11,485 2251 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 12:24:11,488 2254 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 12:24:11,489 2255 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 12:24:11,990 2756 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 12:24:11,990 2756 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 12:24:11,990 2756 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 12:24:11,991 2757 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 54745
2014-09-02 12:24:11,991 2757 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 54745
2014-09-02 12:24:11,991 2757 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 12:24:11,991 2757 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10978
2014-09-02 12:24:11,992 2758 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10978
2014-09-02 12:24:11,993 2759 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 54745 using key cadeefde01d3fa9f
2014-09-02 12:24:11,993 2759 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 12:24:11,995 2761 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 12:24:12,214 2980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 12:24:12,225 2991 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 12:24:12,225 2991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,225 2991 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 12:24:12,225 2991 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 12:24:12,246 3012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,246 3012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,250 3016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 12:24:12,251 3017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,251 3017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,252 3018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,253 3019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 12:24:12,254 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,254 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,254 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,255 3021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 12:24:12,256 3022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,257 3023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,257 3023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,258 3024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 12:24:12,259 3025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,259 3025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,260 3026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,261 3027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 12:24:12,262 3028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,262 3028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,263 3029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,264 3030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 12:24:12,265 3031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,265 3031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,266 3032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,267 3033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 12:24:12,267 3033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,268 3034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,268 3034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,269 3035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 12:24:12,270 3036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,270 3036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,271 3037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,272 3038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 12:24:12,273 3039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,273 3039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,274 3040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,275 3041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 12:24:12,276 3042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,277 3043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,277 3043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,278 3044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 12:24:12,279 3045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,280 3046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,280 3046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,281 3047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 12:24:12,282 3048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,283 3049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,283 3049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,284 3050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 12:24:12,285 3051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 12:24:12,285 3051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,285 3051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,309 3075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 12:24:12,311 3077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:24:12,315 3081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,316 3082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,328 3094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 12:24:12,330 3096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 12:24:12,331 3097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,332 3098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,343 3109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),greater_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),R),true.

2014-09-02 12:24:12,346 3112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 12:24:12,346 3112 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 12:24:12,346 3112 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:24:12,346 3112 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active /\ (ready \/ waiting) = {}
2014-09-02 12:24:12,346 3112 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:24:12,346 3112 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) >= 1
2014-09-02 12:24:12,347 3113 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 12:24:12,347 3113 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 12:24:12,348 3114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,348 3114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,349 3115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 12:24:12,349 3115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 12:24:12,349 3115 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 12:24:12,350 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,350 3116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,358 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 12:24:12,363 3129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 12:24:12,364 3130 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,365 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 12:24:12,366 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,374 3140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,375 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 12:24:12,402 3168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),greater_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) >= 1 & ((active = {})  => (ready = {}))'),ARes),true.

2014-09-02 12:24:12,404 3170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting: POW(PID) & active <: PID & ready <: PID   & waiting <: PID & (ready /\\ waiting) = {} & active /\\ (ready \\/ waiting) = {} & card(active) >= 1 & ((active = {})  => (ready = {}))')),[]))
2014-09-02 12:24:12,406 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 12:24:12,406 3172 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 12:24:12,407 3173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:02,268 3343 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:05:02,282 3357 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:05:02,285 3360 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:05:02,285 3360 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:05:02,798 3873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:05:02,798 3873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:05:02,798 3873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:05:02,799 3874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56075
2014-09-02 14:05:02,799 3874 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56075
2014-09-02 14:05:02,799 3874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:05:02,799 3874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11117
2014-09-02 14:05:02,800 3875 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11117
2014-09-02 14:05:02,801 3876 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56075 using key 1c44f46f9450f76e
2014-09-02 14:05:02,802 3877 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:05:02,804 3879 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:05:03,005 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:05:03,017 4092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,017 4092 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:05:03,017 4092 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:05:03,017 4092 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:05:03,045 4120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,046 4121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,050 4125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:05:03,051 4126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,051 4126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,051 4126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,052 4127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:05:03,053 4128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,053 4128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,054 4129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,055 4130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:05:03,055 4130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,056 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,056 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,058 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:05:03,058 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,059 4134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,059 4134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,060 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:05:03,061 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,061 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,061 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,062 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:05:03,063 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,064 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,064 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,065 4140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:05:03,066 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,067 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,067 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,068 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:05:03,069 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,069 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,070 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,071 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:05:03,072 4147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,073 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,073 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,075 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:05:03,075 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,076 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,076 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,078 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:05:03,079 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,079 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,080 4155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,081 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:05:03,081 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,082 4157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,082 4157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,083 4158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:05:03,084 4159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:05:03,085 4160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,091 4166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,116 4191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:05:03,117 4192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:05:03,121 4196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,122 4197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,136 4211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:05:03,137 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:05:03,139 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,139 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:05:03,149 4224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),greater_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,pp),identifier(none,'PID'))),not_member(none,identifier(none,pp),identifier(none,active))),not_member(none,identifier(none,pp),union(none,identifier(none,ready),identifier(none,waiting)))),R),true.

2014-09-02 14:05:03,151 4226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),'.'(error('Unknown identifier pp',none),[]))))),[]))
2014-09-02 14:05:03,153 4228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:05:03,154 4229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:32,518 3126 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:32,529 3137 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:32,532 3140 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:32,532 3140 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:33,039 3647 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:33,039 3647 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:33,039 3647 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:33,040 3648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56114
2014-09-02 14:15:33,040 3648 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56114
2014-09-02 14:15:33,040 3648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:33,040 3648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11136
2014-09-02 14:15:33,041 3649 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11136
2014-09-02 14:15:33,042 3650 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56114 using key 3feec422cb196b12
2014-09-02 14:15:33,042 3650 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:33,044 3652 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:33,275 3883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:33,287 3895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,287 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:33,287 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:33,287 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:33,312 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,312 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,317 3925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:33,317 3925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,318 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,318 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,319 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:33,320 3928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,321 3929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,322 3930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,323 3931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:33,323 3931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,324 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,325 3933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,326 3934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:33,327 3935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,327 3935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,328 3936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,329 3937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:33,330 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,330 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,331 3939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,332 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:33,333 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,333 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,334 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,335 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:33,335 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,336 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,336 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,337 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:33,338 3946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,338 3946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,339 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,340 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:33,340 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,341 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,341 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,342 3950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:33,343 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,343 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,344 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,345 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:33,345 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,346 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,346 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,347 3955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:33,348 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,348 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,348 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,349 3957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:33,350 3958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:33,350 3958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,351 3959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,373 3981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:33,374 3982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:33,378 3986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,379 3987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,393 4001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:33,394 4002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:33,395 4003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,395 4003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,400 4008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:33,401 4009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:33,401 4009 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:33,401 4009 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:33,401 4009 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:33,402 4010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,403 4011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,416 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,419 4027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,419 4027 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:33,420 4028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:33,427 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,428 4036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,442 4050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:15:33,444 4052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:33,446 4054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,447 4055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,457 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:15:33,460 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:15:33,460 4068 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:15:33,460 4068 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:15:33,460 4068 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:15:33,460 4068 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:33,461 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:33,462 4070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:33,472 4080 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:33,476 4084 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:33,478 4086 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:33,478 4086 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:34,013 4621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:34,013 4621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:34,014 4622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:34,014 4622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56116
2014-09-02 14:15:34,014 4622 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56116
2014-09-02 14:15:34,014 4622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:34,014 4622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11140
2014-09-02 14:15:34,014 4622 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11140
2014-09-02 14:15:34,014 4622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56116 using key 3feec422cb196b12
2014-09-02 14:15:34,015 4623 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:34,016 4624 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:34,049 4657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:34,057 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,057 4665 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:34,057 4665 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:34,057 4665 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:34,057 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,058 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,058 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:34,059 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,059 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,059 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,060 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:34,060 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,060 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,061 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,061 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:34,062 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,062 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,062 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,063 4671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:34,064 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,064 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,064 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,065 4673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:34,065 4673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,066 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,066 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,067 4675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:34,067 4675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,068 4676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,068 4676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,069 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:34,069 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,069 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,070 4678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,070 4678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:34,071 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,071 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,071 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,072 4680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:34,072 4680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,073 4681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,073 4681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,074 4682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:34,074 4682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,075 4683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,075 4683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,076 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:34,076 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,076 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,077 4685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,077 4685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:34,078 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,078 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,079 4687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,080 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_39,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:34,080 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,081 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,081 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,082 4690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:34,083 4691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:34,084 4692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,085 4693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,086 4694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:34,087 4695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:34,088 4696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,088 4696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,090 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:34,090 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:34,091 4699 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:34,091 4699 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:34,091 4699 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:34,091 4699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,092 4700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,092 4700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:34,095 4703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:34,095 4703 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,095 4703 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,095 4703 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,096 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,101 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,101 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,110 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:15:34,113 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:15:34,113 4721 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:34,114 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,114 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:15:34,115 4723 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:15:34,115 4723 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:15:34,115 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,116 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:15:34,116 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:15:34,116 4724 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:34,117 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,117 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,118 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:15:34,122 4730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:34,122 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,123 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,124 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,126 4734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,127 4735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,135 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:15:34,137 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:15:34,137 4745 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,138 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,138 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,143 4751 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:34,148 4756 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:34,149 4757 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:34,149 4757 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:34,671 5279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:34,671 5279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:34,671 5279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:34,671 5279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56118
2014-09-02 14:15:34,671 5279 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56118
2014-09-02 14:15:34,672 5280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:34,672 5280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11144
2014-09-02 14:15:34,672 5280 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11144
2014-09-02 14:15:34,672 5280 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56118 using key 3feec422cb196b12
2014-09-02 14:15:34,672 5280 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:34,673 5281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:34,705 5313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:34,712 5320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,712 5320 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:34,712 5320 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:34,712 5320 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:34,712 5320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,713 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,713 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:34,714 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,714 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,714 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,715 5323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:34,715 5323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,716 5324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,716 5324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,716 5324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:34,717 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,717 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,718 5326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,718 5326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:34,719 5327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,719 5327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,719 5327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,720 5328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:34,721 5329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,721 5329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,721 5329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,722 5330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:34,723 5331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,723 5331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,724 5332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,724 5332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:34,725 5333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,725 5333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,725 5333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,726 5334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:34,726 5334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,727 5335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,727 5335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,727 5335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:34,728 5336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,728 5336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,729 5337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,729 5337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:34,730 5338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,730 5338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,730 5338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,731 5339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:34,732 5340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,732 5340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,732 5340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,733 5341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:34,733 5341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,734 5342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,734 5342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,735 5343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:34,735 5343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:34,736 5344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,736 5344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,737 5345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:34,738 5346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:34,739 5347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,739 5347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,740 5348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:34,741 5349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:34,742 5350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,742 5350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,743 5351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:34,744 5352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:34,744 5352 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:34,745 5353 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:34,745 5353 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:34,745 5353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,745 5353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,746 5354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:34,748 5356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,749 5357 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:34,750 5358 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:34,752 5360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,752 5360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,758 5366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:15:34,759 5367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:34,759 5367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,760 5368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,764 5372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:15:34,766 5374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:15:34,766 5374 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:15:34,766 5374 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:15:34,766 5374 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:15:34,766 5374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:34,767 5375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:34,770 5378 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:34,775 5383 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:34,776 5384 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:34,776 5384 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:35,309 5917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:35,309 5917 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:35,310 5918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:35,310 5918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56120
2014-09-02 14:15:35,310 5918 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56120
2014-09-02 14:15:35,310 5918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:35,310 5918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11148
2014-09-02 14:15:35,310 5918 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11148
2014-09-02 14:15:35,310 5918 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56120 using key 3feec422cb196b12
2014-09-02 14:15:35,311 5919 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:35,312 5920 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:35,344 5952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:35,351 5959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,351 5959 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:35,351 5959 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:35,351 5959 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:35,351 5959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,352 5960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,352 5960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:35,353 5961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,353 5961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,353 5961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,354 5962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:35,354 5962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,354 5962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,355 5963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,355 5963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:35,356 5964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,356 5964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,356 5964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,357 5965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:35,357 5965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,358 5966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,358 5966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,359 5967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:35,359 5967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,359 5967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,360 5968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,360 5968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:35,361 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,361 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,362 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,362 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:35,362 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,363 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,363 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,363 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:35,364 5972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,364 5972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,365 5973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,365 5973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:35,366 5974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,366 5974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,366 5974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,367 5975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:35,367 5975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,367 5975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,368 5976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,368 5976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_89,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:35,369 5977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,369 5977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,370 5978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,370 5978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_90,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:35,370 5978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,371 5979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,371 5979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,372 5980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_91,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:35,372 5980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,373 5981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,373 5981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,374 5982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:35,375 5983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:35,376 5984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,377 5985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,378 5986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:35,378 5986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:35,379 5987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,379 5987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,380 5988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:35,381 5989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:35,381 5989 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:35,381 5989 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:35,381 5989 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:35,381 5989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,382 5990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,382 5990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:35,385 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,385 5993 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:35,386 5994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,388 5996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,388 5996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,393 6001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:15:35,395 6003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:35,395 6003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,395 6003 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:35,396 6004 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:35,396 6004 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:35,396 6004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,396 6004 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:15:35,396 6004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:15:35,397 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:15:35,397 6005 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:35,397 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,397 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,401 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:15:35,402 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:15:35,402 6010 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:35,402 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,403 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,407 6015 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:35,411 6019 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:35,413 6021 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:35,413 6021 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:35,934 6542 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56122
2014-09-02 14:15:35,935 6543 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56122
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11152
2014-09-02 14:15:35,935 6543 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11152
2014-09-02 14:15:35,935 6543 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56122 using key 3feec422cb196b12
2014-09-02 14:15:35,936 6544 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:35,936 6544 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:35,958 6566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:35,966 6574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,966 6574 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:35,966 6574 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:35,966 6574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,966 6574 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:35,967 6575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,967 6575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:35,968 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,968 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,968 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,969 6577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:35,969 6577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,969 6577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,970 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,970 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:35,970 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,971 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,971 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,971 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:35,972 6580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,972 6580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,973 6581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,973 6581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:35,974 6582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,974 6582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,974 6582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,975 6583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:35,975 6583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,976 6584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,976 6584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,976 6584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:35,977 6585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,977 6585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,978 6586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,978 6586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:35,979 6587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,979 6587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,979 6587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,980 6588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:35,980 6588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,980 6588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,981 6589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,981 6589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:35,982 6590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,982 6590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,983 6591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,984 6592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_115,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:35,985 6593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,985 6593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,985 6593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,986 6594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_116,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:35,986 6594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,987 6595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,987 6595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,988 6596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:35,989 6597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:35,989 6597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,989 6597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,990 6598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:35,991 6599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:35,993 6601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,993 6601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,994 6602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:35,995 6603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:35,995 6603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,995 6603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,996 6604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:35,997 6605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:35,997 6605 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:35,997 6605 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:35,998 6606 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:35,998 6606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:35,998 6606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:35,999 6607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:36,001 6609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,002 6610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,003 6611 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,005 6613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,005 6613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,010 6618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:15:36,011 6619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:36,012 6620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,012 6620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,016 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:15:36,019 6627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:15:36,019 6627 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:15:36,019 6627 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:15:36,019 6627 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:15:36,019 6627 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:36,020 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,020 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,024 6632 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:36,029 6637 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:36,030 6638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:36,030 6638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:36,598 7206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:36,598 7206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:36,598 7206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:36,598 7206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56124
2014-09-02 14:15:36,598 7206 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56124
2014-09-02 14:15:36,599 7207 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:36,599 7207 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11156
2014-09-02 14:15:36,599 7207 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11156
2014-09-02 14:15:36,599 7207 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56124 using key 3feec422cb196b12
2014-09-02 14:15:36,599 7207 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:36,601 7209 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:36,624 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:36,632 7240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,632 7240 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:36,632 7240 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:36,632 7240 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:36,632 7240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,633 7241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,633 7241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:36,634 7242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,634 7242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,634 7242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,635 7243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:36,635 7243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,636 7244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,636 7244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,636 7244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:36,637 7245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,637 7245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,637 7245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,638 7246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:36,638 7246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,639 7247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,639 7247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,640 7248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:36,640 7248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,640 7248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,641 7249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,641 7249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:36,642 7250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,642 7250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,643 7251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,643 7251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:36,644 7252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,644 7252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,645 7253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,645 7253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:36,646 7254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,646 7254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,647 7255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,647 7255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:36,648 7256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,648 7256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,648 7256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,649 7257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:36,650 7258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,650 7258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,650 7258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,651 7259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_141,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:36,651 7259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,652 7260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,652 7260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,652 7260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:36,653 7261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,653 7261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,654 7262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,654 7262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:36,655 7263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:36,655 7263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,656 7264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,657 7265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:36,657 7265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:36,658 7266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,658 7266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,659 7267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:36,660 7268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:36,660 7268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,661 7269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,662 7270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:36,662 7270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:36,663 7271 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:36,663 7271 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:36,663 7271 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:36,663 7271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,663 7271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,664 7272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:36,667 7275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,667 7275 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,668 7276 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,669 7277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,669 7277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,674 7282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:15:36,676 7284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:36,676 7284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,676 7284 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:36,677 7285 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:36,677 7285 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:36,677 7285 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:15:36,677 7285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,677 7285 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:15:36,677 7285 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:15:36,677 7285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:15:36,678 7286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:15:36,678 7286 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:36,678 7286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,678 7286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,679 7287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:15:36,681 7289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:36,681 7289 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,681 7289 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:15:36,682 7290 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,683 7291 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,683 7291 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:36,683 7291 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:36,683 7291 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,683 7291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,684 7292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,689 7297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:15:36,690 7298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:15:36,690 7298 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:36,691 7299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:36,691 7299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:36,695 7303 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:36,699 7307 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:36,700 7308 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:36,700 7308 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:37,225 7833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:37,226 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:37,226 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:37,226 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56126
2014-09-02 14:15:37,226 7834 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56126
2014-09-02 14:15:37,226 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:37,226 7834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11160
2014-09-02 14:15:37,227 7835 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11160
2014-09-02 14:15:37,227 7835 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56126 using key 3feec422cb196b12
2014-09-02 14:15:37,227 7835 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:37,228 7836 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:37,249 7857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:37,257 7865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,257 7865 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:37,258 7866 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:37,258 7866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,258 7866 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:37,258 7866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,258 7866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:37,259 7867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,259 7867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,259 7867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,260 7868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:37,260 7868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,260 7868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,261 7869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,261 7869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:37,262 7870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,262 7870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,262 7870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,263 7871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:37,264 7872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,264 7872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,264 7872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,265 7873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:37,266 7874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,266 7874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,266 7874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,267 7875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:37,268 7876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,268 7876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,268 7876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,269 7877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:37,270 7878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,270 7878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,270 7878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,271 7879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:37,271 7879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,272 7880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,272 7880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,273 7881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:37,273 7881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,274 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,274 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,274 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:37,275 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,275 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,276 7884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,276 7884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:37,277 7885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,277 7885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,278 7886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,278 7886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:37,279 7887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,279 7887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,279 7887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,280 7888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:37,281 7889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,281 7889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,281 7889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,282 7890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:37,283 7891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:37,284 7892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,284 7892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,285 7893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:37,286 7894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:37,286 7894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,287 7895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,287 7895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:37,288 7896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:37,288 7896 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:37,289 7897 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:37,289 7897 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:37,289 7897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,289 7897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,290 7898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:37,292 7900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:37,292 7900 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,292 7900 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,293 7901 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,294 7902 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,294 7902 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,294 7902 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,294 7902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,294 7902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,299 7907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:15:37,300 7908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:37,300 7908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,301 7909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,304 7912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:15:37,306 7914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:15:37,306 7914 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:15:37,306 7914 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:15:37,306 7914 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:15:37,306 7914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,306 7914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,311 7919 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:37,317 7925 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:37,318 7926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:37,318 7926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56128
2014-09-02 14:15:37,837 8445 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56128
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:37,837 8445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11164
2014-09-02 14:15:37,838 8446 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11164
2014-09-02 14:15:37,838 8446 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56128 using key 3feec422cb196b12
2014-09-02 14:15:37,838 8446 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:37,839 8447 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:37,861 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:37,868 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,868 8476 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:37,868 8476 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:37,868 8476 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:37,868 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,869 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,869 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:37,870 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,870 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,870 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,871 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:37,871 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,871 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,872 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,872 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:37,873 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,873 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,873 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,873 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:37,874 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,874 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,874 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,875 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:37,875 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,875 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,876 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,876 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:37,876 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,877 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,877 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,877 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:37,878 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,878 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,879 8487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,879 8487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:37,880 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,880 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,881 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,881 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:37,882 8490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,882 8490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,882 8490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,883 8491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:37,883 8491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,884 8492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,884 8492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,884 8492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:37,885 8493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,885 8493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,886 8494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,886 8494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:37,887 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,887 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,887 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,887 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:37,888 8496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:37,888 8496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,889 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,889 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:37,890 8498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:37,891 8499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,891 8499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,892 8500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:37,893 8501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:37,893 8501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,893 8501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,894 8502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:37,895 8503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:37,895 8503 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:37,895 8503 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:37,896 8504 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:37,896 8504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,896 8504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,897 8505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:37,899 8507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:37,899 8507 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,899 8507 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,899 8507 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,900 8508 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:37,901 8509 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:37,901 8509 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,901 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,902 8510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,906 8514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:15:37,908 8516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:15:37,908 8516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:37,908 8516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:37,908 8516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:37,909 8517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:37,909 8517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:37,909 8517 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:15:37,909 8517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:15:37,910 8518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:15:37,910 8518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:37,910 8518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,910 8518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,914 8522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:15:37,916 8524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:15:37,916 8524 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:37,916 8524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:37,917 8525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:37,964 8572 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:37,969 8577 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:37,970 8578 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:37,970 8578 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:38,492 9100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:38,492 9100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:38,493 9101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:38,493 9101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56130
2014-09-02 14:15:38,493 9101 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56130
2014-09-02 14:15:38,493 9101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:38,493 9101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11168
2014-09-02 14:15:38,493 9101 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11168
2014-09-02 14:15:38,494 9102 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56130 using key 3feec422cb196b12
2014-09-02 14:15:38,494 9102 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:38,495 9103 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:38,516 9124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:38,524 9132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,524 9132 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:38,524 9132 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:38,524 9132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,524 9132 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:38,525 9133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,525 9133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:38,526 9134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,526 9134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,526 9134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,527 9135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:38,527 9135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,527 9135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,528 9136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,528 9136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:38,528 9136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,529 9137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,529 9137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,529 9137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:38,530 9138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,530 9138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,530 9138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,531 9139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:38,531 9139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,531 9139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,532 9140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,532 9140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:38,533 9141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,533 9141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,533 9141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,534 9142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:38,534 9142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,535 9143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,535 9143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,535 9143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:38,536 9144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,536 9144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,536 9144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,537 9145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:38,538 9146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,538 9146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,538 9146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,539 9147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:38,540 9148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,540 9148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,541 9149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,541 9149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:38,542 9150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,542 9150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,543 9151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,543 9151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:38,544 9152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,544 9152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,545 9153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,545 9153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:38,546 9154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:38,546 9154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,547 9155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,547 9155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:38,548 9156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:38,549 9157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,549 9157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,550 9158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:38,551 9159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:38,551 9159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,551 9159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,552 9160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:38,553 9161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:38,553 9161 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:38,553 9161 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:38,553 9161 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:38,553 9161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,554 9162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,554 9162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:38,557 9165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,557 9165 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:38,558 9166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:38,558 9166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,559 9167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,562 9170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:15:38,563 9171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:38,564 9172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,564 9172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,567 9175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:15:38,570 9178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:15:38,570 9178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:38,571 9179 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:15:38,571 9179 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:15:38,571 9179 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:15:38,571 9179 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:38,571 9179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:38,575 9183 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:38,583 9191 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:38,583 9191 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:38,584 9192 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:39,094 9702 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56132
2014-09-02 14:15:39,095 9703 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56132
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11172
2014-09-02 14:15:39,095 9703 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11172
2014-09-02 14:15:39,095 9703 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56132 using key 3feec422cb196b12
2014-09-02 14:15:39,096 9704 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:39,097 9705 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:39,117 9725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:39,127 9735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,127 9735 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:39,127 9735 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:39,127 9735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,127 9735 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:39,128 9736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,128 9736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:39,128 9736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,129 9737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,129 9737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,129 9737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:39,130 9738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,130 9738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,130 9738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,131 9739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:39,131 9739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,131 9739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,132 9740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,132 9740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:39,132 9740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,133 9741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,133 9741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,133 9741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:39,134 9742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,134 9742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,134 9742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,135 9743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:39,135 9743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,136 9744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,136 9744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,136 9744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:39,137 9745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,137 9745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,137 9745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,138 9746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:39,138 9746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,138 9746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,139 9747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,139 9747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:39,140 9748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,140 9748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,140 9748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,140 9748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:39,141 9749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,141 9749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,141 9749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,142 9750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:39,142 9750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,142 9750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,143 9751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,143 9751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:39,144 9752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,144 9752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,144 9752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,145 9753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:39,146 9754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,146 9754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,146 9754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,147 9755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:39,147 9755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:39,148 9756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,148 9756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,149 9757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:39,150 9758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:39,150 9758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,151 9759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,151 9759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:39,152 9760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:39,152 9760 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:39,153 9761 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:39,153 9761 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:39,153 9761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,153 9761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,154 9762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:39,156 9764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:39,156 9764 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,156 9764 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,156 9764 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,157 9765 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,158 9766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,158 9766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,162 9770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:15:39,164 9772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:39,165 9773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:39,165 9773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,165 9773 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:39,166 9774 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:39,166 9774 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:15:39,166 9774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:15:39,166 9774 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:15:39,166 9774 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:15:39,166 9774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:15:39,166 9774 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:39,166 9774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,167 9775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,167 9775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:15:39,170 9778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:39,170 9778 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,170 9778 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,170 9778 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,170 9778 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,170 9778 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,171 9779 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,172 9780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,172 9780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,176 9784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:15:39,178 9786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:15:39,178 9786 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,178 9786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,179 9787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,183 9791 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:39,189 9797 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:39,190 9798 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:39,190 9798 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:39,715 10323 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:39,716 10324 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:39,716 10324 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:39,716 10324 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56134
2014-09-02 14:15:39,716 10324 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56134
2014-09-02 14:15:39,716 10324 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:39,716 10324 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11176
2014-09-02 14:15:39,716 10324 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11176
2014-09-02 14:15:39,717 10325 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56134 using key 3feec422cb196b12
2014-09-02 14:15:39,717 10325 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:39,718 10326 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:39,737 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:39,745 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,745 10353 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:39,745 10353 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:39,745 10353 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:39,745 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,745 10353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,746 10354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:39,746 10354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,746 10354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,747 10355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,747 10355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:39,748 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,748 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,748 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,748 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:39,749 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,749 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,749 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,750 10358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:39,750 10358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,750 10358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,751 10359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,751 10359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:39,752 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,752 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,752 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,753 10361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:39,753 10361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,754 10362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,754 10362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,755 10363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:39,755 10363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,756 10364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,756 10364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,757 10365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:39,757 10365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,757 10365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,758 10366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,758 10366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:39,759 10367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,759 10367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,759 10367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,760 10368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:39,760 10368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,760 10368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,761 10369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,761 10369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_271,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:39,762 10370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,762 10370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,762 10370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,763 10371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_272,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:39,763 10371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,764 10372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,764 10372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,765 10373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_273,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:39,766 10374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:39,766 10374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,766 10374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,767 10375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:39,768 10376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:39,768 10376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,768 10376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,770 10378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:39,770 10378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:39,771 10379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,771 10379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,772 10380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:39,773 10381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:39,773 10381 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:39,773 10381 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:39,773 10381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,773 10381 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:39,774 10382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,774 10382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:39,777 10385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,777 10385 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:39,778 10386 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:39,779 10387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,779 10387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,784 10392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:15:39,785 10393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:39,785 10393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,785 10393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,789 10397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:15:39,791 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:15:39,791 10399 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:15:39,791 10399 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:15:39,791 10399 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:15:39,791 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:39,791 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:39,795 10403 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:39,799 10407 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:39,800 10408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:39,800 10408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:40,393 11001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:40,393 11001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:40,393 11001 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:40,394 11002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56136
2014-09-02 14:15:40,394 11002 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56136
2014-09-02 14:15:40,394 11002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:40,394 11002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11180
2014-09-02 14:15:40,394 11002 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11180
2014-09-02 14:15:40,394 11002 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56136 using key 3feec422cb196b12
2014-09-02 14:15:40,395 11003 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:40,396 11004 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:40,419 11027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:40,430 11038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,430 11038 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:40,430 11038 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:40,431 11039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,431 11039 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:40,431 11039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,431 11039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:40,432 11040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,432 11040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,433 11041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,433 11041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:40,434 11042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,434 11042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,434 11042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,434 11042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:40,435 11043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,435 11043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,435 11043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,436 11044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:40,436 11044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,436 11044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,437 11045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,437 11045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:40,437 11045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,437 11045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,438 11046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,438 11046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:40,439 11047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,439 11047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,439 11047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,439 11047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:40,440 11048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,440 11048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,440 11048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,441 11049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:40,441 11049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,442 11050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,442 11050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,442 11050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:40,443 11051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,443 11051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,444 11052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,444 11052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_296,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:40,445 11053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,445 11053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,445 11053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,446 11054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_297,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:40,446 11054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,447 11055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,447 11055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,447 11055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_298,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:40,448 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,448 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,448 11056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,449 11057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_299,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:40,449 11057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:40,450 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,450 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,450 11058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:40,451 11059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:40,452 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,452 11060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,453 11061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:40,454 11062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:40,454 11062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,455 11063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,455 11063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:40,456 11064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:40,456 11064 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:40,456 11064 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:40,457 11065 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:40,457 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,457 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,457 11065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:40,460 11068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:40,460 11068 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:40,461 11069 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,461 11069 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,461 11069 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:40,461 11069 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:40,461 11069 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,461 11069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,462 11070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,466 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:15:40,469 11077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:40,469 11077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:40,469 11077 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:40,470 11078 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:40,470 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,470 11078 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:15:40,470 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:15:40,470 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:15:40,470 11078 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:40,471 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,471 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,476 11084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:15:40,478 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:15:40,478 11086 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:40,478 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:40,479 11087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:40,484 11092 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:40,490 11098 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:40,491 11099 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:40,491 11099 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:41,027 11635 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:41,028 11636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:41,028 11636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:41,028 11636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56138
2014-09-02 14:15:41,028 11636 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56138
2014-09-02 14:15:41,028 11636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:41,028 11636 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11184
2014-09-02 14:15:41,028 11636 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11184
2014-09-02 14:15:41,029 11637 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56138 using key 3feec422cb196b12
2014-09-02 14:15:41,029 11637 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:41,030 11638 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:41,047 11655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:41,055 11663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,055 11663 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:41,056 11664 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:41,056 11664 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:41,056 11664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,056 11664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,057 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:41,057 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,057 11665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,058 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,058 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:41,058 11666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,059 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,059 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,059 11667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:41,060 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,060 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,060 11668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,061 11669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:41,061 11669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,061 11669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,062 11670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,062 11670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:41,063 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,063 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,063 11671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,064 11672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_318,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:41,064 11672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,065 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,065 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,065 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_319,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:41,066 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,066 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,067 11675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,067 11675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_320,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:41,068 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,068 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,068 11676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,069 11677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_321,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:41,069 11677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,069 11677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,070 11678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,070 11678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_322,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:41,071 11679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,072 11680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,072 11680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,072 11680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_323,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:41,073 11681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,073 11681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,073 11681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,074 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_324,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:41,074 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,074 11682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,075 11683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,075 11683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_325,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:41,076 11684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,076 11684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,076 11684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,077 11685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:41,078 11686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:41,078 11686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,079 11687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,080 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:41,080 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:41,080 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,081 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,082 11690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:41,084 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:41,084 11692 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:41,084 11692 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:41,084 11692 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:41,084 11692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,085 11693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,085 11693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:41,088 11696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,088 11696 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,089 11697 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,089 11697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,090 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,093 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:15:41,094 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:41,095 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,095 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,098 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:15:41,100 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:15:41,100 11708 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:15:41,100 11708 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:15:41,100 11708 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:15:41,100 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,100 11708 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:41,100 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,104 11712 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:41,108 11716 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:41,109 11717 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:41,109 11717 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:41,805 12413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:41,806 12414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:41,806 12414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:41,806 12414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56140
2014-09-02 14:15:41,806 12414 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56140
2014-09-02 14:15:41,806 12414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:41,806 12414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11188
2014-09-02 14:15:41,807 12415 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11188
2014-09-02 14:15:41,807 12415 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56140 using key 3feec422cb196b12
2014-09-02 14:15:41,808 12416 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:41,809 12417 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:41,827 12435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:41,835 12443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,835 12443 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:41,836 12444 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:41,836 12444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,836 12444 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:41,836 12444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,836 12444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:41,837 12445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,837 12445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,838 12446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,838 12446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:41,838 12446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,838 12446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,839 12447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,839 12447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:41,839 12447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,840 12448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,840 12448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,840 12448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:41,841 12449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,841 12449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,841 12449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,841 12449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_343,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:41,842 12450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,842 12450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,843 12451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,843 12451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_344,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:41,843 12451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,844 12452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,844 12452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,844 12452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_345,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:41,845 12453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,845 12453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,845 12453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,846 12454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_346,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:41,846 12454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,846 12454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,847 12455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,847 12455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_347,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:41,848 12456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,848 12456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,848 12456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,849 12457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_348,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:41,849 12457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,849 12457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,850 12458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,850 12458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_349,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:41,851 12459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,851 12459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,851 12459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,852 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_350,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:41,852 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,853 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,853 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,854 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:41,854 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:41,855 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,855 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,855 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:41,856 12464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:41,857 12465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,857 12465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,858 12466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:41,859 12467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:41,859 12467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,859 12467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,860 12468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:41,861 12469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:41,861 12469 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:41,862 12470 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:41,862 12470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,862 12470 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:41,862 12470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,863 12471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:41,865 12473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:41,865 12473 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,865 12473 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,865 12473 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,865 12473 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,865 12473 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,866 12474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,866 12474 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,867 12475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,871 12479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:15:41,873 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:15:41,873 12481 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:41,873 12481 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:41,873 12481 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:41,873 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,873 12481 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:41,873 12481 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:41,874 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:15:41,874 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:15:41,874 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:15:41,874 12482 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:41,875 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,875 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,875 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:15:41,879 12487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,879 12487 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:15:41,880 12488 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,880 12488 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,880 12488 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:41,880 12488 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:41,880 12488 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,880 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,880 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,884 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:15:41,887 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:15:41,887 12495 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:41,887 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:41,887 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:41,891 12499 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:41,897 12505 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:41,907 12515 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:41,908 12516 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:42,482 13090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:42,483 13091 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:42,483 13091 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:42,483 13091 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56142
2014-09-02 14:15:42,483 13091 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56142
2014-09-02 14:15:42,483 13091 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:42,484 13092 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11192
2014-09-02 14:15:42,484 13092 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11192
2014-09-02 14:15:42,484 13092 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56142 using key 3feec422cb196b12
2014-09-02 14:15:42,485 13093 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:42,486 13094 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:42,503 13111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:42,511 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,511 13119 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:42,511 13119 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:42,511 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,511 13119 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:42,512 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,512 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_365,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:42,512 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,513 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,513 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,513 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_366,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:42,514 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,514 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,514 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,515 13123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_367,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:42,515 13123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,515 13123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,516 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,516 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_368,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:42,517 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,517 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,517 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,517 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_369,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:42,518 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,518 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,518 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,519 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_370,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:42,519 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,520 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,520 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,520 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_371,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:42,521 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,521 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,521 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,522 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_372,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:42,522 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,522 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,523 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,523 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_373,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:42,524 13132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,524 13132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,524 13132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,525 13133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_374,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:42,526 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,526 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,526 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,527 13135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_375,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:42,527 13135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,527 13135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,528 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,528 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:42,529 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,529 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,529 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,529 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:42,530 13138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:42,530 13138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,531 13139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,531 13139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:42,532 13140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:42,533 13141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,533 13141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,534 13142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:42,535 13143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:42,536 13144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,536 13144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,537 13145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:42,538 13146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:42,538 13146 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:42,538 13146 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:42,538 13146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,538 13146 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:42,538 13146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,539 13147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:42,541 13149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,541 13149 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:42,542 13150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:42,542 13150 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:42,542 13150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,546 13154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:15:42,547 13155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:15:42,547 13155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,548 13156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,550 13158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:15:42,552 13160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:15:42,552 13160 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:15:42,552 13160 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:15:42,552 13160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:42,552 13160 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:15:42,553 13161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:42,556 13164 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:15:42,564 13172 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:15:42,565 13173 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:15:42,565 13173 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:15:43,176 13784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:15:43,176 13784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:15:43,176 13784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:15:43,176 13784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56144
2014-09-02 14:15:43,177 13785 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56144
2014-09-02 14:15:43,177 13785 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:15:43,177 13785 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11196
2014-09-02 14:15:43,177 13785 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11196
2014-09-02 14:15:43,177 13785 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56144 using key 3feec422cb196b12
2014-09-02 14:15:43,178 13786 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:15:43,180 13788 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:15:43,199 13807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:15:43,207 13815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,207 13815 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:15:43,207 13815 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:15:43,207 13815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,207 13815 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:15:43,208 13816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,208 13816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_391,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:15:43,209 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,209 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,209 13817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,210 13818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_392,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:15:43,210 13818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,210 13818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,211 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,211 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_393,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:15:43,211 13819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,212 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,212 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,212 13820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_394,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:15:43,213 13821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,213 13821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,214 13822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,214 13822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_395,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:15:43,214 13822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,215 13823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,215 13823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,215 13823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_396,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:15:43,216 13824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,216 13824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,216 13824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,217 13825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_397,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:15:43,217 13825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,217 13825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,218 13826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,218 13826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_398,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:15:43,218 13826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,219 13827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,219 13827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,219 13827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_399,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:15:43,220 13828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,220 13828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,220 13828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,221 13829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_400,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:15:43,221 13829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,221 13829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,222 13830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,222 13830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:15:43,223 13831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,223 13831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,223 13831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,224 13832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:15:43,224 13832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,224 13832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,225 13833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,225 13833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:15:43,226 13834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:15:43,226 13834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,226 13834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,227 13835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:15:43,228 13836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:43,228 13836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,228 13836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,229 13837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:43,230 13838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:15:43,230 13838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,230 13838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,231 13839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:15:43,232 13840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:15:43,233 13841 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:15:43,233 13841 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:15:43,233 13841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,233 13841 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:15:43,233 13841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,234 13842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:15:43,237 13845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,237 13845 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:15:43,238 13846 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,238 13846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,239 13847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,242 13850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:15:43,245 13853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:15:43,245 13853 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:15:43,245 13853 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:43,245 13853 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:15:43,245 13853 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:43,245 13853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,245 13853 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:15:43,246 13854 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:43,246 13854 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:15:43,246 13854 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:15:43,246 13854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,246 13854 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:15:43,246 13854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:15:43,246 13854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:15:43,247 13855 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:15:43,247 13855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,247 13855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:15:43,250 13858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:15:43,251 13859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:15:43,251 13859 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:15:43,251 13859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:15:43,252 13860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:25,164 2746 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:18:25,178 2760 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:18:25,182 2764 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:18:25,182 2764 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:18:25,794 3376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:18:25,794 3376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:18:25,794 3376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:18:25,794 3376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56153
2014-09-02 14:18:25,795 3377 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56153
2014-09-02 14:18:25,795 3377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:18:25,795 3377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11207
2014-09-02 14:18:25,795 3377 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11207
2014-09-02 14:18:25,796 3378 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56153 using key d41212ad42d19405
2014-09-02 14:18:25,797 3379 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:18:25,798 3380 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:18:26,000 3582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:18:26,011 3593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,011 3593 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:18:26,011 3593 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:18:26,011 3593 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:18:26,040 3622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,041 3623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,044 3626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:18:26,045 3627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,045 3627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,046 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,047 3629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:18:26,047 3629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,048 3630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,048 3630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,049 3631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:18:26,050 3632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,051 3633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,051 3633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,052 3634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:18:26,053 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,053 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,053 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,054 3636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:18:26,055 3637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,055 3637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,056 3638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,057 3639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:18:26,058 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,058 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,059 3641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,060 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:18:26,061 3643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,061 3643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,061 3643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,062 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:18:26,063 3645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,064 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,064 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,065 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:18:26,066 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,067 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,067 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,068 3650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:18:26,069 3651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,070 3652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,070 3652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,072 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:18:26,073 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,073 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,074 3656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,075 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:18:26,076 3658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,076 3658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,077 3659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,078 3660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:18:26,079 3661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:18:26,080 3662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,080 3662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,110 3692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:18:26,112 3694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:18:26,116 3698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,117 3699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,129 3711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:18:26,130 3712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:18:26,131 3713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,132 3714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,143 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:18:26,147 3729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 14:18:26,147 3729 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:18:26,147 3729 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:18:26,147 3729 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:18:26,148 3730 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:18:26,149 3731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,150 3732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,150 3732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:18:26,151 3733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:18:26,151 3733 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:18:26,152 3734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,152 3734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,160 3742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:18:26,163 3745 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,163 3745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,164 3746 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:18:26,165 3747 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,177 3759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,178 3760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:18:26,204 3786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:18:26,206 3788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:18:26,206 3788 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:18:26,207 3789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:18:26,207 3789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:06,586 2424 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:20:06,601 2439 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:20:06,604 2442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:20:06,604 2442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:20:07,148 2986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:20:07,148 2986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:20:07,149 2987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:20:07,149 2987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56170
2014-09-02 14:20:07,149 2987 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56170
2014-09-02 14:20:07,149 2987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:20:07,149 2987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11215
2014-09-02 14:20:07,150 2988 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11215
2014-09-02 14:20:07,151 2989 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56170 using key e2ba30494edc14a
2014-09-02 14:20:07,151 2989 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:20:07,153 2991 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:20:07,360 3198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:20:07,369 3207 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:20:07,369 3207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,369 3207 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:20:07,370 3208 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:20:07,404 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,405 3243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,409 3247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:20:07,410 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,411 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,411 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,412 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:20:07,412 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,413 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,413 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,414 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:20:07,414 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,415 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,415 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,416 3254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:20:07,417 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,418 3256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,418 3256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,419 3257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:20:07,420 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,421 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,421 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,423 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:20:07,423 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,424 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,424 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,425 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:20:07,425 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,426 3264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,426 3264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,427 3265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:20:07,428 3266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,429 3267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,429 3267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,430 3268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:20:07,431 3269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,431 3269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,432 3270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,433 3271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:20:07,434 3272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,434 3272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,435 3273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,436 3274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:20:07,437 3275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,437 3275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,438 3276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,439 3277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:20:07,439 3277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,440 3278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,440 3278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,441 3279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:20:07,442 3280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:20:07,442 3280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,443 3281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,467 3305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:20:07,468 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:20:07,471 3309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,472 3310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,485 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:20:07,486 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:20:07,487 3325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,488 3326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:20:07,500 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:20:07,501 3339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:20:07,503 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:20:07,503 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:54,398 3130 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:54,409 3141 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:54,412 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:54,413 3145 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:54,922 3654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:54,922 3654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:54,922 3654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:54,922 3654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56179
2014-09-02 14:22:54,923 3655 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56179
2014-09-02 14:22:54,923 3655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:54,923 3655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11221
2014-09-02 14:22:54,923 3655 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11221
2014-09-02 14:22:54,924 3656 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56179 using key 38908c39a88419d4
2014-09-02 14:22:54,925 3657 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:54,926 3658 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:55,137 3869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:55,147 3879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,147 3879 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:55,147 3879 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:55,147 3879 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:55,168 3900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,169 3901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,171 3903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:55,172 3904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,172 3904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,173 3905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,173 3905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:55,174 3906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,174 3906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,175 3907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,175 3907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:55,176 3908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,176 3908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,176 3908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,177 3909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:55,177 3909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,178 3910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,178 3910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,178 3910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:55,179 3911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,179 3911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,180 3912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,180 3912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:55,181 3913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,181 3913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,181 3913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,182 3914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:55,182 3914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,183 3915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,183 3915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,184 3916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:55,184 3916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,184 3916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,185 3917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,185 3917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:55,186 3918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,186 3918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,186 3918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,187 3919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:55,188 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,188 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,188 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,189 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:55,189 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,190 3922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,190 3922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,191 3923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:55,191 3923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,192 3924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,192 3924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,193 3925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:55,193 3925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,194 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,194 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,216 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:55,217 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:55,221 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,221 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,234 3966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:55,235 3967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:55,236 3968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,237 3969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,241 3973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:55,243 3975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:55,243 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:55,243 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:55,243 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:55,244 3976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,245 3977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,257 3989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:55,261 3993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:55,261 3993 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,261 3993 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,261 3993 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,261 3993 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,262 3994 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,263 3995 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,263 3995 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,263 3995 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,273 4005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,274 4006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,293 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:22:55,295 4027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:22:55,297 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,297 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,306 4038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:22:55,308 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:22:55,308 4040 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:22:55,308 4040 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:22:55,309 4041 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:22:55,309 4041 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:22:55,309 4041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,310 4042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,316 4048 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:55,321 4053 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:55,323 4055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:55,323 4055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:55,876 4608 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:55,877 4609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:55,877 4609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:55,877 4609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56181
2014-09-02 14:22:55,877 4609 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56181
2014-09-02 14:22:55,877 4609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:55,878 4610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11225
2014-09-02 14:22:55,878 4610 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11225
2014-09-02 14:22:55,878 4610 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56181 using key 38908c39a88419d4
2014-09-02 14:22:55,878 4610 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:55,879 4611 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:55,922 4654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:55,932 4664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,932 4664 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:55,932 4664 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:55,932 4664 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:55,932 4664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,933 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,933 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:55,934 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,934 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,934 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,935 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:55,936 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,936 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,936 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,937 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:55,937 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,938 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,938 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,939 4671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:55,939 4671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,940 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,940 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,941 4673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:55,942 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,942 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,942 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,943 4675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:55,943 4675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,944 4676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,944 4676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,944 4676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:55,945 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,945 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,946 4678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,947 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:55,947 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,947 4679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,948 4680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,948 4680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:55,949 4681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,949 4681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,949 4681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,950 4682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:55,951 4683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,951 4683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,951 4683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,952 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:55,952 4684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,953 4685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,953 4685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,954 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:55,954 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,954 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,955 4687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,955 4687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_39,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:55,956 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:55,956 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,956 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,957 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:55,958 4690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:55,959 4691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,960 4692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,961 4693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:55,962 4694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:55,962 4694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,963 4695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,964 4696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:55,965 4697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:55,965 4697 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:55,965 4697 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:55,966 4698 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:55,966 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,966 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,967 4699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:55,971 4703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:55,971 4703 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,972 4704 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,973 4705 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,976 4708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,977 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,986 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:22:55,989 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:22:55,989 4721 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:22:55,990 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,990 4722 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:55,991 4723 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:22:55,991 4723 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:22:55,991 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,991 4723 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:22:55,992 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:22:55,992 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:22:55,992 4724 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:22:55,993 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:55,993 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:55,994 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_34,formula_33,formula_31,formula_29,formula_32,formula_35,formula_30,formula_38,formula_27,formula_36,formula_39,formula_28,formula_37],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:22:55,998 4730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:55,998 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:55,999 4731 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:56,000 4732 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,004 4736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,005 4737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,014 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:22:56,016 4748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:22:56,017 4749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,018 4750 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,018 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,024 4756 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:56,031 4763 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:56,032 4764 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:56,033 4765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:56,598 5330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:56,598 5330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:56,598 5330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:56,598 5330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56183
2014-09-02 14:22:56,598 5330 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56183
2014-09-02 14:22:56,599 5331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:56,599 5331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11229
2014-09-02 14:22:56,599 5331 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11229
2014-09-02 14:22:56,599 5331 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56183 using key 38908c39a88419d4
2014-09-02 14:22:56,599 5331 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:56,600 5332 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:56,638 5370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:56,647 5379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,647 5379 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:56,648 5380 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:56,648 5380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,648 5380 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:56,648 5380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,648 5380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:56,649 5381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,649 5381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,650 5382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,650 5382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:56,651 5383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,651 5383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,651 5383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,652 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:56,652 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,652 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,653 5385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,653 5385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:56,654 5386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,654 5386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,654 5386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,655 5387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:56,655 5387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,655 5387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,656 5388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,656 5388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:56,657 5389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,657 5389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,657 5389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,658 5390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:56,658 5390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,658 5390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,659 5391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,659 5391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:56,660 5392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,660 5392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,660 5392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,661 5393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:56,661 5393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,662 5394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,662 5394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,662 5394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:56,663 5395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,663 5395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,664 5396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,664 5396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:56,665 5397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,665 5397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,666 5398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,666 5398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:56,666 5398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,667 5399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,667 5399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,667 5399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:56,668 5400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:56,668 5400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,669 5401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,669 5401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:56,670 5402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:56,671 5403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,672 5404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,673 5405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:56,673 5405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:56,674 5406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,674 5406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,675 5407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:56,676 5408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:56,676 5408 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:56,676 5408 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:56,676 5408 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:56,677 5409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,677 5409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,678 5410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_60,formula_59,formula_57,formula_55,formula_58,formula_61,formula_56,formula_64,formula_53,formula_62,formula_65,formula_54,formula_63],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:56,682 5414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:56,682 5414 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,682 5414 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,682 5414 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,683 5415 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,684 5416 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:56,684 5416 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:56,684 5416 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:56,686 5418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,687 5419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,693 5425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:22:56,694 5426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:22:56,694 5426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,695 5427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,699 5431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:22:56,701 5433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:22:56,701 5433 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:22:56,701 5433 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:22:56,701 5433 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:22:56,701 5433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:56,702 5434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:56,707 5439 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:56,711 5443 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:56,712 5444 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:56,713 5445 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:57,278 6010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:57,279 6011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:57,279 6011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:57,279 6011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56185
2014-09-02 14:22:57,279 6011 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56185
2014-09-02 14:22:57,279 6011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:57,279 6011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11233
2014-09-02 14:22:57,280 6012 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11233
2014-09-02 14:22:57,280 6012 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56185 using key 38908c39a88419d4
2014-09-02 14:22:57,280 6012 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:57,281 6013 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:57,319 6051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:57,330 6062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,330 6062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:57,331 6063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:57,331 6063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,331 6063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:57,331 6063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,332 6064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:57,332 6064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,332 6064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,333 6065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,333 6065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:57,334 6066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,334 6066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,334 6066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,335 6067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:57,335 6067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,335 6067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,336 6068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,336 6068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:57,337 6069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,337 6069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,337 6069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,338 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:57,338 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,338 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,339 6071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,339 6071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:57,340 6072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,340 6072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,341 6073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,341 6073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:57,342 6074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,342 6074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,342 6074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,343 6075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:57,343 6075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,343 6075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,344 6076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,344 6076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:57,345 6077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,345 6077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,345 6077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,346 6078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:57,346 6078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,347 6079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,347 6079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,347 6079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_89,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:57,348 6080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,348 6080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,349 6081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,349 6081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_90,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:57,350 6082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,350 6082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,350 6082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,350 6082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_91,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:57,351 6083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:57,351 6083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,352 6084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,352 6084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:57,353 6085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:57,354 6086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,355 6087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,356 6088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:57,356 6088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:57,357 6089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,357 6089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,358 6090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:57,359 6091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:57,359 6091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:57,360 6092 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:57,360 6092 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:57,360 6092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,360 6092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,361 6093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_86,formula_85,formula_83,formula_81,formula_84,formula_87,formula_82,formula_90,formula_79,formula_88,formula_91,formula_80,formula_89],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:57,364 6096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,364 6096 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:57,365 6097 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,367 6099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,368 6100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,373 6105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:22:57,376 6108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:22:57,376 6108 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:22:57,376 6108 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:57,376 6108 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:22:57,376 6108 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:57,376 6108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,377 6109 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:22:57,377 6109 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:57,377 6109 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:22:57,377 6109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,377 6109 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:57,377 6109 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:22:57,377 6109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:22:57,378 6110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:22:57,378 6110 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:22:57,378 6110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,378 6110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,383 6115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:22:57,385 6117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:22:57,385 6117 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:57,385 6117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:57,385 6117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:57,390 6122 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:57,394 6126 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:57,395 6127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:57,395 6127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:57,989 6721 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:57,989 6721 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:57,990 6722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:57,990 6722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56187
2014-09-02 14:22:57,990 6722 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56187
2014-09-02 14:22:57,990 6722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:57,990 6722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11237
2014-09-02 14:22:57,990 6722 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11237
2014-09-02 14:22:57,990 6722 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56187 using key 38908c39a88419d4
2014-09-02 14:22:57,991 6723 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:57,992 6724 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:58,012 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:58,020 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,020 6752 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:58,020 6752 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:58,020 6752 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:58,020 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,021 6753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,021 6753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:58,022 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,022 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,022 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,023 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:58,023 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,023 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,024 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,024 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:58,025 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,025 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,025 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,026 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:58,026 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,026 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,027 6759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,027 6759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:58,028 6760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,028 6760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,028 6760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,029 6761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:58,029 6761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,029 6761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,030 6762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,030 6762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:58,031 6763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,031 6763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,031 6763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,032 6764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:58,032 6764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,032 6764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,033 6765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,033 6765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:58,034 6766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,034 6766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,034 6766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,035 6767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:58,036 6768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,036 6768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,036 6768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,037 6769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_115,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:58,038 6770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,038 6770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,038 6770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,039 6771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_116,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:58,040 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,040 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,040 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,041 6773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:58,042 6774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,042 6774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,042 6774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,043 6775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:58,044 6776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:58,045 6777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,045 6777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,046 6778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:58,047 6779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:58,047 6779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,048 6780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,049 6781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:58,050 6782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:58,050 6782 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:58,050 6782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,050 6782 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:58,051 6783 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:58,051 6783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,052 6784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_112,formula_111,formula_109,formula_107,formula_110,formula_113,formula_108,formula_116,formula_105,formula_114,formula_117,formula_106,formula_115],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:58,055 6787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,057 6789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,058 6790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,059 6791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,059 6791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,066 6798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:22:58,068 6800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:22:58,069 6801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,070 6802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,075 6807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:22:58,079 6811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:22:58,079 6811 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:22:58,079 6811 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:22:58,079 6811 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:22:58,079 6811 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:22:58,080 6812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,080 6812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,086 6818 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:58,093 6825 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:58,094 6826 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:58,094 6826 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:58,761 7493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:58,762 7494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:58,762 7494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:58,762 7494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56189
2014-09-02 14:22:58,762 7494 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56189
2014-09-02 14:22:58,762 7494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:58,762 7494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11241
2014-09-02 14:22:58,762 7494 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11241
2014-09-02 14:22:58,763 7495 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56189 using key 38908c39a88419d4
2014-09-02 14:22:58,763 7495 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:58,764 7496 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:58,788 7520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:58,795 7527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,795 7527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:58,795 7527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:58,795 7527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:58,795 7527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,796 7528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,796 7528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:58,797 7529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,797 7529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,797 7529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,797 7529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:58,798 7530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,798 7530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,799 7531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,799 7531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:58,799 7531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,800 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,800 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,801 7533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:58,801 7533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,802 7534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,802 7534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,803 7535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:58,804 7536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,804 7536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,804 7536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,805 7537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:58,805 7537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,806 7538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,806 7538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,806 7538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:58,807 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,807 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,807 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,808 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:58,808 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,809 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,809 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,809 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:58,810 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,810 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,810 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,811 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:58,811 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,812 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,812 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,812 7544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_141,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:58,813 7545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,813 7545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,813 7545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,814 7546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:58,814 7546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,815 7547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,815 7547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,815 7547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:58,816 7548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:58,816 7548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,817 7549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,817 7549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:58,818 7550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:58,819 7551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,819 7551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,820 7552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:58,821 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:58,821 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,821 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,822 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:58,823 7555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:58,823 7555 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:58,823 7555 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:58,823 7555 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:58,824 7556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,824 7556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,824 7556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:58,827 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,827 7559 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,828 7560 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,829 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,829 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,833 7565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:22:58,836 7568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:22:58,836 7568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:22:58,836 7568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:22:58,837 7569 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:22:58,836 7568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,837 7569 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:22:58,837 7569 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:22:58,837 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:22:58,837 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:22:58,838 7570 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:22:58,838 7570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,838 7570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,839 7571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_138,formula_137,formula_135,formula_133,formula_136,formula_139,formula_134,formula_142,formula_131,formula_140,formula_143,formula_132,formula_141],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:22:58,841 7573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:58,841 7573 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,841 7573 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:58,842 7574 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,844 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,844 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,849 7581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:22:58,850 7582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:22:58,850 7582 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:58,851 7583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:58,851 7583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:58,854 7586 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:58,858 7590 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:58,859 7591 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:58,860 7592 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:59,379 8111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:59,380 8112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:59,380 8112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:59,380 8112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56191
2014-09-02 14:22:59,380 8112 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56191
2014-09-02 14:22:59,380 8112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:59,380 8112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11245
2014-09-02 14:22:59,380 8112 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11245
2014-09-02 14:22:59,381 8113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56191 using key 38908c39a88419d4
2014-09-02 14:22:59,381 8113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:59,382 8114 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:22:59,401 8133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:22:59,409 8141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,409 8141 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:22:59,409 8141 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:22:59,409 8141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,409 8141 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:22:59,409 8141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,410 8142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:22:59,410 8142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,410 8142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,411 8143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,411 8143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:22:59,411 8143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,412 8144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,412 8144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,412 8144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:22:59,413 8145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,413 8145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,413 8145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,414 8146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:22:59,414 8146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,414 8146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,415 8147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,415 8147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_161,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:22:59,416 8148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,416 8148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,416 8148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,417 8149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_162,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:22:59,417 8149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,417 8149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,418 8150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,418 8150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_163,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:22:59,419 8151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,419 8151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,419 8151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,419 8151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:22:59,420 8152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,420 8152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,420 8152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,421 8153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:22:59,421 8153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,421 8153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,422 8154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,422 8154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:22:59,423 8155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,423 8155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,424 8156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,424 8156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:22:59,425 8157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,425 8157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,425 8157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,426 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:22:59,426 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,426 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,427 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,427 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:22:59,427 8159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:22:59,428 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,428 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,428 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:22:59,429 8161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:59,430 8162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,430 8162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,432 8164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:59,433 8165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:22:59,433 8165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,434 8166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,435 8167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:22:59,436 8168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:22:59,436 8168 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:22:59,436 8168 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:22:59,436 8168 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:22:59,437 8169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,437 8169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,438 8170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_164,formula_163,formula_161,formula_159,formula_162,formula_165,formula_160,formula_168,formula_157,formula_166,formula_169,formula_158,formula_167],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:22:59,440 8172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:22:59,440 8172 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,440 8172 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,440 8172 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:59,441 8173 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,442 8174 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,442 8174 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:22:59,442 8174 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:22:59,442 8174 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:22:59,442 8174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,442 8174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,448 8180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:22:59,450 8182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:22:59,450 8182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,450 8182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,455 8187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:22:59,457 8189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:22:59,457 8189 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:22:59,457 8189 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:22:59,457 8189 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:22:59,457 8189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:22:59,458 8190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:22:59,462 8194 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:22:59,467 8199 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:22:59,468 8200 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:22:59,468 8200 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:22:59,986 8718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:22:59,986 8718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:22:59,986 8718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:22:59,986 8718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56193
2014-09-02 14:22:59,987 8719 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56193
2014-09-02 14:22:59,987 8719 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:22:59,987 8719 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11249
2014-09-02 14:22:59,987 8719 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11249
2014-09-02 14:22:59,987 8719 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56193 using key 38908c39a88419d4
2014-09-02 14:22:59,988 8720 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:22:59,989 8721 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:00,012 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:00,020 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,020 8752 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:00,020 8752 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:00,020 8752 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:00,020 8752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,021 8753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,021 8753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:00,022 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,022 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,023 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,023 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:00,024 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,024 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,024 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,024 8756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_185,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:00,025 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,025 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,025 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,026 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_186,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:00,027 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,027 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,027 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,028 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_187,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:00,028 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,029 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,029 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,030 8762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_188,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:00,030 8762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,031 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,031 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,031 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:00,032 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,032 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,033 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,033 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:00,033 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,034 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,034 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,034 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:00,035 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,035 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,036 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,036 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:00,037 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,037 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,037 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,038 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:00,039 8771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,039 8771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,039 8771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,040 8772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:00,040 8772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,041 8773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,041 8773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,042 8774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:00,042 8774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,043 8775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,043 8775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,044 8776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:00,045 8777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:00,046 8778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,046 8778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,048 8780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:00,048 8780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:00,048 8780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,049 8781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,050 8782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:00,051 8783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:00,051 8783 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:00,051 8783 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:00,051 8783 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:00,052 8784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,052 8784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,053 8785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_190,formula_189,formula_187,formula_185,formula_188,formula_191,formula_186,formula_194,formula_183,formula_192,formula_195,formula_184,formula_193],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:00,055 8787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:00,055 8787 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,055 8787 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,055 8787 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,056 8788 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,057 8789 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,057 8789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,057 8789 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,057 8789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,062 8794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:23:00,065 8797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:23:00,065 8797 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:23:00,065 8797 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:00,065 8797 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:00,066 8798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:00,066 8798 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:23:00,066 8798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,067 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:23:00,067 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:23:00,067 8799 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:00,067 8799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,068 8800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,072 8804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:23:00,074 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:23:00,074 8806 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,074 8806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,075 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,118 8850 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:00,126 8858 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:00,128 8860 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:00,128 8860 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:00,647 9379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:00,648 9380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:00,648 9380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:00,648 9380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56195
2014-09-02 14:23:00,649 9381 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56195
2014-09-02 14:23:00,649 9381 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:00,649 9381 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11253
2014-09-02 14:23:00,649 9381 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11253
2014-09-02 14:23:00,649 9381 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56195 using key 38908c39a88419d4
2014-09-02 14:23:00,650 9382 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:00,651 9383 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:00,672 9404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:00,682 9414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,682 9414 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:00,682 9414 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:00,682 9414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,682 9414 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:00,683 9415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,683 9415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_209,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:00,684 9416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,684 9416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,684 9416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,685 9417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_210,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:00,685 9417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,685 9417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,686 9418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,686 9418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:00,687 9419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,687 9419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,687 9419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,688 9420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:00,688 9420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,688 9420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,689 9421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,689 9421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:00,690 9422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,690 9422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,690 9422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,691 9423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:00,691 9423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,691 9423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,692 9424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,692 9424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:00,693 9425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,693 9425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,694 9426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,694 9426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:00,695 9427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,695 9427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,696 9428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,696 9428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:00,697 9429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,697 9429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,698 9430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,698 9430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:00,699 9431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,699 9431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,699 9431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,700 9432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:00,700 9432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,700 9432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,701 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,701 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:00,702 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,702 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,703 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,703 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:00,704 9436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:00,704 9436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,705 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,705 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:00,706 9438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:00,707 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,708 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,709 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:00,709 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:00,710 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,710 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,711 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:00,712 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:00,712 9444 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:00,712 9444 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:00,712 9444 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:00,712 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,712 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,713 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_216,formula_215,formula_213,formula_211,formula_214,formula_217,formula_212,formula_220,formula_209,formula_218,formula_221,formula_210,formula_219],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:00,715 9447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:00,715 9447 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:00,716 9448 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:00,717 9449 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:00,717 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,717 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,721 9453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:23:00,722 9454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:23:00,722 9454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,723 9455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,726 9458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:23:00,728 9460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:23:00,728 9460 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:23:00,728 9460 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:23:00,728 9460 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:23:00,729 9461 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:00,729 9461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:00,729 9461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:00,733 9465 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:00,740 9472 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:00,741 9473 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:00,741 9473 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:01,249 9981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:01,250 9982 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:01,250 9982 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:01,250 9982 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56197
2014-09-02 14:23:01,250 9982 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56197
2014-09-02 14:23:01,250 9982 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:01,250 9982 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11257
2014-09-02 14:23:01,250 9982 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11257
2014-09-02 14:23:01,251 9983 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56197 using key 38908c39a88419d4
2014-09-02 14:23:01,251 9983 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:01,252 9984 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:01,270 10002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:01,278 10010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,278 10010 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:01,278 10010 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:01,279 10011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,279 10011 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:01,279 10011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,279 10011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_235,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:01,280 10012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,280 10012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,281 10013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,281 10013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:01,282 10014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,282 10014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,282 10014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,283 10015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:01,283 10015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,283 10015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,284 10016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,284 10016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:01,285 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,285 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,285 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,285 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:01,286 10018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,286 10018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,286 10018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,287 10019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:01,287 10019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,288 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,288 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,288 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:01,289 10021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,289 10021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,290 10022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,290 10022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:01,291 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,291 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,291 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,292 10024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:01,292 10024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,293 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,293 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,293 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:01,294 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,294 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,295 10027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,295 10027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:01,295 10027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,296 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,296 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,296 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:01,297 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,297 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,297 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,298 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:01,298 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,298 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,299 10031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,299 10031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:01,300 10032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:01,301 10033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,301 10033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,302 10034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:01,302 10034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:01,303 10035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,303 10035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,304 10036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:01,305 10037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:01,305 10037 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:01,305 10037 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:01,305 10037 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:01,305 10037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,306 10038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,306 10038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:01,309 10041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,309 10041 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,310 10042 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,310 10042 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,310 10042 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,310 10042 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,310 10042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,311 10043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,314 10046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:23:01,316 10048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:23:01,316 10048 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:23:01,317 10049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:01,317 10049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:23:01,317 10049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:23:01,317 10049 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:23:01,318 10050 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:23:01,318 10050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:23:01,318 10050 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:01,318 10050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,318 10050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,319 10051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_242,formula_241,formula_239,formula_237,formula_240,formula_243,formula_238,formula_246,formula_235,formula_244,formula_247,formula_236,formula_245],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:23:01,322 10054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:01,322 10054 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,322 10054 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,322 10054 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,322 10054 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,322 10054 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,323 10055 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,323 10055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,324 10056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,328 10060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:23:01,330 10062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:23:01,330 10062 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,331 10063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,331 10063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,335 10067 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:01,342 10074 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:01,342 10074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:01,343 10075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:01,873 10605 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:01,873 10605 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:01,874 10606 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:01,874 10606 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56199
2014-09-02 14:23:01,874 10606 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56199
2014-09-02 14:23:01,874 10606 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:01,874 10606 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11261
2014-09-02 14:23:01,874 10606 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11261
2014-09-02 14:23:01,874 10606 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56199 using key 38908c39a88419d4
2014-09-02 14:23:01,875 10607 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:01,876 10608 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:01,896 10628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:01,903 10635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,903 10635 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:01,903 10635 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:01,903 10635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,903 10635 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:01,903 10635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,904 10636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:01,904 10636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,904 10636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,905 10637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,905 10637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:01,905 10637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,906 10638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,906 10638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,906 10638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:01,907 10639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,907 10639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,907 10639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,907 10639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:01,908 10640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,908 10640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,908 10640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,909 10641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:01,909 10641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,909 10641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,910 10642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,910 10642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:01,911 10643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,911 10643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,912 10644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,912 10644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:01,912 10644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,913 10645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,913 10645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,913 10645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:01,914 10646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,914 10646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,914 10646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,915 10647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:01,915 10647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,915 10647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,916 10648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,916 10648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:01,917 10649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,917 10649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,917 10649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,918 10650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_271,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:01,918 10650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,918 10650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,919 10651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,919 10651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_272,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:01,920 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,920 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,920 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,920 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_273,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:01,921 10653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:01,921 10653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,922 10654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,922 10654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:01,923 10655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:01,923 10655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,924 10656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,925 10657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:01,926 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:01,926 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,926 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,927 10659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:01,928 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:01,928 10660 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:01,928 10660 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:01,928 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,928 10660 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:01,929 10661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,929 10661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_268,formula_267,formula_265,formula_263,formula_266,formula_269,formula_264,formula_272,formula_261,formula_270,formula_273,formula_262,formula_271],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:01,932 10664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,932 10664 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:01,933 10665 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:01,933 10665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,934 10666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,938 10670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:23:01,939 10671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:23:01,939 10671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,940 10672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,943 10675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:23:01,945 10677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:23:01,945 10677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:23:01,945 10677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:23:01,945 10677 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:23:01,945 10677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:01,946 10678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:01,949 10681 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:01,953 10685 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:01,955 10687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:01,955 10687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:02,480 11212 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:02,481 11213 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:02,481 11213 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:02,481 11213 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56201
2014-09-02 14:23:02,481 11213 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56201
2014-09-02 14:23:02,481 11213 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:02,481 11213 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11265
2014-09-02 14:23:02,481 11213 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11265
2014-09-02 14:23:02,482 11214 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56201 using key 38908c39a88419d4
2014-09-02 14:23:02,482 11214 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:02,483 11215 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:02,501 11233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:02,509 11241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,509 11241 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:02,509 11241 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:02,509 11241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,509 11241 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:02,510 11242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,510 11242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:02,511 11243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,511 11243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,512 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,512 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:02,512 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,513 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,513 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,513 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:02,514 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,514 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,514 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,515 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:02,515 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,516 11248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,516 11248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,517 11249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:02,517 11249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,518 11250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,518 11250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,518 11250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:02,519 11251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,519 11251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,520 11252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,520 11252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:02,521 11253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,521 11253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,522 11254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,522 11254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:02,523 11255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,523 11255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,524 11256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,524 11256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:02,525 11257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,525 11257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,525 11257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,526 11258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_296,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:02,526 11258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,526 11258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,527 11259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,527 11259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_297,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:02,528 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,528 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,528 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,529 11261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_298,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:02,530 11262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,530 11262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,530 11262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,531 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_299,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:02,531 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:02,532 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,532 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,532 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:02,533 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:02,534 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,534 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,535 11267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:02,536 11268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:02,536 11268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,537 11269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,537 11269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:02,538 11270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:02,538 11270 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:02,538 11270 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:02,538 11270 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:02,538 11270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,539 11271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,539 11271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_294,formula_293,formula_291,formula_289,formula_292,formula_295,formula_290,formula_298,formula_287,formula_296,formula_299,formula_288,formula_297],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:02,542 11274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,542 11274 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:02,543 11275 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,543 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,543 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,547 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:23:02,549 11281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:23:02,549 11281 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:23:02,550 11282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:23:02,550 11282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,550 11282 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:02,551 11283 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:23:02,551 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:23:02,551 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:23:02,551 11283 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:02,551 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,552 11284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,554 11286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:23:02,556 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:23:02,556 11288 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:02,556 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:02,557 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:02,561 11293 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:02,567 11299 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:02,568 11300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:02,568 11300 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:03,106 11838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:03,106 11838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:03,106 11838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:03,107 11839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56203
2014-09-02 14:23:03,107 11839 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56203
2014-09-02 14:23:03,107 11839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:03,107 11839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11269
2014-09-02 14:23:03,107 11839 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11269
2014-09-02 14:23:03,107 11839 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56203 using key 38908c39a88419d4
2014-09-02 14:23:03,108 11840 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:03,109 11841 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:03,127 11859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:03,135 11867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,135 11867 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:03,136 11868 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:03,136 11868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,136 11868 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:03,136 11868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,136 11868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:03,137 11869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,137 11869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,138 11870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,138 11870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:03,138 11870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,139 11871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,139 11871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,139 11871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:03,140 11872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,140 11872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,140 11872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,140 11872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:03,141 11873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,141 11873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,142 11874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,142 11874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:03,142 11874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,143 11875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,143 11875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,143 11875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_318,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:03,144 11876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,144 11876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,144 11876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,145 11877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_319,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:03,145 11877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,145 11877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,146 11878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,146 11878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_320,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:03,147 11879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,147 11879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,147 11879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,148 11880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_321,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:03,148 11880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,148 11880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,149 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,149 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_322,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:03,149 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,150 11882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,150 11882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,150 11882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_323,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:03,151 11883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,151 11883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,151 11883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,151 11883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_324,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:03,152 11884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,152 11884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,153 11885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,153 11885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_325,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:03,153 11885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,154 11886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,154 11886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,154 11886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:03,155 11887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:03,156 11888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,156 11888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,157 11889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:03,158 11890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:03,158 11890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,159 11891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,160 11892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:03,160 11892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:03,161 11893 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:03,161 11893 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:03,161 11893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,161 11893 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:03,161 11893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,161 11893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_320,formula_319,formula_317,formula_315,formula_318,formula_321,formula_316,formula_324,formula_313,formula_322,formula_325,formula_314,formula_323],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:03,164 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:03,164 11896 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,164 11896 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,164 11896 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,164 11896 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,164 11896 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,165 11897 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,166 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,166 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,170 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 14:23:03,171 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:23:03,171 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,171 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,175 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)'),ARes),true.

2014-09-02 14:23:03,176 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(rr,constant('PID1'),'PID1'),[]),'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(rr : waiting)')),[]))
2014-09-02 14:23:03,176 11908 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is TRUE
2014-09-02 14:23:03,177 11909 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-02 14:23:03,177 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,177 11909 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-02 14:23:03,177 11909 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:03,177 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,180 11912 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:03,184 11916 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:03,186 11918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:03,186 11918 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:03,714 12446 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:03,714 12446 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:03,714 12446 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:03,715 12447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56205
2014-09-02 14:23:03,715 12447 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56205
2014-09-02 14:23:03,715 12447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:03,715 12447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11273
2014-09-02 14:23:03,715 12447 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11273
2014-09-02 14:23:03,715 12447 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56205 using key 38908c39a88419d4
2014-09-02 14:23:03,716 12448 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:03,717 12449 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:03,734 12466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:03,744 12476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,744 12476 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:03,744 12476 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:03,744 12476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,745 12477 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:03,745 12477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,746 12478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:03,746 12478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,747 12479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,747 12479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,748 12480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:03,748 12480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,748 12480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,749 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,749 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:03,749 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,749 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,750 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,750 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:03,751 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,751 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,752 12484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,752 12484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_343,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:03,753 12485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,753 12485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,754 12486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,754 12486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_344,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:03,755 12487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,755 12487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,756 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,756 12488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_345,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:03,757 12489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,757 12489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,757 12489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,758 12490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_346,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:03,758 12490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,759 12491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,759 12491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,759 12491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_347,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:03,760 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,760 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,760 12492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,761 12493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_348,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:03,761 12493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,762 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,762 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,762 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_349,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:03,763 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,763 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,764 12496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,764 12496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_350,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:03,765 12497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,765 12497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,766 12498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,766 12498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_351,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:03,767 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:03,767 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,767 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,768 12500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:03,768 12500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:03,769 12501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,769 12501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,770 12502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:03,771 12503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:03,771 12503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,771 12503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,772 12504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:03,773 12505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:03,773 12505 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:03,773 12505 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:03,773 12505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,773 12505 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:03,773 12505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,774 12506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:03,777 12509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,777 12509 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,778 12510 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,778 12510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,778 12510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,781 12513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 14:23:03,783 12515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,4),4)),[]))
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:23:03,784 12516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:23:03,784 12516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,784 12516 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:03,785 12517 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 14:23:03,785 12517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(4,TraceStrings),true.

2014-09-02 14:23:03,785 12517 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 14:23:03,785 12517 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 14:23:03,785 12517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('5',[])),[]))
2014-09-02 14:23:03,785 12517 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:03,785 12517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,786 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,786 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(4,APLOps),eval_registered_formulas(4,[formula_346,formula_345,formula_343,formula_341,formula_344,formula_347,formula_342,formula_350,formula_339,formula_348,formula_351,formula_340,formula_349],BResults),state_property(initialised,4,CPropResult),state_property(invariantKO,4,DPropResult),state_property(max_operations_reached,4,EPropResult),state_property(timeout_occurred,4,FPropResult),op_timeout_occurred(4,GTO),get_state_errors(4,HErrors),true.

2014-09-02 14:23:03,789 12521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(6,4,4),'.'(op(7,4,5),'.'(op(8,4,6),'.'(op(9,4,1),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,789 12521 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:03,790 12522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,790 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,790 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,794 12526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(4,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 14:23:03,796 12528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 14:23:03,796 12528 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:03,797 12529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:03,797 12529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:03,801 12533 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:03,806 12538 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:03,807 12539 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:03,808 12540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:04,336 13068 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:04,336 13068 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:04,337 13069 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:04,337 13069 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56207
2014-09-02 14:23:04,337 13069 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56207
2014-09-02 14:23:04,337 13069 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:04,337 13069 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11277
2014-09-02 14:23:04,337 13069 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11277
2014-09-02 14:23:04,337 13069 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56207 using key 38908c39a88419d4
2014-09-02 14:23:04,338 13070 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:04,339 13071 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:04,355 13087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:04,364 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,364 13096 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:04,364 13096 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:04,364 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,364 13096 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:04,364 13096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,365 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_365,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:04,365 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,365 13097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,366 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,366 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_366,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:04,366 13098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,367 13099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,367 13099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,367 13099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_367,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:04,368 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,368 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,368 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,368 13100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_368,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:04,369 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,369 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,369 13101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,370 13102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_369,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:04,370 13102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,370 13102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,371 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,371 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_370,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:04,371 13103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,372 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,372 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,372 13104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_371,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:04,373 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,373 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,373 13105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,374 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_372,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:04,374 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,374 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,375 13107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,375 13107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_373,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:04,376 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,376 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,376 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,376 13108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_374,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:04,377 13109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,377 13109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,378 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,378 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_375,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:04,378 13110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,379 13111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,379 13111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,379 13111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_376,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:04,380 13112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,380 13112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,380 13112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,381 13113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_377,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:04,381 13113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:04,382 13114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,382 13114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,383 13115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:04,383 13115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:04,384 13116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,384 13116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,385 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:04,386 13118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:04,386 13118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,386 13118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,387 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:04,388 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:04,388 13120 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:04,388 13120 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:04,388 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,388 13120 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:04,389 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,389 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_372,formula_371,formula_369,formula_367,formula_370,formula_373,formula_368,formula_376,formula_365,formula_374,formula_377,formula_366,formula_375],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:04,392 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,392 13124 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:04,393 13125 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:04,393 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,394 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,397 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 14:23:04,399 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 14:23:04,399 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,399 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,402 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting'),ARes),true.

2014-09-02 14:23:04,404 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & rr : waiting')),[]))
2014-09-02 14:23:04,404 13136 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 14:23:04,404 13136 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 14:23:04,404 13136 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 14:23:04,404 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:04,405 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:04,408 13140 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 14:23:04,414 13146 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 14:23:04,415 13147 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 14:23:04,415 13147 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 14:23:04,998 13730 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 14:23:04,998 13730 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 14:23:04,998 13730 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 14:23:04,999 13731 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56209
2014-09-02 14:23:04,999 13731 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56209
2014-09-02 14:23:04,999 13731 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 14:23:04,999 13731 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11281
2014-09-02 14:23:04,999 13731 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11281
2014-09-02 14:23:04,999 13731 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56209 using key 38908c39a88419d4
2014-09-02 14:23:05,000 13732 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 14:23:05,001 13733 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 14:23:05,020 13752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3)))]),invariant(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,member(25,identifier(26,active),pow_subset(27,identifier(28,'PID'))),member(29,identifier(30,ready),pow_subset(31,identifier(32,'PID')))),member(33,identifier(34,waiting),pow_subset(35,identifier(36,'PID')))),subset(37,identifier(38,active),identifier(39,'PID'))),subset(40,identifier(41,ready),identifier(42,'PID'))),subset(43,identifier(44,waiting),identifier(45,'PID'))),equal(46,intersection(47,identifier(48,ready),identifier(49,waiting)),empty_set(50))),equal(51,intersection(52,identifier(53,active),union(54,identifier(55,ready),identifier(56,waiting))),empty_set(57))),less_equal(58,card(59,identifier(60,active)),integer(61,1))),implication(62,equal(63,identifier(64,active),empty_set(65)),equal(66,identifier(67,ready),empty_set(68))))),initialisation(69,parallel(70,[assign(71,[identifier(72,active)],[empty_set(73)]),assign(74,[identifier(75,ready)],[empty_set(76)]),assign(77,[identifier(78,waiting)],[empty_set(79)])])),operations(80,[operation(81,identifier(81,nr_ready),[identifier(82,rr)],[],assign(83,[identifier(84,rr)],[card(85,identifier(86,ready))])),operation(87,identifier(87,new),[],[identifier(88,pp)],select(89,conjunct(90,conjunct(91,member(92,identifier(93,pp),identifier(94,'PID')),not_member(95,identifier(96,pp),identifier(97,active))),not_member(98,identifier(99,pp),union(100,identifier(101,ready),identifier(102,waiting)))),assign(103,[identifier(104,waiting)],[union(105,identifier(106,waiting),set_extension(107,[identifier(108,pp)]))]),[])),operation(109,identifier(109,del),[],[identifier(110,pp)],select(111,member(112,identifier(113,pp),identifier(114,waiting)),assign(115,[identifier(116,waiting)],[minus_or_set_subtract(117,identifier(118,waiting),set_extension(119,[identifier(120,pp)]))]),[])),operation(121,identifier(121,ready),[],[identifier(122,rr)],select(123,member(124,identifier(125,rr),identifier(126,waiting)),parallel(127,[assign(128,[identifier(129,waiting)],[minus_or_set_subtract(130,identifier(131,waiting),set_extension(132,[identifier(133,rr)]))]),if(134,equal(135,identifier(136,active),empty_set(137)),assign(138,[identifier(139,active)],[set_extension(140,[identifier(141,rr)])]),[],assign(142,[identifier(143,ready)],[union(144,identifier(145,ready),set_extension(146,[identifier(147,rr)]))]))]),[])),operation(148,identifier(148,swap),[],[],select(149,not_equal(150,identifier(151,active),empty_set(152)),parallel(153,[assign(154,[identifier(155,waiting)],[union(156,identifier(157,waiting),identifier(158,active))]),if(159,equal(160,identifier(161,ready),empty_set(162)),assign(163,[identifier(164,active)],[empty_set(165)]),[],any(166,[identifier(167,pp)],member(168,identifier(169,pp),identifier(170,ready)),parallel(171,[assign(172,[identifier(173,active)],[set_extension(174,[identifier(175,pp)])]),assign(176,[identifier(177,ready)],[minus_or_set_subtract(178,identifier(179,ready),set_extension(180,[identifier(181,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 14:23:05,028 13760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,028 13760 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 14:23:05,028 13760 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 14:23:05,028 13760 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 14:23:05,028 13760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,029 13761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,029 13761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_391,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 14:23:05,029 13761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,030 13762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,030 13762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,030 13762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_392,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 14:23:05,031 13763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,031 13763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,031 13763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,032 13764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_393,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 14:23:05,032 13764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,032 13764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,032 13764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,033 13765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_394,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 14:23:05,033 13765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,034 13766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,034 13766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,034 13766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_395,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 14:23:05,035 13767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,035 13767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,035 13767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,036 13768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_396,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 14:23:05,036 13768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,036 13768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,037 13769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,037 13769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_397,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 14:23:05,038 13770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,038 13770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,039 13771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,039 13771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_398,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 14:23:05,040 13772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,040 13772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,041 13773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,041 13773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_399,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 14:23:05,041 13773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,042 13774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,042 13774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,042 13774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_400,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 14:23:05,043 13775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,043 13775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,044 13776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,044 13776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_401,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 14:23:05,045 13777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,045 13777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,046 13778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,046 13778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_402,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 14:23:05,046 13778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,047 13779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,047 13779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,047 13779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_403,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 14:23:05,048 13780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 14:23:05,048 13780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,048 13780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,049 13781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 14:23:05,049 13781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:05,050 13782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,050 13782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,051 13783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:05,052 13784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 14:23:05,052 13784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,053 13785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,054 13786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 14:23:05,055 13787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 14:23:05,055 13787 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 14:23:05,055 13787 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 14:23:05,055 13787 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 14:23:05,055 13787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,056 13788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,057 13789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_398,formula_397,formula_395,formula_393,formula_396,formula_399,formula_394,formula_402,formula_391,formula_400,formula_403,formula_392,formula_401],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 14:23:05,059 13791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,060 13792 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 14:23:05,061 13793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,061 13793 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,062 13794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,067 13799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 14:23:05,070 13802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(5,root,0),0)),[]))
2014-09-02 14:23:05,070 13802 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 14:23:05,070 13802 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:05,070 13802 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 14:23:05,070 13802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,070 13802 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:05,071 13803 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 14:23:05,071 13803 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:05,071 13803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,071 13803 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 14:23:05,071 13803 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 14:23:05,071 13803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 14:23:05,071 13803 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 14:23:05,072 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 14:23:05,072 13804 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 14:23:05,072 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,072 13804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 14:23:05,075 13807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 14:23:05,077 13809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 14:23:05,078 13810 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 14:23:05,078 13810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 14:23:05,078 13810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:35,773 3743 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:35,789 3759 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:35,813 3783 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:35,813 3783 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:36,446 4416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:36,446 4416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:36,446 4416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:36,447 4417 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56457
2014-09-02 15:35:36,447 4417 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56457
2014-09-02 15:35:36,447 4417 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:36,447 4417 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11476
2014-09-02 15:35:36,447 4417 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11476
2014-09-02 15:35:36,448 4418 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56457 using key 239dcbaeb76302ef
2014-09-02 15:35:36,449 4419 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:36,450 4420 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:36,694 4664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:36,704 4674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,704 4674 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:36,705 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:36,705 4675 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:36,728 4698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,729 4699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,732 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:36,733 4703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,734 4704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,734 4704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,735 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:36,735 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,735 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,736 4706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,736 4706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:36,737 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,737 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,737 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,738 4708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:36,739 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,739 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,739 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,740 4710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:36,741 4711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,741 4711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,741 4711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,742 4712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:36,743 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,743 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,743 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,744 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:36,744 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,745 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,745 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,746 4716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:36,747 4717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,747 4717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,747 4717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,748 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:36,749 4719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,749 4719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,749 4719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,750 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:36,751 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,751 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,752 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,752 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:36,753 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,753 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,754 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,754 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:36,755 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,755 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,755 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,756 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:36,757 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:36,757 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,757 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,785 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:36,787 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:36,791 4761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,792 4762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,804 4774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:36,805 4775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:36,806 4776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,807 4777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,819 4789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:35:36,824 4794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:36,826 4796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:36,826 4796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:36,836 4806 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:36,842 4812 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:36,843 4813 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:36,844 4814 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:37,507 5477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:37,507 5477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:37,507 5477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:37,508 5478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56459
2014-09-02 15:35:37,508 5478 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56459
2014-09-02 15:35:37,508 5478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:37,508 5478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11480
2014-09-02 15:35:37,509 5479 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11480
2014-09-02 15:35:37,509 5479 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56459 using key 239dcbaeb76302ef
2014-09-02 15:35:37,510 5480 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:37,511 5481 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:37,551 5521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:37,560 5530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,560 5530 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:37,561 5531 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:37,561 5531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,561 5531 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:37,561 5531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,562 5532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:37,562 5532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,562 5532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,563 5533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,563 5533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:37,564 5534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,564 5534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,565 5535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,565 5535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_25,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:37,566 5536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,566 5536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,566 5536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,567 5537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:37,568 5538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,568 5538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,569 5539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,570 5540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:37,570 5540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,571 5541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,571 5541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,572 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:37,572 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,572 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,573 5543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,573 5543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:37,574 5544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,574 5544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,575 5545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,575 5545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:37,576 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,576 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,576 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,577 5547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:37,577 5547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,578 5548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,578 5548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,579 5549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:37,579 5549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,579 5549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,580 5550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,581 5551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:37,581 5551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,582 5552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,582 5552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,583 5553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:37,583 5553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,584 5554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,584 5554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,585 5555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:37,585 5555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:37,586 5556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,586 5556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,587 5557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_30,formula_29,formula_27,formula_25,formula_28,formula_31,formula_26,formula_34,formula_23,formula_32,formula_35,formula_24,formula_33],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:37,588 5558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:37,589 5559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,590 5560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,591 5561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:37,592 5562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:37,592 5562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,593 5563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,599 5569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:35:37,603 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:35:37,603 5573 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:37,603 5573 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:37,603 5573 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:37,604 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:35:37,604 5574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:35:37,605 5575 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:35:37,605 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,605 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:35:37,606 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:35:37,606 5576 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:37,607 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,607 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,615 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_30,formula_29,formula_27,formula_25,formula_28,formula_31,formula_26,formula_34,formula_23,formula_32,formula_35,formula_24,formula_33],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:35:37,620 5590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:37,620 5590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,620 5590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,620 5590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,620 5590 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,621 5591 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,622 5592 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:37,622 5592 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:37,622 5592 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,631 5601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,632 5602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,651 5621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:35:37,654 5624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:35:37,655 5625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:37,656 5626 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:37,656 5626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:37,667 5637 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:37,673 5643 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:37,674 5644 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:37,674 5644 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:38,331 6301 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:38,331 6301 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:38,332 6302 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:38,332 6302 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56461
2014-09-02 15:35:38,332 6302 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56461
2014-09-02 15:35:38,332 6302 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:38,332 6302 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11484
2014-09-02 15:35:38,332 6302 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11484
2014-09-02 15:35:38,332 6302 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56461 using key 239dcbaeb76302ef
2014-09-02 15:35:38,333 6303 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:38,334 6304 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:38,365 6335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:38,376 6346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,376 6346 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:38,377 6347 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:38,377 6347 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:38,377 6347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,377 6347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,378 6348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:38,378 6348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,379 6349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,379 6349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,379 6349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:38,380 6350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,380 6350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,380 6350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,381 6351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:38,381 6351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,381 6351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,382 6352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,382 6352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:38,383 6353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,383 6353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,383 6353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,384 6354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:38,384 6354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,385 6355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,385 6355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,385 6355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:38,386 6356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,386 6356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,386 6356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,387 6357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:38,388 6358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,388 6358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,388 6358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,389 6359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:38,389 6359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,390 6360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,390 6360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,391 6361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:38,391 6361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,391 6361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,392 6362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,392 6362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:38,393 6363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,393 6363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,394 6364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,394 6364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:38,395 6365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,395 6365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,396 6366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,397 6367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:38,397 6367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,398 6368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,398 6368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,399 6369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:38,399 6369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:38,400 6370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,400 6370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,401 6371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_55,formula_54,formula_52,formula_50,formula_53,formula_56,formula_51,formula_59,formula_48,formula_57,formula_60,formula_49,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:38,402 6372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:38,403 6373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,404 6374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,405 6375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:38,405 6375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:38,406 6376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,406 6376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,411 6381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:35:38,412 6382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:38,413 6383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:38,414 6384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:38,420 6390 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:38,424 6394 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:38,425 6395 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:38,426 6396 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:39,016 6986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:39,016 6986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:39,016 6986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:39,016 6986 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56463
2014-09-02 15:35:39,017 6987 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56463
2014-09-02 15:35:39,017 6987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:39,017 6987 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11488
2014-09-02 15:35:39,017 6987 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11488
2014-09-02 15:35:39,017 6987 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56463 using key 239dcbaeb76302ef
2014-09-02 15:35:39,018 6988 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:39,019 6989 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:39,050 7020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:39,058 7028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,058 7028 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:39,058 7028 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:39,059 7029 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:39,059 7029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,059 7029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,059 7029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:39,060 7030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,060 7030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,061 7031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,061 7031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:39,062 7032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,062 7032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,062 7032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,063 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:39,063 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,064 7034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,064 7034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,065 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:39,065 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,065 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,066 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,066 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:39,067 7037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,067 7037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,068 7038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,068 7038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:39,069 7039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,069 7039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,069 7039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,070 7040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:39,071 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,071 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,071 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,072 7042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:39,072 7042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,073 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,073 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,073 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:39,074 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,074 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,075 7045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,075 7045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:39,076 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,076 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,076 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,077 7047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:39,077 7047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,077 7047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,078 7048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,078 7048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:39,079 7049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,079 7049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,079 7049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,080 7050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:39,080 7050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,081 7051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,081 7051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,082 7052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_77,formula_76,formula_74,formula_72,formula_75,formula_78,formula_73,formula_81,formula_70,formula_79,formula_82,formula_71,formula_80],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:39,082 7052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:39,083 7053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,084 7054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,085 7055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:39,085 7055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:39,086 7056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,086 7056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,090 7060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:35:39,092 7062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:39,092 7062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,092 7062 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:39,093 7063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:39,093 7063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:39,093 7063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,093 7063 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:35:39,093 7063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:35:39,094 7064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:35:39,094 7064 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:39,094 7064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,094 7064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,095 7065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_77,formula_76,formula_74,formula_72,formula_75,formula_78,formula_73,formula_81,formula_70,formula_79,formula_82,formula_71,formula_80],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:35:39,097 7067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:39,097 7067 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,098 7068 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,099 7069 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:39,099 7069 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:39,099 7069 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,100 7070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,101 7071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,106 7076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:35:39,108 7078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:35:39,108 7078 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:39,108 7078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,109 7079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,114 7084 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:39,118 7088 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:39,120 7090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:39,120 7090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:39,755 7725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:39,755 7725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:39,755 7725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:39,755 7725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56465
2014-09-02 15:35:39,755 7725 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56465
2014-09-02 15:35:39,756 7726 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:39,756 7726 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11492
2014-09-02 15:35:39,756 7726 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11492
2014-09-02 15:35:39,756 7726 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56465 using key 239dcbaeb76302ef
2014-09-02 15:35:39,757 7727 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:39,758 7728 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:39,781 7751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:39,788 7758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,788 7758 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:39,788 7758 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:39,788 7758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,788 7758 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:39,789 7759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,789 7759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:39,790 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,790 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,790 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,791 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:39,791 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,792 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,792 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,793 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:39,793 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,793 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,794 7764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,794 7764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:39,795 7765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,795 7765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,796 7766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,796 7766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:39,797 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,798 7768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,798 7768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,799 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:39,799 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,799 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,800 7770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,801 7771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:39,801 7771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,802 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,802 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,803 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:39,803 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,804 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,804 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,805 7775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:39,805 7775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,806 7776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,806 7776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,807 7777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:39,808 7778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,808 7778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,809 7779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,810 7780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:39,810 7780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,810 7780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,811 7781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,811 7781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:39,812 7782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,812 7782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,813 7783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,813 7783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:39,814 7784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:39,814 7784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,815 7785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,815 7785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_102,formula_101,formula_99,formula_97,formula_100,formula_103,formula_98,formula_106,formula_95,formula_104,formula_107,formula_96,formula_105],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:39,816 7786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:39,818 7788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,818 7788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,819 7789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:39,820 7790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:39,820 7790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,821 7791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,825 7795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:35:39,826 7796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:39,826 7796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:39,827 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:39,833 7803 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:39,837 7807 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:39,838 7808 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:39,839 7809 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:40,453 8423 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:40,454 8424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:40,454 8424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:40,454 8424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56467
2014-09-02 15:35:40,454 8424 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56467
2014-09-02 15:35:40,455 8425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:40,455 8425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11496
2014-09-02 15:35:40,455 8425 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11496
2014-09-02 15:35:40,455 8425 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56467 using key 239dcbaeb76302ef
2014-09-02 15:35:40,456 8426 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:40,457 8427 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:40,485 8455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:40,492 8462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,492 8462 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:40,492 8462 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:40,493 8463 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:40,493 8463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,493 8463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,494 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:40,494 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,495 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,495 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,495 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:40,496 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,496 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,497 8467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,498 8468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:40,498 8468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,499 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,499 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,499 8469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:40,500 8470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,500 8470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,501 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,501 8471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:40,502 8472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,502 8472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,502 8472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,503 8473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:40,504 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,504 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,504 8474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,505 8475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:40,506 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,506 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,506 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,507 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:40,507 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,507 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,508 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,508 8478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:40,509 8479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,510 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,510 8480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,511 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:40,511 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,511 8481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,512 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,512 8482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:40,513 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,513 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,513 8483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,514 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:40,514 8484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,515 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,515 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,515 8485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:40,516 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:40,516 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,516 8486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,517 8487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_124,formula_123,formula_121,formula_119,formula_122,formula_125,formula_120,formula_128,formula_117,formula_126,formula_129,formula_118,formula_127],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:40,518 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:40,519 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,519 8489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,520 8490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:40,521 8491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:40,521 8491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,521 8491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,525 8495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:35:40,527 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:35:40,527 8497 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:40,528 8498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:40,528 8498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:35:40,528 8498 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:35:40,529 8499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:35:40,529 8499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:35:40,529 8499 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:40,529 8499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,530 8500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,530 8500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_124,formula_123,formula_121,formula_119,formula_122,formula_125,formula_120,formula_128,formula_117,formula_126,formula_129,formula_118,formula_127],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:35:40,533 8503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:40,533 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,533 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,533 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,533 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:40,533 8503 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:40,534 8504 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,536 8506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,536 8506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,541 8511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:35:40,543 8513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:35:40,543 8513 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:40,543 8513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:40,544 8514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:40,548 8518 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:40,552 8522 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:40,553 8523 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:40,553 8523 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:41,178 9148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:41,179 9149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:41,179 9149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:41,179 9149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56469
2014-09-02 15:35:41,179 9149 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56469
2014-09-02 15:35:41,180 9150 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:41,180 9150 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11500
2014-09-02 15:35:41,180 9150 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11500
2014-09-02 15:35:41,180 9150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56469 using key 239dcbaeb76302ef
2014-09-02 15:35:41,181 9151 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:41,181 9151 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:41,203 9173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:41,211 9181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,211 9181 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:41,211 9181 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:41,211 9181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,211 9181 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:41,212 9182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,212 9182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:41,213 9183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,213 9183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,213 9183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,214 9184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:41,214 9184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,214 9184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,215 9185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,215 9185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:41,216 9186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,216 9186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,217 9187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,217 9187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:41,218 9188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,218 9188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,218 9188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,219 9189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:41,219 9189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,220 9190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,220 9190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,220 9190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:41,221 9191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,221 9191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,221 9191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,222 9192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:41,222 9192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,223 9193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,223 9193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,224 9194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:41,225 9195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,225 9195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,225 9195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,226 9196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:41,227 9197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,227 9197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,228 9198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,228 9198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:41,229 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,229 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,229 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,230 9200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:41,230 9200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,230 9200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,231 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,231 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:41,232 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,232 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,232 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,233 9203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:41,234 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,234 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,234 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,235 9205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_149,formula_148,formula_146,formula_144,formula_147,formula_150,formula_145,formula_153,formula_142,formula_151,formula_154,formula_143,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:41,236 9206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:41,237 9207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,237 9207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,238 9208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:41,239 9209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:41,239 9209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,239 9209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,243 9213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:35:41,244 9214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:41,244 9214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,245 9215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,250 9220 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:41,256 9226 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:41,257 9227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:41,257 9227 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:41,876 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56471
2014-09-02 15:35:41,877 9847 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56471
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11504
2014-09-02 15:35:41,877 9847 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11504
2014-09-02 15:35:41,877 9847 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56471 using key 239dcbaeb76302ef
2014-09-02 15:35:41,878 9848 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:41,879 9849 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:41,901 9871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:41,909 9879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,909 9879 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:41,909 9879 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:41,909 9879 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:41,909 9879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,910 9880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,910 9880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:41,911 9881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,911 9881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,911 9881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,912 9882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:41,912 9882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,913 9883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,913 9883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,913 9883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:41,914 9884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,914 9884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,914 9884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,915 9885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:41,915 9885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,916 9886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,916 9886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,916 9886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:41,917 9887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,917 9887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,917 9887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,918 9888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:41,919 9889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,919 9889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,919 9889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,920 9890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_170,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:41,920 9890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,921 9891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,921 9891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,921 9891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_171,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:41,922 9892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,922 9892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,923 9893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,923 9893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_172,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:41,924 9894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,924 9894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,924 9894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,925 9895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_173,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:41,926 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,926 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,926 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,926 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_174,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:41,927 9897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,927 9897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,927 9897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,928 9898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_175,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:41,928 9898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,929 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,929 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,929 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:41,930 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:41,930 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,930 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,931 9901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_171,formula_170,formula_168,formula_166,formula_169,formula_172,formula_167,formula_175,formula_164,formula_173,formula_176,formula_165,formula_174],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:41,932 9902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:41,933 9903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,933 9903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,934 9904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:41,935 9905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:41,935 9905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,936 9906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,939 9909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:35:41,941 9911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:35:41,941 9911 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:41,941 9911 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:41,942 9912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:41,942 9912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:41,942 9912 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:35:41,943 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:35:41,943 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:35:41,943 9913 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:41,943 9913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,944 9914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,944 9914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_171,formula_170,formula_168,formula_166,formula_169,formula_172,formula_167,formula_175,formula_164,formula_173,formula_176,formula_165,formula_174],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:35:41,947 9917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,948 9918 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:41,949 9919 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,951 9921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,951 9921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:41,956 9926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:35:41,958 9928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:35:41,958 9928 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:41,959 9929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:41,959 9929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,011 9981 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:42,019 9989 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:42,020 9990 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:42,020 9990 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56473
2014-09-02 15:35:42,651 10621 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56473
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:42,651 10621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11508
2014-09-02 15:35:42,652 10622 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11508
2014-09-02 15:35:42,652 10622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56473 using key 239dcbaeb76302ef
2014-09-02 15:35:42,652 10622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:42,653 10623 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:42,673 10643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:42,681 10651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,681 10651 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:42,681 10651 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:42,681 10651 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:42,681 10651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,681 10651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,682 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:42,682 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,683 10653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,683 10653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,683 10653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:42,684 10654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,684 10654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,684 10654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,685 10655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:42,685 10655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,685 10655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,686 10656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,686 10656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:42,687 10657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,687 10657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,687 10657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,688 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:42,688 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,688 10658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,689 10659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,689 10659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:42,690 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,690 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,690 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,690 10660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:42,691 10661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,691 10661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,692 10662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,692 10662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_196,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:42,693 10663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,693 10663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,694 10664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,694 10664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_197,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:42,695 10665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,695 10665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,696 10666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,696 10666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_198,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:42,697 10667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,697 10667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,697 10667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,698 10668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_199,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:42,698 10668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,698 10668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,699 10669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,699 10669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_200,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:42,700 10670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,700 10670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,700 10670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,701 10671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:42,701 10671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:42,702 10672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,702 10672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,703 10673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_196,formula_195,formula_193,formula_191,formula_194,formula_197,formula_192,formula_200,formula_189,formula_198,formula_201,formula_190,formula_199],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:42,704 10674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:42,704 10674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,705 10675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,706 10676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:42,707 10677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:42,707 10677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,708 10678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,711 10681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:35:42,712 10682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:42,712 10682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:42,713 10683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:42,717 10687 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:42,722 10692 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:42,723 10693 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:42,723 10693 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:43,315 11285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:43,315 11285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:43,315 11285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:43,315 11285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56475
2014-09-02 15:35:43,315 11285 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56475
2014-09-02 15:35:43,316 11286 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:43,316 11286 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11512
2014-09-02 15:35:43,316 11286 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11512
2014-09-02 15:35:43,316 11286 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56475 using key 239dcbaeb76302ef
2014-09-02 15:35:43,316 11286 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:43,317 11287 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:43,338 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:43,348 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,348 11318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:43,348 11318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:43,348 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,348 11318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:43,349 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,349 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:43,350 11320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,350 11320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,350 11320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,351 11321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:43,351 11321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,351 11321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,352 11322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,352 11322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:43,353 11323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,353 11323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,353 11323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,353 11323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:43,354 11324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,354 11324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,354 11324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,355 11325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:43,355 11325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,356 11326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,356 11326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,356 11326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:43,357 11327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,357 11327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,357 11327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,358 11328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:43,358 11328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,358 11328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,359 11329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,359 11329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:43,360 11330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,360 11330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,360 11330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,360 11330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:43,361 11331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,361 11331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,362 11332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,362 11332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:43,363 11333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,363 11333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,363 11333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,363 11333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:43,364 11334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,364 11334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,365 11335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,365 11335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_222,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:43,366 11336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,366 11336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,367 11337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,367 11337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_223,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:43,367 11337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:43,368 11338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,368 11338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,368 11338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_218,formula_217,formula_215,formula_213,formula_216,formula_219,formula_214,formula_222,formula_211,formula_220,formula_223,formula_212,formula_221],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:43,369 11339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:43,370 11340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,370 11340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,371 11341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:43,372 11342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:43,372 11342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,372 11342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,375 11345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:35:43,378 11348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:35:43,378 11348 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:43,378 11348 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:43,378 11348 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:43,379 11349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:43,379 11349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:35:43,379 11349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:35:43,379 11349 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:35:43,380 11350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:35:43,380 11350 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:43,380 11350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,380 11350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,381 11351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_218,formula_217,formula_215,formula_213,formula_216,formula_219,formula_214,formula_222,formula_211,formula_220,formula_223,formula_212,formula_221],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:35:43,383 11353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:43,383 11353 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:43,384 11354 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,385 11355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,386 11356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,390 11360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:35:43,391 11361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:35:43,392 11362 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:43,392 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:43,392 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:43,395 11365 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:43,399 11369 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:43,400 11370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:43,401 11371 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:44,001 11971 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:44,002 11972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:44,002 11972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:44,002 11972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56477
2014-09-02 15:35:44,002 11972 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56477
2014-09-02 15:35:44,002 11972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:44,002 11972 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11516
2014-09-02 15:35:44,002 11972 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11516
2014-09-02 15:35:44,003 11973 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56477 using key 239dcbaeb76302ef
2014-09-02 15:35:44,003 11973 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:44,004 11974 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:44,023 11993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:44,030 12000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,030 12000 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:44,031 12001 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:44,031 12001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,031 12001 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:44,031 12001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,032 12002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:44,032 12002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,033 12003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,033 12003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,033 12003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:44,034 12004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,034 12004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,034 12004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,035 12005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:44,035 12005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,036 12006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,036 12006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,036 12006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:44,037 12007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,037 12007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,037 12007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,038 12008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:44,038 12008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,038 12008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,039 12009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,039 12009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:44,040 12010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,040 12010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,041 12011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,041 12011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:44,042 12012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,042 12012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,043 12013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,043 12013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:44,044 12014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,044 12014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,045 12015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,045 12015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:44,046 12016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,046 12016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,046 12016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,047 12017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:44,047 12017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,048 12018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,048 12018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,048 12018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:44,049 12019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,049 12019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,049 12019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,050 12020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:44,050 12020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,051 12021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,051 12021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,051 12021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_248,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:44,052 12022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,052 12022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,052 12022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,053 12023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_243,formula_242,formula_240,formula_238,formula_241,formula_244,formula_239,formula_247,formula_236,formula_245,formula_248,formula_237,formula_246],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:44,054 12024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:44,055 12025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,055 12025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,057 12027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:44,057 12027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:44,058 12028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,058 12028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,061 12031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:35:44,062 12032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:44,062 12032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,062 12032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,067 12037 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:44,071 12041 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:44,072 12042 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:44,073 12043 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:44,703 12673 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:44,703 12673 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:44,703 12673 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:44,704 12674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56479
2014-09-02 15:35:44,704 12674 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56479
2014-09-02 15:35:44,704 12674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:44,704 12674 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11520
2014-09-02 15:35:44,704 12674 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11520
2014-09-02 15:35:44,704 12674 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56479 using key 239dcbaeb76302ef
2014-09-02 15:35:44,705 12675 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:44,706 12676 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:44,725 12695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:44,733 12703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,733 12703 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:44,734 12704 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:44,734 12704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,734 12704 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:44,734 12704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,735 12705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:44,735 12705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,735 12705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,736 12706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,736 12706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:44,736 12706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,737 12707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,737 12707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,737 12707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:44,738 12708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,738 12708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,738 12708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,739 12709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:44,739 12709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,739 12709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,740 12710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,740 12710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:44,740 12710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,741 12711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,741 12711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,741 12711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:44,742 12712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,742 12712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,742 12712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,743 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:44,743 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,743 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,744 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,744 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:44,745 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,745 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,745 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,745 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:44,746 12716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,746 12716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,747 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,747 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:44,748 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,748 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,749 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,749 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:44,750 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,750 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,751 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,751 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:44,752 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,752 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,753 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,753 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:44,754 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:44,754 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,754 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,755 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_265,formula_264,formula_262,formula_260,formula_263,formula_266,formula_261,formula_269,formula_258,formula_267,formula_270,formula_259,formula_268],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:44,755 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:44,756 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,756 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,757 12727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:44,758 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:44,758 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,759 12729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,761 12731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:35:44,763 12733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:44,764 12734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:44,764 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:35:44,765 12735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,765 12735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:35:44,765 12735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:35:44,765 12735 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:44,766 12736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,766 12736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,766 12736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_265,formula_264,formula_262,formula_260,formula_263,formula_266,formula_261,formula_269,formula_258,formula_267,formula_270,formula_259,formula_268],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:35:44,770 12740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,770 12740 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,771 12741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:44,771 12741 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:44,772 12742 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,772 12742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,776 12746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:35:44,778 12748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:35:44,778 12748 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:44,778 12748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:44,779 12749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:44,783 12753 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:44,789 12759 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:44,790 12760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:44,790 12760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:45,399 13369 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:45,400 13370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:45,400 13370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:45,400 13370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56481
2014-09-02 15:35:45,400 13370 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56481
2014-09-02 15:35:45,400 13370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:45,400 13370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11524
2014-09-02 15:35:45,400 13370 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11524
2014-09-02 15:35:45,401 13371 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56481 using key 239dcbaeb76302ef
2014-09-02 15:35:45,401 13371 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:45,402 13372 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:45,420 13390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:45,429 13399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,429 13399 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:45,430 13400 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:45,430 13400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,430 13400 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:45,430 13400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,431 13401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:45,431 13401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,431 13401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,432 13402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,432 13402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:45,433 13403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,433 13403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,433 13403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,433 13403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:45,434 13404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,434 13404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,435 13405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,435 13405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:45,436 13406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,436 13406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,437 13407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,437 13407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:45,438 13408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,438 13408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,439 13409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,439 13409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:45,440 13410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,440 13410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,441 13411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,441 13411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:45,442 13412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,442 13412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,443 13413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,443 13413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:45,444 13414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,444 13414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,445 13415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,445 13415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:45,446 13416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,446 13416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,447 13417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,447 13417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:45,448 13418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,448 13418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,448 13418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,448 13418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:45,449 13419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,449 13419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,450 13420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,450 13420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:45,450 13420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,451 13421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,451 13421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,451 13421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:45,452 13422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:45,452 13422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,452 13422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,453 13423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_290,formula_289,formula_287,formula_285,formula_288,formula_291,formula_286,formula_294,formula_283,formula_292,formula_295,formula_284,formula_293],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:45,454 13424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:45,454 13424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,455 13425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,456 13426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:45,457 13427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:45,457 13427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,457 13427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,460 13430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:35:45,461 13431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:45,461 13431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:45,462 13432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:45,466 13436 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:45,470 13440 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:45,471 13441 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:45,471 13441 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56483
2014-09-02 15:35:46,179 14149 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56483
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:46,179 14149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11528
2014-09-02 15:35:46,180 14150 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11528
2014-09-02 15:35:46,180 14150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56483 using key 239dcbaeb76302ef
2014-09-02 15:35:46,180 14150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:46,181 14151 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:46,200 14170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:46,210 14180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,210 14180 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:46,211 14181 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:46,211 14181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,211 14181 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:46,211 14181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,211 14181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:46,212 14182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,212 14182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,213 14183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,213 14183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:46,213 14183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,214 14184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,214 14184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,214 14184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:46,215 14185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,215 14185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,216 14186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,216 14186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:46,217 14187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,217 14187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,218 14188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,218 14188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:46,219 14189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,219 14189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,219 14189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,219 14189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:46,220 14190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,220 14190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,220 14190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,221 14191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:46,221 14191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,222 14192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,222 14192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,222 14192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:46,223 14193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,223 14193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,223 14193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,224 14194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:46,225 14195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,225 14195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,225 14195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,226 14196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:46,226 14196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,226 14196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,227 14197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,227 14197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:46,228 14198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,228 14198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,228 14198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,228 14198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:46,229 14199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,229 14199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,229 14199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:46,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:46,231 14201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,231 14201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,232 14202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_312,formula_311,formula_309,formula_307,formula_310,formula_313,formula_308,formula_316,formula_305,formula_314,formula_317,formula_306,formula_315],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:46,232 14202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:46,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,234 14204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:46,235 14205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:46,235 14205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,236 14206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,238 14208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:35:46,241 14211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:35:46,241 14211 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:46,241 14211 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:46,241 14211 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:46,241 14211 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:46,241 14211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,241 14211 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:46,242 14212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:35:46,242 14212 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:35:46,242 14212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:35:46,243 14213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:35:46,243 14213 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:46,243 14213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,243 14213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,244 14214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_312,formula_311,formula_309,formula_307,formula_310,formula_313,formula_308,formula_316,formula_305,formula_314,formula_317,formula_306,formula_315],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:35:46,246 14216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:35:46,247 14217 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,248 14218 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,248 14218 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:46,248 14218 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:46,248 14218 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,248 14218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,249 14219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,253 14223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:35:46,255 14225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:35:46,255 14225 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:46,255 14225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:46,256 14226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:46,259 14229 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:46,265 14235 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:46,266 14236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:46,266 14236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:47,023 14993 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:47,023 14993 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:47,024 14994 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:47,024 14994 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56485
2014-09-02 15:35:47,024 14994 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56485
2014-09-02 15:35:47,024 14994 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:47,024 14994 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11532
2014-09-02 15:35:47,024 14994 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11532
2014-09-02 15:35:47,025 14995 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56485 using key 239dcbaeb76302ef
2014-09-02 15:35:47,025 14995 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:47,026 14996 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:47,043 15013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:47,051 15021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,051 15021 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:47,051 15021 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:47,051 15021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,051 15021 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:47,052 15022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,052 15022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:47,053 15023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,053 15023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,053 15023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,054 15024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:47,054 15024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,055 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,055 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,055 15025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:47,056 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,056 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,056 15026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,057 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:47,057 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,057 15027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,058 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,058 15028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:47,059 15029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,059 15029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,060 15030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,060 15030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:47,061 15031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,061 15031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,061 15031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,062 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:47,062 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,062 15032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,063 15033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,063 15033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:47,064 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,064 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,064 15034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,065 15035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:47,065 15035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,065 15035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,066 15036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,066 15036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:47,067 15037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,067 15037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,067 15037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,068 15038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:47,068 15038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,068 15038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,069 15039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,069 15039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:47,070 15040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,070 15040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,070 15040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,071 15041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:47,071 15041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,071 15041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,072 15042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,072 15042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_337,formula_336,formula_334,formula_332,formula_335,formula_338,formula_333,formula_341,formula_330,formula_339,formula_342,formula_331,formula_340],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:47,073 15043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:47,074 15044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,074 15044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,075 15045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:47,075 15045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:47,076 15046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,076 15046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,079 15049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:35:47,080 15050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:35:47,081 15051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,081 15051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,087 15057 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:35:47,092 15062 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:35:47,093 15063 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:35:47,094 15064 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:35:47,754 15724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:35:47,755 15725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:35:47,755 15725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:35:47,755 15725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56487
2014-09-02 15:35:47,755 15725 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56487
2014-09-02 15:35:47,755 15725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:35:47,755 15725 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11538
2014-09-02 15:35:47,756 15726 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11538
2014-09-02 15:35:47,756 15726 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56487 using key 239dcbaeb76302ef
2014-09-02 15:35:47,756 15726 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:35:47,758 15728 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:35:47,779 15749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:35:47,789 15759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,789 15759 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:35:47,789 15759 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:35:47,789 15759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,789 15759 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:35:47,789 15759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,790 15760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:35:47,790 15760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,790 15760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,791 15761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,791 15761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:35:47,792 15762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,792 15762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,792 15762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,792 15762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:35:47,793 15763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,793 15763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,794 15764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,794 15764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:35:47,795 15765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,795 15765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,795 15765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,796 15766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:35:47,796 15766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,796 15766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,797 15767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,797 15767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:35:47,798 15768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,798 15768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,798 15768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,799 15769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:35:47,799 15769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,800 15770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,800 15770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,800 15770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:35:47,801 15771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,801 15771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,802 15772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,802 15772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:35:47,803 15773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,803 15773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,803 15773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,804 15774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:35:47,805 15775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,805 15775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,805 15775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,806 15776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:35:47,806 15776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,807 15777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,807 15777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,807 15777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:35:47,808 15778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,808 15778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,808 15778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,809 15779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_364,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:35:47,809 15779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:35:47,809 15779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,810 15780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,810 15780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_359,formula_358,formula_356,formula_354,formula_357,formula_360,formula_355,formula_363,formula_352,formula_361,formula_364,formula_353,formula_362],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:35:47,811 15781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:47,812 15782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,812 15782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,813 15783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:35:47,814 15784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:35:47,814 15784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,814 15784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,817 15787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:35:47,819 15789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:35:47,819 15789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:47,819 15789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,819 15789 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:35:47,820 15790 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:35:47,820 15790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:35:47,820 15790 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:35:47,820 15790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:35:47,820 15790 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:35:47,820 15790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,821 15791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,821 15791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_359,formula_358,formula_356,formula_354,formula_357,formula_360,formula_355,formula_363,formula_352,formula_361,formula_364,formula_353,formula_362],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:35:47,824 15794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:35:47,824 15794 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,824 15794 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,824 15794 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,824 15794 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:47,824 15794 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:35:47,825 15795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,825 15795 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:35:47,826 15796 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,826 15796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:35:47,830 15800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:35:47,831 15801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:35:47,832 15802 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:35:47,832 15802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:35:47,832 15802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:35,644 2454 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:36:35,658 2468 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:36:35,681 2491 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:36:35,681 2491 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:36:36,300 3110 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:36:36,301 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:36:36,301 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:36:36,301 3111 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56492
2014-09-02 15:36:36,302 3112 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56492
2014-09-02 15:36:36,302 3112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:36:36,302 3112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11543
2014-09-02 15:36:36,302 3112 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11543
2014-09-02 15:36:36,304 3114 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56492 using key 2dd3e2e15e079958
2014-09-02 15:36:36,304 3114 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:36:36,306 3116 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:36:36,525 3335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:36:36,540 3350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,540 3350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:36:36,540 3350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:36:36,540 3350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:36:36,569 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,569 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,572 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:36:36,573 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,573 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,574 3384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,575 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:36:36,575 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,576 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,576 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,577 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:36:36,577 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,578 3388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,578 3388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,579 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:36:36,580 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,580 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,581 3391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,582 3392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:36:36,583 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,583 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,584 3394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,584 3394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:36:36,585 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,586 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,586 3396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,587 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:36:36,587 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,588 3398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,588 3398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,589 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:36:36,590 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,590 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,590 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,591 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:36:36,592 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,592 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,593 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,594 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:36:36,595 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,596 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,596 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,597 3407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:36:36,598 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,598 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,599 3409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,600 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:36:36,600 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,601 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,601 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,602 3412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:36:36,603 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:36:36,603 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,604 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,634 3444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:36:36,636 3446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:36:36,639 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,639 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,651 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:36:36,652 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:36:36,653 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,653 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:36:36,661 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:36:36,663 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:36:36,664 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:36:36,665 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:29,122 2800 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:44:29,137 2815 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:44:29,141 2819 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:44:29,142 2820 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:44:29,738 3416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:44:29,738 3416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:44:29,738 3416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:44:29,738 3416 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56518
2014-09-02 15:44:29,739 3417 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56518
2014-09-02 15:44:29,739 3417 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:44:29,739 3417 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11580
2014-09-02 15:44:29,740 3418 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11580
2014-09-02 15:44:29,741 3419 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56518 using key 2b143c5acb0a952b
2014-09-02 15:44:29,742 3420 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:44:29,743 3421 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:44:29,958 3636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:44:29,973 3651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:29,973 3651 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:44:29,973 3651 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:44:29,973 3651 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:44:29,996 3674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:29,996 3674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:29,999 3677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:44:30,000 3678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,001 3679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,001 3679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,002 3680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:44:30,003 3681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,004 3682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,004 3682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,005 3683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:44:30,006 3684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,006 3684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,007 3685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,008 3686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:44:30,008 3686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,009 3687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,009 3687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,010 3688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:44:30,011 3689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,011 3689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,012 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,013 3691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:44:30,014 3692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,014 3692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,015 3693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,016 3694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:44:30,017 3695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,017 3695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,018 3696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,019 3697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:44:30,020 3698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,021 3699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,021 3699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,022 3700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:44:30,022 3700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,023 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,023 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,024 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:44:30,025 3703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,026 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,026 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,027 3705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:44:30,028 3706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,029 3707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,029 3707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,030 3708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:44:30,031 3709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,032 3710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,032 3710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,034 3712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:44:30,035 3713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:44:30,035 3713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,036 3714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,068 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:44:30,069 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:44:30,073 3751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,074 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,086 3764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:44:30,087 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:44:30,088 3766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,088 3766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:44:30,098 3776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:44:30,100 3778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:44:30,102 3780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:44:30,103 3781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:21,944 2609 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:46:21,957 2622 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:46:21,960 2625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:46:21,961 2626 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:46:22,566 3231 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:46:22,567 3232 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:46:22,567 3232 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:46:22,567 3232 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56537
2014-09-02 15:46:22,568 3233 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56537
2014-09-02 15:46:22,568 3233 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:46:22,568 3233 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11598
2014-09-02 15:46:22,568 3233 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11598
2014-09-02 15:46:22,570 3235 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56537 using key b396cf5952b86ef4
2014-09-02 15:46:22,571 3236 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:46:22,572 3237 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:46:22,781 3446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:46:22,794 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,794 3459 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:46:22,794 3459 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:46:22,795 3460 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:46:22,821 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,821 3486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,824 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:46:22,825 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,825 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,826 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,826 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:46:22,827 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,827 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,828 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,828 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:46:22,829 3494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,829 3494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,830 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,830 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:46:22,831 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,831 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,832 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,832 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:46:22,833 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,833 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,834 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,834 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:46:22,835 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,835 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,836 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,836 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:46:22,837 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,837 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,838 3503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,838 3503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:46:22,839 3504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,839 3504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,840 3505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,840 3505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:46:22,841 3506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,841 3506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,842 3507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,842 3507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:46:22,843 3508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,843 3508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,844 3509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,845 3510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:46:22,845 3510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,846 3511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,846 3511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,847 3512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:46:22,847 3512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,848 3513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,848 3513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,849 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:46:22,849 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:46:22,849 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,850 3515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,874 3539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:46:22,876 3541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:46:22,880 3545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,881 3546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,896 3561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:46:22,897 3562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:46:22,898 3563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,899 3564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,903 3568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:46:22,905 3570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 15:46:22,905 3570 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 15:46:22,905 3570 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 15:46:22,905 3570 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 15:46:22,906 3571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,907 3572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,919 3584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:46:22,923 3588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:46:22,923 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,924 3589 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:46:22,925 3590 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:46:22,937 3602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,938 3603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,958 3623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:46:22,960 3625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:46:22,962 3627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,964 3629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:46:22,975 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting'),ARes),true.

2014-09-02 15:46:22,982 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting')),[]))
2014-09-02 15:46:22,983 3648 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 15:46:22,983 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:46:22,983 3648 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-02 15:46:22,984 3649 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 15:46:22,984 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,139 10447 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:14,150 10458 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:14,153 10461 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:14,154 10462 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:14,716 11024 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:14,716 11024 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:14,716 11024 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:14,716 11024 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56541
2014-09-02 15:48:14,717 11025 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56541
2014-09-02 15:48:14,717 11025 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:14,717 11025 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11604
2014-09-02 15:48:14,717 11025 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11604
2014-09-02 15:48:14,718 11026 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56541 using key 97b48673a22a5112
2014-09-02 15:48:14,719 11027 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:14,720 11028 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:14,947 11255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:14,955 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,955 11263 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:14,956 11264 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:14,956 11264 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:14,975 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,975 11283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,978 11286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:14,979 11287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,979 11287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,979 11287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,980 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:14,980 11288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,981 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,981 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,982 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:14,982 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,982 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,983 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,983 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:14,984 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,984 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,984 11292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,985 11293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:14,986 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,986 11294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,987 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,987 11295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:14,988 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,988 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,988 11296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,989 11297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:14,990 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,990 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,990 11298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,991 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:14,991 11299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,992 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,992 11300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,993 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:14,993 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,993 11301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,994 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,994 11302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:14,995 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,995 11303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,996 11304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,996 11304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:14,997 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,997 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:14,998 11306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:14,998 11306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:14,999 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:14,999 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,000 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,000 11308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:15,001 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,001 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,001 11309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,033 11341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:15,034 11342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:15,038 11346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,039 11347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,053 11361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:15,054 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:15,055 11363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,055 11363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,064 11372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:48:15,066 11374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:15,067 11375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,068 11376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,078 11386 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:15,086 11394 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:15,087 11395 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:15,087 11395 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:15,792 12100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:15,792 12100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:15,792 12100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:15,792 12100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56543
2014-09-02 15:48:15,792 12100 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56543
2014-09-02 15:48:15,793 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:15,793 12101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11608
2014-09-02 15:48:15,793 12101 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11608
2014-09-02 15:48:15,793 12101 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56543 using key 97b48673a22a5112
2014-09-02 15:48:15,794 12102 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:15,794 12102 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:15,836 12144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:15,846 12154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,846 12154 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:15,846 12154 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:15,846 12154 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:15,846 12154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,847 12155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,848 12156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:15,848 12156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,849 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,849 12157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,850 12158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:15,850 12158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,851 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,851 12159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,852 12160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_25,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:15,852 12160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,853 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,853 12161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,854 12162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:15,855 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,855 12163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,856 12164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,857 12165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:15,857 12165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,858 12166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,858 12166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,859 12167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:15,860 12168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,860 12168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,861 12169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,861 12169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:15,862 12170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,862 12170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,863 12171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,863 12171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:15,864 12172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,864 12172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,864 12172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,865 12173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:15,865 12173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,866 12174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,866 12174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,867 12175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:15,868 12176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,868 12176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,868 12176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,869 12177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:15,869 12177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,870 12178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,870 12178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,871 12179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:15,871 12179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,871 12179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,872 12180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,872 12180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:15,873 12181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:15,874 12182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,874 12182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,875 12183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_30,formula_29,formula_27,formula_25,formula_28,formula_31,formula_26,formula_34,formula_23,formula_32,formula_35,formula_24,formula_33],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:15,875 12183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:15,877 12185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,878 12186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,879 12187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:15,880 12188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:15,880 12188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,881 12189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,886 12194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:48:15,889 12197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:48:15,889 12197 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:15,889 12197 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:15,889 12197 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:15,889 12197 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:15,890 12198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:48:15,890 12198 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:48:15,891 12199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,891 12199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:48:15,892 12200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:48:15,892 12200 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:15,892 12200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,893 12201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,900 12208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_30,formula_29,formula_27,formula_25,formula_28,formula_31,formula_26,formula_34,formula_23,formula_32,formula_35,formula_24,formula_33],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:48:15,903 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:15,903 12211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,903 12211 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:15,904 12212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:48:15,905 12213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,905 12213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,905 12213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:15,905 12213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:15,905 12213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,914 12222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,915 12223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,935 12243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:48:15,938 12246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:48:15,939 12247 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:15,939 12247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:15,940 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:15,949 12257 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:15,955 12263 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:15,956 12264 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:15,957 12265 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:16,751 13059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:16,752 13060 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:16,752 13060 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:16,752 13060 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56545
2014-09-02 15:48:16,753 13061 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56545
2014-09-02 15:48:16,753 13061 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:16,753 13061 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11614
2014-09-02 15:48:16,753 13061 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11614
2014-09-02 15:48:16,754 13062 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56545 using key 97b48673a22a5112
2014-09-02 15:48:16,754 13062 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:16,755 13063 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:16,798 13106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:16,808 13116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,808 13116 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:16,809 13117 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:16,809 13117 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:16,809 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,809 13117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,810 13118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:16,811 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,811 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,811 13119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,812 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:16,812 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,812 13120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,813 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,813 13121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:16,814 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,814 13122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,815 13123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,815 13123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:16,816 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,816 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,816 13124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,817 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:16,817 13125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,818 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,818 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,818 13126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:16,819 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,819 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,820 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,820 13128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:16,821 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,821 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,822 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,822 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:16,823 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,823 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,823 13131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,824 13132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:16,825 13133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,825 13133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,825 13133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,826 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:16,826 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,826 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,827 13135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,827 13135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:16,828 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,828 13136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,829 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,829 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:16,829 13137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,830 13138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,830 13138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,831 13139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:16,831 13139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:16,832 13140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,832 13140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,832 13140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_55,formula_54,formula_52,formula_50,formula_53,formula_56,formula_51,formula_59,formula_48,formula_57,formula_60,formula_49,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:16,833 13141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:16,835 13143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,835 13143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,836 13144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:16,837 13145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:16,838 13146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,838 13146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,843 13151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:48:16,845 13153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:16,845 13153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:16,845 13153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:16,853 13161 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:16,857 13165 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:16,858 13166 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:16,858 13166 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:17,530 13838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:17,530 13838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:17,530 13838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:17,530 13838 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56547
2014-09-02 15:48:17,531 13839 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56547
2014-09-02 15:48:17,531 13839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:17,531 13839 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11618
2014-09-02 15:48:17,531 13839 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11618
2014-09-02 15:48:17,531 13839 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56547 using key 97b48673a22a5112
2014-09-02 15:48:17,532 13840 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:17,533 13841 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:17,565 13873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:17,575 13883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,575 13883 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:17,576 13884 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:17,576 13884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,576 13884 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:17,576 13884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,577 13885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:17,577 13885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,577 13885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,578 13886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,578 13886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:17,579 13887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,579 13887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,579 13887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,579 13887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:17,580 13888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,580 13888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,580 13888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,581 13889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:17,581 13889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,582 13890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,582 13890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,582 13890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:17,583 13891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,583 13891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,584 13892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,584 13892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:17,585 13893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,585 13893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,585 13893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,586 13894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:17,587 13895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,587 13895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,587 13895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,588 13896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_77,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:17,588 13896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,589 13897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,589 13897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,590 13898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:17,590 13898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,591 13899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,591 13899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,592 13900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:17,593 13901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,593 13901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,593 13901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,594 13902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:17,595 13903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,595 13903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,596 13904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,596 13904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:17,597 13905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,597 13905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,598 13906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,598 13906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:17,599 13907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:17,599 13907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,600 13908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,601 13909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_77,formula_76,formula_74,formula_72,formula_75,formula_78,formula_73,formula_81,formula_70,formula_79,formula_82,formula_71,formula_80],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:17,602 13910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:17,604 13912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,604 13912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,605 13913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:17,606 13914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:17,606 13914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,607 13915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,610 13918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:48:17,613 13921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:48:17,613 13921 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:17,613 13921 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:17,613 13921 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:17,613 13921 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:17,613 13921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,613 13921 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:17,614 13922 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:17,614 13922 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:17,614 13922 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:17,614 13922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,614 13922 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:48:17,614 13922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:48:17,615 13923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:48:17,615 13923 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:17,615 13923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,616 13924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,616 13924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_77,formula_76,formula_74,formula_72,formula_75,formula_78,formula_73,formula_81,formula_70,formula_79,formula_82,formula_71,formula_80],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:48:17,619 13927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:17,619 13927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,619 13927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,619 13927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,619 13927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:17,620 13928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,622 13930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,623 13931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,629 13937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:48:17,631 13939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:48:17,631 13939 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:17,631 13939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:17,631 13939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:17,637 13945 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:17,642 13950 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:17,643 13951 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:17,643 13951 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:18,309 14617 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:18,310 14618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:18,310 14618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:18,310 14618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56549
2014-09-02 15:48:18,310 14618 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56549
2014-09-02 15:48:18,310 14618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:18,310 14618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11622
2014-09-02 15:48:18,311 14619 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11622
2014-09-02 15:48:18,311 14619 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56549 using key 97b48673a22a5112
2014-09-02 15:48:18,311 14619 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:18,312 14620 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:18,336 14644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:18,344 14652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,344 14652 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:18,344 14652 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:18,344 14652 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:18,344 14652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,345 14653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,345 14653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:18,346 14654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,346 14654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,347 14655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,347 14655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:18,348 14656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,348 14656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,349 14657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,349 14657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:18,350 14658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,350 14658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,351 14659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,351 14659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:18,352 14660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,352 14660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,353 14661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,354 14662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:18,354 14662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,355 14663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,355 14663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,355 14663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:18,356 14664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,356 14664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,357 14665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,357 14665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:18,357 14665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,358 14666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,358 14666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,359 14667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_102,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:18,359 14667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,359 14667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,360 14668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,360 14668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_103,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:18,361 14669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,361 14669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,362 14670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,362 14670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_104,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:18,363 14671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,363 14671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,363 14671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,364 14672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:18,365 14673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,365 14673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,365 14673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,366 14674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:18,367 14675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,367 14675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,367 14675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,368 14676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:18,368 14676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:18,369 14677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,369 14677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,370 14678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_102,formula_101,formula_99,formula_97,formula_100,formula_103,formula_98,formula_106,formula_95,formula_104,formula_107,formula_96,formula_105],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:18,370 14678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:18,371 14679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,372 14680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,373 14681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:18,373 14681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:18,374 14682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,374 14682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,378 14686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:48:18,379 14687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:18,380 14688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:18,380 14688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:18,387 14695 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:18,395 14703 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:18,397 14705 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:18,397 14705 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56551
2014-09-02 15:48:19,083 15391 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56551
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:19,083 15391 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11626
2014-09-02 15:48:19,084 15392 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11626
2014-09-02 15:48:19,084 15392 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56551 using key 97b48673a22a5112
2014-09-02 15:48:19,084 15392 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:19,085 15393 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:19,112 15420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:19,119 15427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,119 15427 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:19,120 15428 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:19,120 15428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,120 15428 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:19,120 15428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,120 15428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_117,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:19,121 15429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,121 15429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,122 15430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,122 15430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:19,123 15431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,123 15431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,123 15431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,124 15432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:19,124 15432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,124 15432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,125 15433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,125 15433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:19,126 15434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,126 15434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,126 15434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,127 15435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:19,127 15435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,128 15436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,128 15436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,128 15436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:19,129 15437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,129 15437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,129 15437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,130 15438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:19,131 15439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,131 15439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,131 15439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,132 15440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:19,132 15440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,132 15440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,133 15441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,133 15441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:19,134 15442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,134 15442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,134 15442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,135 15443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:19,135 15443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,136 15444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,136 15444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,136 15444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:19,137 15445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,137 15445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,137 15445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,138 15446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_128,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:19,139 15447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,139 15447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,139 15447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,140 15448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_129,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:19,140 15448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,140 15448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,141 15449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,141 15449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_124,formula_123,formula_121,formula_119,formula_122,formula_125,formula_120,formula_128,formula_117,formula_126,formula_129,formula_118,formula_127],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:19,142 15450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:19,143 15451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,144 15452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,145 15453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:19,146 15454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:19,146 15454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,146 15454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,150 15458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:48:19,152 15460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:48:19,152 15460 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:19,152 15460 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:19,152 15460 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:19,153 15461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:48:19,153 15461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:48:19,153 15461 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:48:19,154 15462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:48:19,154 15462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:48:19,154 15462 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:19,154 15462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,155 15463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,156 15464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_124,formula_123,formula_121,formula_119,formula_122,formula_125,formula_120,formula_128,formula_117,formula_126,formula_129,formula_118,formula_127],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:48:19,158 15466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:19,158 15466 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,158 15466 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,158 15466 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:19,159 15467 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,161 15469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,161 15469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,166 15474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:48:19,168 15476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:48:19,168 15476 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:19,168 15476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,168 15476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,172 15480 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:19,176 15484 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:19,177 15485 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:19,177 15485 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:19,859 16167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:19,860 16168 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:19,860 16168 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:19,860 16168 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56553
2014-09-02 15:48:19,860 16168 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56553
2014-09-02 15:48:19,860 16168 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:19,860 16168 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11630
2014-09-02 15:48:19,861 16169 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11630
2014-09-02 15:48:19,861 16169 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56553 using key 97b48673a22a5112
2014-09-02 15:48:19,861 16169 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:19,862 16170 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:19,883 16191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:19,891 16199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,891 16199 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:19,891 16199 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:19,891 16199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,892 16200 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:19,892 16200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,892 16200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_142,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:19,893 16201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,893 16201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,894 16202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,894 16202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_143,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:19,895 16203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,895 16203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,895 16203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,896 16204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:19,896 16204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,897 16205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,897 16205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,898 16206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:19,899 16207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,899 16207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,899 16207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,900 16208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:19,900 16208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,900 16208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,901 16209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,901 16209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:19,902 16210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,902 16210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,903 16211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,903 16211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:19,904 16212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,904 16212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,905 16213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,905 16213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:19,906 16214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,906 16214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,906 16214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,907 16215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:19,907 16215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,907 16215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,908 16216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,908 16216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:19,909 16217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,909 16217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,910 16218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,910 16218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:19,911 16219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,911 16219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,911 16219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,912 16220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:19,912 16220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,913 16221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,913 16221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,914 16222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_154,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:19,914 16222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:19,915 16223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,915 16223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,916 16224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_149,formula_148,formula_146,formula_144,formula_147,formula_150,formula_145,formula_153,formula_142,formula_151,formula_154,formula_143,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:19,917 16225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:19,918 16226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,918 16226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,920 16228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:19,920 16228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:19,921 16229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,921 16229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,924 16232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:48:19,926 16234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:19,926 16234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:19,927 16235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:19,932 16240 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:19,938 16246 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:19,938 16246 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:19,939 16247 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:20,618 16926 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:20,626 16934 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:20,627 16935 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:20,627 16935 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56555
2014-09-02 15:48:20,627 16935 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56555
2014-09-02 15:48:20,627 16935 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:20,628 16936 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11634
2014-09-02 15:48:20,628 16936 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11634
2014-09-02 15:48:20,628 16936 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56555 using key 97b48673a22a5112
2014-09-02 15:48:20,629 16937 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:20,630 16938 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:20,656 16964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:20,663 16971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,663 16971 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:20,664 16972 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:20,664 16972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,664 16972 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:20,664 16972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,664 16972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_164,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:20,665 16973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,665 16973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,665 16973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,666 16974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_165,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:20,666 16974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,667 16975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,667 16975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,667 16975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_166,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:20,668 16976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,668 16976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,668 16976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,669 16977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_167,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:20,669 16977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,669 16977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,670 16978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,670 16978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_168,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:20,671 16979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,671 16979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,671 16979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,672 16980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:20,672 16980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,673 16981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,673 16981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,674 16982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_170,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:20,674 16982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,675 16983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,675 16983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,676 16984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_171,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:20,677 16985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,677 16985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,677 16985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,678 16986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_172,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:20,678 16986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,679 16987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,679 16987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,680 16988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_173,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:20,680 16988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,680 16988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,681 16989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,681 16989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_174,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:20,682 16990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,682 16990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,682 16990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,683 16991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_175,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:20,684 16992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,684 16992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,684 16992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,685 16993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_176,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:20,685 16993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:20,685 16993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,686 16994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,686 16994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_171,formula_170,formula_168,formula_166,formula_169,formula_172,formula_167,formula_175,formula_164,formula_173,formula_176,formula_165,formula_174],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:20,687 16995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:20,688 16996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,688 16996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,690 16998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:20,691 16999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:20,691 16999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,691 16999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,695 17003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:48:20,698 17006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:20,698 17006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:20,698 17006 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:20,699 17007 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:20,699 17007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,699 17007 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:20,699 17007 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:48:20,699 17007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:48:20,700 17008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:48:20,700 17008 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:20,700 17008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,700 17008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,701 17009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_171,formula_170,formula_168,formula_166,formula_169,formula_172,formula_167,formula_175,formula_164,formula_173,formula_176,formula_165,formula_174],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:48:20,704 17012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:20,704 17012 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,704 17012 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,705 17013 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,706 17014 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:20,706 17014 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:20,706 17014 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,707 17015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,707 17015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,713 17021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:48:20,715 17023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:48:20,715 17023 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:20,716 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:20,716 17024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:20,768 17076 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:20,786 17094 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:20,788 17096 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:20,788 17096 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:21,414 17722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:21,414 17722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:21,414 17722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:21,414 17722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56557
2014-09-02 15:48:21,414 17722 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56557
2014-09-02 15:48:21,414 17722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:21,415 17723 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11638
2014-09-02 15:48:21,415 17723 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11638
2014-09-02 15:48:21,415 17723 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56557 using key 97b48673a22a5112
2014-09-02 15:48:21,415 17723 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:21,416 17724 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:21,438 17746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:21,447 17755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,447 17755 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:21,447 17755 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:21,447 17755 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:21,447 17755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,448 17756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,448 17756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_189,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:21,449 17757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,449 17757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,449 17757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,450 17758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_190,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:21,450 17758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,451 17759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,451 17759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,451 17759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_191,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:21,452 17760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,452 17760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,453 17761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,453 17761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_192,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:21,454 17762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,454 17762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,454 17762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,454 17762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_193,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:21,455 17763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,455 17763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,456 17764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,456 17764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_194,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:21,457 17765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,457 17765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,457 17765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,458 17766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_195,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:21,458 17766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,458 17766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,459 17767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,459 17767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_196,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:21,460 17768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,460 17768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,461 17769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,461 17769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_197,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:21,462 17770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,463 17771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,463 17771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,463 17771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_198,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:21,464 17772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,464 17772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,465 17773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,465 17773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_199,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:21,466 17774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,466 17774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,466 17774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,467 17775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_200,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:21,468 17776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,468 17776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,468 17776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,469 17777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_201,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:21,470 17778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:21,470 17778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,470 17778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,471 17779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_196,formula_195,formula_193,formula_191,formula_194,formula_197,formula_192,formula_200,formula_189,formula_198,formula_201,formula_190,formula_199],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:21,472 17780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:21,473 17781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,473 17781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,474 17782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:21,475 17783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:21,475 17783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,475 17783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,478 17786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:48:21,480 17788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:21,480 17788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:21,480 17788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:21,485 17793 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:21,489 17797 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:21,491 17799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:21,491 17799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:22,194 18502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:22,194 18502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:22,194 18502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:22,194 18502 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56559
2014-09-02 15:48:22,194 18502 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56559
2014-09-02 15:48:22,195 18503 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:22,195 18503 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11642
2014-09-02 15:48:22,195 18503 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11642
2014-09-02 15:48:22,195 18503 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56559 using key 97b48673a22a5112
2014-09-02 15:48:22,196 18504 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:22,196 18504 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:22,222 18530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:22,235 18543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,235 18543 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:22,236 18544 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:22,236 18544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,236 18544 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:22,236 18544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,237 18545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_211,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:22,237 18545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,238 18546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,238 18546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,238 18546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_212,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:22,239 18547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,239 18547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,240 18548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,240 18548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_213,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:22,240 18548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,241 18549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,241 18549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,241 18549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_214,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:22,242 18550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,242 18550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,243 18551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,243 18551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_215,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:22,244 18552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,244 18552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,244 18552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,244 18552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_216,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:22,245 18553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,245 18553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,246 18554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,246 18554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_217,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:22,247 18555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,247 18555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,247 18555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,247 18555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_218,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:22,248 18556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,248 18556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,249 18557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,249 18557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_219,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:22,249 18557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,250 18558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,250 18558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,250 18558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_220,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:22,251 18559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,251 18559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,252 18560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,252 18560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_221,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:22,253 18561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,253 18561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,253 18561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,254 18562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_222,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:22,254 18562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,255 18563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,255 18563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,255 18563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_223,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:22,256 18564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,256 18564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,256 18564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,257 18565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_218,formula_217,formula_215,formula_213,formula_216,formula_219,formula_214,formula_222,formula_211,formula_220,formula_223,formula_212,formula_221],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:22,258 18566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:22,259 18567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,259 18567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,260 18568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:22,261 18569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:22,261 18569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,261 18569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,264 18572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:48:22,268 18576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:48:22,268 18576 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:22,268 18576 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:22,269 18577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:22,269 18577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,269 18577 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:48:22,270 18578 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:48:22,270 18578 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:48:22,270 18578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:48:22,270 18578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:48:22,270 18578 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:22,271 18579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,271 18579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,271 18579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_218,formula_217,formula_215,formula_213,formula_216,formula_219,formula_214,formula_222,formula_211,formula_220,formula_223,formula_212,formula_221],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:48:22,275 18583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,275 18583 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,276 18584 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:22,276 18584 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:22,276 18584 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,277 18585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,277 18585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,281 18589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:48:22,284 18592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:48:22,284 18592 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:22,284 18592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,284 18592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,288 18596 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:22,295 18603 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:22,296 18604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:22,296 18604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:22,906 19214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:22,906 19214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:22,906 19214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:22,906 19214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56561
2014-09-02 15:48:22,907 19215 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56561
2014-09-02 15:48:22,907 19215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:22,907 19215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11646
2014-09-02 15:48:22,907 19215 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11646
2014-09-02 15:48:22,907 19215 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56561 using key 97b48673a22a5112
2014-09-02 15:48:22,908 19216 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:22,908 19216 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:22,926 19234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:22,935 19243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,935 19243 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:22,935 19243 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:22,935 19243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,936 19244 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:22,936 19244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,936 19244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_236,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:22,937 19245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,937 19245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,937 19245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,938 19246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_237,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:22,938 19246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,938 19246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,939 19247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,939 19247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_238,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:22,940 19248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,940 19248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,940 19248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,941 19249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_239,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:22,941 19249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,941 19249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,942 19250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,942 19250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_240,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:22,943 19251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,943 19251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,943 19251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,943 19251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_241,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:22,944 19252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,944 19252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,945 19253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,945 19253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_242,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:22,946 19254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,946 19254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,946 19254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,947 19255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_243,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:22,947 19255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,948 19256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,948 19256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,948 19256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_244,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:22,949 19257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,949 19257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,950 19258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,950 19258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_245,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:22,951 19259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,951 19259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,951 19259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,952 19260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_246,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:22,952 19260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,953 19261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,953 19261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,954 19262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_247,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:22,954 19262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,955 19263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,955 19263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,956 19264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_248,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:22,956 19264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:22,957 19265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,957 19265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,957 19265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_243,formula_242,formula_240,formula_238,formula_241,formula_244,formula_239,formula_247,formula_236,formula_245,formula_248,formula_237,formula_246],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:22,958 19266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:22,959 19267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,959 19267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,961 19269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:22,961 19269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:22,962 19270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,962 19270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,965 19273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:48:22,966 19274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:22,967 19275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:22,967 19275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:22,972 19280 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:22,976 19284 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:22,977 19285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:22,978 19286 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:23,633 19941 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:23,633 19941 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:23,633 19941 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:23,633 19941 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56563
2014-09-02 15:48:23,633 19941 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56563
2014-09-02 15:48:23,634 19942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:23,634 19942 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11650
2014-09-02 15:48:23,634 19942 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11650
2014-09-02 15:48:23,634 19942 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56563 using key 97b48673a22a5112
2014-09-02 15:48:23,634 19942 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:23,635 19943 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:23,654 19962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:23,662 19970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,662 19970 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:23,663 19971 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:23,663 19971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,663 19971 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:23,663 19971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,664 19972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_258,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:23,664 19972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,664 19972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,665 19973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,665 19973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_259,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:23,665 19973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,666 19974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,666 19974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,666 19974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_260,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:23,667 19975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,667 19975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,667 19975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,667 19975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_261,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:23,668 19976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,668 19976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,669 19977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,669 19977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_262,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:23,669 19977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,670 19978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,670 19978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,670 19978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_263,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:23,671 19979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,671 19979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,671 19979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,672 19980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_264,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:23,672 19980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,673 19981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,673 19981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,673 19981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_265,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:23,674 19982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,674 19982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,674 19982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,675 19983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_266,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:23,675 19983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,675 19983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,676 19984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,676 19984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_267,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:23,677 19985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,677 19985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,677 19985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,677 19985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_268,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:23,678 19986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,678 19986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,679 19987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,679 19987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_269,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:23,680 19988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,680 19988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,680 19988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,681 19989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_270,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:23,681 19989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:23,681 19989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,682 19990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,682 19990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_265,formula_264,formula_262,formula_260,formula_263,formula_266,formula_261,formula_269,formula_258,formula_267,formula_270,formula_259,formula_268],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:23,683 19991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:23,684 19992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,684 19992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,685 19993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:23,686 19994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:23,686 19994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,687 19995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,689 19997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:48:23,691 19999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:48:23,691 19999 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:23,692 20000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:23,692 20000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,692 20000 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:48:23,693 20001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:48:23,693 20001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:48:23,693 20001 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:23,693 20001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,694 20002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,694 20002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_265,formula_264,formula_262,formula_260,formula_263,formula_266,formula_261,formula_269,formula_258,formula_267,formula_270,formula_259,formula_268],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:48:23,696 20004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:23,697 20005 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:23,698 20006 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,698 20006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,698 20006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,702 20010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:48:23,704 20012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:48:23,704 20012 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:23,704 20012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:23,705 20013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:23,709 20017 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:23,715 20023 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:23,715 20023 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:23,716 20024 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:24,316 20624 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:24,316 20624 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:24,317 20625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:24,317 20625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56565
2014-09-02 15:48:24,317 20625 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56565
2014-09-02 15:48:24,317 20625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:24,317 20625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11654
2014-09-02 15:48:24,317 20625 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11654
2014-09-02 15:48:24,317 20625 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56565 using key 97b48673a22a5112
2014-09-02 15:48:24,318 20626 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:24,319 20627 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:24,340 20648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:24,352 20660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,352 20660 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:24,353 20661 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:24,353 20661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,353 20661 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:24,353 20661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,354 20662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_283,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:24,354 20662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,354 20662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,355 20663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,355 20663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_284,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:24,356 20664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,356 20664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,356 20664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,356 20664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_285,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:24,357 20665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,357 20665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,357 20665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,358 20666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_286,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:24,358 20666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,359 20667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,359 20667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,359 20667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_287,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:24,360 20668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,360 20668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,360 20668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,361 20669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_288,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:24,361 20669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,361 20669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,362 20670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,362 20670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_289,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:24,363 20671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,363 20671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,363 20671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,364 20672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_290,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:24,364 20672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,364 20672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,365 20673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,365 20673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_291,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:24,366 20674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,366 20674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,366 20674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,366 20674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_292,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:24,367 20675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,367 20675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,368 20676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,368 20676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_293,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:24,368 20676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,369 20677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,369 20677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,369 20677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_294,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:24,370 20678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,370 20678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,371 20679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,371 20679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_295,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:24,372 20680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:24,372 20680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,372 20680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,373 20681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_290,formula_289,formula_287,formula_285,formula_288,formula_291,formula_286,formula_294,formula_283,formula_292,formula_295,formula_284,formula_293],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:24,373 20681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:24,374 20682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,375 20683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,376 20684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:24,377 20685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:24,377 20685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,377 20685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,380 20688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-09-02 15:48:24,382 20690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:24,382 20690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:24,383 20691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:24,388 20696 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:24,395 20703 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:24,396 20704 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:24,396 20704 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:25,007 21315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56567
2014-09-02 15:48:25,008 21316 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56567
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11658
2014-09-02 15:48:25,008 21316 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11658
2014-09-02 15:48:25,008 21316 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56567 using key 97b48673a22a5112
2014-09-02 15:48:25,009 21317 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:25,011 21319 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:25,029 21337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:25,036 21344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,036 21344 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:25,037 21345 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:25,037 21345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,037 21345 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:25,037 21345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,038 21346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_305,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:25,038 21346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,038 21346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,039 21347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,039 21347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_306,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:25,039 21347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,040 21348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,040 21348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,040 21348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_307,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:25,041 21349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,041 21349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,041 21349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,042 21350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_308,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:25,042 21350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,043 21351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,043 21351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,043 21351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_309,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:25,044 21352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,044 21352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,045 21353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,045 21353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_310,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:25,046 21354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,046 21354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,047 21355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,047 21355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_311,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:25,047 21355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,048 21356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,048 21356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,048 21356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_312,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:25,049 21357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,049 21357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,049 21357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,050 21358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_313,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:25,050 21358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,051 21359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,051 21359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,051 21359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_314,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:25,052 21360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,052 21360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,052 21360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,053 21361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_315,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:25,053 21361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,054 21362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,054 21362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,055 21363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_316,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:25,056 21364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,056 21364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,056 21364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,057 21365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_317,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:25,058 21366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,058 21366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,058 21366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,059 21367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_312,formula_311,formula_309,formula_307,formula_310,formula_313,formula_308,formula_316,formula_305,formula_314,formula_317,formula_306,formula_315],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:25,060 21368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:25,061 21369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,061 21369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,062 21370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:25,063 21371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:25,063 21371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,063 21371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,066 21374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),R),true.

2014-09-02 15:48:25,068 21376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,1),1)),[]))
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:25,068 21376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:25,068 21376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,068 21376 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:25,069 21377 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - not(
2014-09-02 15:48:25,069 21377 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -   active = {}
2014-09-02 15:48:25,069 21377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(1,TraceStrings),true.

2014-09-02 15:48:25,069 21377 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - )
2014-09-02 15:48:25,069 21377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('1',[])),[]))
2014-09-02 15:48:25,069 21377 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:25,069 21377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,070 21378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,070 21378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(1,APLOps),eval_registered_formulas(1,[formula_312,formula_311,formula_309,formula_307,formula_310,formula_313,formula_308,formula_316,formula_305,formula_314,formula_317,formula_306,formula_315],BResults),state_property(initialised,1,CPropResult),state_property(invariantKO,1,DPropResult),state_property(max_operations_reached,1,EPropResult),state_property(timeout_occurred,1,FPropResult),op_timeout_occurred(1,GTO),get_state_errors(1,HErrors),true.

2014-09-02 15:48:25,073 21381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,1,1),'.'(op(3,1,2),'.'(op(4,1,3),'.'(op(5,1,4),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result('{PID1}',[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:25,073 21381 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,073 21381 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,073 21381 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {PID1}
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:25,074 21382 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,075 21383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,075 21383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,079 21387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(1,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),negation(none,equal(none,identifier(none,active),empty_set(none)))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})'),ARes),true.

2014-09-02 15:48:25,080 21388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & not(active = {})')),[]))
2014-09-02 15:48:25,080 21388 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:25,080 21388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,081 21389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,084 21392 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:25,089 21397 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:25,090 21398 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:25,090 21398 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56569
2014-09-02 15:48:25,700 22008 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56569
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:25,700 22008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11662
2014-09-02 15:48:25,700 22008 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11662
2014-09-02 15:48:25,701 22009 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56569 using key 97b48673a22a5112
2014-09-02 15:48:25,701 22009 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:25,702 22010 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:25,719 22027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:25,727 22035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,727 22035 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:25,727 22035 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:25,727 22035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,727 22035 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:25,727 22035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,728 22036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_330,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:25,728 22036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,728 22036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,729 22037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,729 22037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_331,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:25,729 22037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,730 22038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,730 22038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,730 22038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_332,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:25,731 22039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,731 22039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,732 22040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,732 22040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_333,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:25,732 22040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,733 22041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,733 22041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,733 22041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_334,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:25,734 22042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,734 22042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,735 22043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,735 22043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_335,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:25,735 22043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,736 22044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,736 22044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,736 22044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_336,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:25,737 22045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,737 22045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,738 22046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,738 22046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_337,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:25,738 22046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,738 22046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,739 22047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,739 22047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_338,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:25,740 22048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,740 22048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,740 22048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,741 22049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_339,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:25,741 22049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,742 22050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,742 22050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,742 22050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_340,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:25,743 22051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,744 22052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,744 22052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,744 22052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_341,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:25,745 22053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,745 22053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,745 22053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,746 22054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_342,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:25,746 22054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:25,746 22054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,747 22055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,747 22055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_337,formula_336,formula_334,formula_332,formula_335,formula_338,formula_333,formula_341,formula_330,formula_339,formula_342,formula_331,formula_340],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:25,748 22056 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:25,749 22057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,750 22058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,751 22059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:25,751 22059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:25,752 22060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,752 22060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,755 22063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:48:25,756 22064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:48:25,757 22065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:25,757 22065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:25,761 22069 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:48:25,766 22074 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:48:25,766 22074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:48:25,767 22075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:48:26,379 22687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:48:26,380 22688 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:48:26,380 22688 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:48:26,380 22688 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56571
2014-09-02 15:48:26,380 22688 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56571
2014-09-02 15:48:26,381 22689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:48:26,381 22689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11666
2014-09-02 15:48:26,381 22689 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11666
2014-09-02 15:48:26,381 22689 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56571 using key 97b48673a22a5112
2014-09-02 15:48:26,382 22690 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:48:26,383 22691 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:48:26,402 22710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:48:26,409 22717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,409 22717 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:48:26,410 22718 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:48:26,410 22718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,410 22718 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:48:26,410 22718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,410 22718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_352,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:48:26,411 22719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,411 22719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,411 22719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,412 22720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_353,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:48:26,412 22720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,412 22720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,413 22721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,413 22721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_354,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:48:26,414 22722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,414 22722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,414 22722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,415 22723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_355,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:48:26,415 22723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,416 22724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,416 22724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,417 22725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_356,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:48:26,417 22725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,417 22725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,418 22726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,418 22726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_357,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:48:26,419 22727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,419 22727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,419 22727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,419 22727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_358,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:48:26,420 22728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,420 22728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,420 22728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,421 22729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_359,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:48:26,421 22729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,421 22729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,422 22730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,422 22730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_360,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:48:26,423 22731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,423 22731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,423 22731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,424 22732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_361,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:48:26,425 22733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,425 22733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,425 22733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,426 22734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_362,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:48:26,426 22734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,426 22734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,427 22735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,427 22735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_363,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:48:26,428 22736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,428 22736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,429 22737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,429 22737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_364,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:48:26,430 22738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:48:26,430 22738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,430 22738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,431 22739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_359,formula_358,formula_356,formula_354,formula_357,formula_360,formula_355,formula_363,formula_352,formula_361,formula_364,formula_353,formula_362],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:48:26,432 22740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:26,432 22740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,432 22740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,433 22741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:48:26,434 22742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:48:26,434 22742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,434 22742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,437 22745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),R),true.

2014-09-02 15:48:26,439 22747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-09-02 15:48:26,439 22747 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ready /\ waiting = {}
2014-09-02 15:48:26,439 22747 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - (active /\ ready) \/ waiting = {}
2014-09-02 15:48:26,440 22748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - card(active) <= 1
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:26,440 22748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {} => ready = {}
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - &
2014-09-02 15:48:26,440 22748 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - active = {}
2014-09-02 15:48:26,440 22748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_trace(0,TraceStrings),true.

2014-09-02 15:48:26,441 22749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('TraceStrings','.'('0',[])),[]))
2014-09-02 15:48:26,441 22749 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-02 15:48:26,441 22749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,441 22749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,442 22750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_359,formula_358,formula_356,formula_354,formula_357,formula_360,formula_355,formula_363,formula_352,formula_361,formula_364,formula_353,formula_362],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:48:26,444 22752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(2,0,0),'.'(op(3,0,1),'.'(op(4,0,2),'.'(op(5,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:48:26,444 22752 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,445 22753 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:48:26,446 22754 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,446 22754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,447 22755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:48:26,451 22759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),'#PREDICATE','active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}'),ARes),true.

2014-09-02 15:48:26,452 22760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {}')),[]))
2014-09-02 15:48:26,452 22760 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:48:26,452 22760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:48:26,453 22761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:45,635 2941 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:51:45,648 2954 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:51:45,670 2976 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:51:45,671 2977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:51:46,348 3654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:51:46,349 3655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:51:46,349 3655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:51:46,349 3655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56591
2014-09-02 15:51:46,350 3656 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56591
2014-09-02 15:51:46,350 3656 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:51:46,350 3656 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11674
2014-09-02 15:51:46,351 3657 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11674
2014-09-02 15:51:46,352 3658 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56591 using key 3b8291632bfc81a6
2014-09-02 15:51:46,352 3658 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:51:46,354 3660 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:51:46,575 3881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:51:46,589 3895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,589 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:51:46,589 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:51:46,589 3895 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:51:46,614 3920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,615 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,619 3925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:51:46,620 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,621 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,621 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,622 3928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:51:46,623 3929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,624 3930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,624 3930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,625 3931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:51:46,626 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,626 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,627 3933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,627 3933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:51:46,628 3934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,629 3935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,629 3935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,630 3936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:51:46,631 3937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,631 3937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,632 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,633 3939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:51:46,634 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,634 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,635 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,636 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:51:46,637 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,637 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,637 3943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,638 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:51:46,639 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,639 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,639 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,640 3946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:51:46,641 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,641 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,641 3947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,642 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:51:46,643 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,643 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,643 3949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,644 3950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:51:46,645 3951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,646 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,646 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,647 3953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:51:46,648 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,648 3954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,649 3955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,650 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:51:46,650 3956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:51:46,651 3957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,651 3957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,680 3986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:51:46,681 3987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:51:46,684 3990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,685 3991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,696 4002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:51:46,698 4004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:51:46,699 4005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,700 4006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,706 4012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:51:46,710 4016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 15:51:46,711 4017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,712 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 15:51:46,712 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 15:51:46,712 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 15:51:46,712 4018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,724 4030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:51:46,727 4033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:51:46,727 4033 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,728 4034 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:51:46,729 4035 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:51:46,738 4044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,739 4045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,764 4070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:51:46,767 4073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:51:46,768 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,769 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:51:46,779 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting'),ARes),true.

2014-09-02 15:51:46,782 4088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting')),[]))
2014-09-02 15:51:46,783 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:51:46,784 4090 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 15:51:46,784 4090 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 3
2014-09-02 15:51:46,784 4090 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 15:51:46,785 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:50,534 3029 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:52:50,547 3042 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:52:50,551 3046 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:52:50,552 3047 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:52:51,113 3608 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:52:51,114 3609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:52:51,114 3609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:52:51,114 3609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56596
2014-09-02 15:52:51,114 3609 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56596
2014-09-02 15:52:51,115 3610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:52:51,115 3610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11680
2014-09-02 15:52:51,115 3610 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11680
2014-09-02 15:52:51,116 3611 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56596 using key 4aeb2ced35ef79a2
2014-09-02 15:52:51,117 3612 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:52:51,118 3613 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:52:51,330 3825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:52:51,342 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,342 3837 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:52:51,342 3837 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:52:51,343 3838 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:52:51,365 3860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,366 3861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,368 3863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:52:51,369 3864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,370 3865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,370 3865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,371 3866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:52:51,372 3867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,372 3867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,373 3868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,374 3869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:52:51,375 3870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,375 3870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,376 3871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,377 3872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:52:51,378 3873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,378 3873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,379 3874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,379 3874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:52:51,380 3875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,381 3876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,382 3877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,382 3877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:52:51,383 3878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,384 3879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,384 3879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,385 3880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:52:51,386 3881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,386 3881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,387 3882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,387 3882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:52:51,388 3883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,388 3883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,389 3884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,389 3884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:52:51,390 3885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,390 3885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,391 3886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,391 3886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:52:51,392 3887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,392 3887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,393 3888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,393 3888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:52:51,394 3889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,394 3889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,395 3890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,395 3890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:52:51,396 3891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,396 3891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,397 3892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,398 3893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:52:51,398 3893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:52:51,399 3894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,399 3894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,420 3915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:52:51,422 3917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:52:51,426 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,426 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,437 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:52:51,437 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:52:51,438 3933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,439 3934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,444 3939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:52:51,445 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 15:52:51,445 3940 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 15:52:51,446 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 15:52:51,446 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 15:52:51,447 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,447 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,460 3955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:52:51,466 3961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:52:51,466 3961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,466 3961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,466 3961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,466 3961 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,467 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,468 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:52:51,468 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:52:51,468 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:52:51,477 3972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,477 3972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,496 3991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:52:51,499 3994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:52:51,501 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,501 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:52:51,512 4007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting'),ARes),true.

2014-09-02 15:52:51,516 4011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting')),[]))
2014-09-02 15:52:51,516 4011 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 15:52:51,516 4011 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 3
2014-09-02 15:52:51,516 4011 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 15:52:51,517 4012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:52:51,517 4012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:18,467 2466 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:53:18,476 2475 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:53:18,479 2478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:53:18,480 2479 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:53:19,058 3057 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:53:19,059 3058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:53:19,059 3058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:53:19,059 3058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56602
2014-09-02 15:53:19,060 3059 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56602
2014-09-02 15:53:19,060 3059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:53:19,060 3059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11685
2014-09-02 15:53:19,061 3060 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11685
2014-09-02 15:53:19,062 3061 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56602 using key cbdf8ea62fb8e09c
2014-09-02 15:53:19,063 3062 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:53:19,064 3063 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:53:19,262 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:53:19,275 3274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,275 3274 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:53:19,277 3276 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:53:19,277 3276 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:53:19,303 3302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,304 3303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,306 3305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:53:19,307 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,308 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,308 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,309 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:53:19,309 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,309 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,310 3309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,310 3309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:53:19,311 3310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,311 3310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,312 3311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,312 3311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:53:19,313 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,313 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,314 3313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,314 3313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:53:19,315 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,315 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,316 3315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,316 3315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:53:19,317 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,318 3317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,318 3317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,318 3317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:53:19,319 3318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,319 3318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,320 3319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,320 3319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:53:19,321 3320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,321 3320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,322 3321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,322 3321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:53:19,323 3322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,323 3322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,324 3323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,325 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:53:19,325 3324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,326 3325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,326 3325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,327 3326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:53:19,327 3326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,328 3327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,328 3327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,329 3328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:53:19,329 3328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,330 3329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,330 3329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,331 3330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:53:19,332 3331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:53:19,332 3331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,332 3331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,350 3349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:53:19,351 3350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:53:19,355 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,355 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,369 3368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:53:19,370 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:53:19,371 3370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,372 3371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,375 3374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:53:19,377 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 15:53:19,378 3377 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 15:53:19,378 3377 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 15:53:19,378 3377 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 15:53:19,379 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,380 3379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,394 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:53:19,398 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:53:19,398 3397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,399 3398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:53:19,400 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:53:19,412 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,414 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,436 3435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:53:19,438 3437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:53:19,440 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,441 3440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:53:19,452 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting'),ARes),true.

2014-09-02 15:53:19,464 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting')),[]))
2014-09-02 15:53:19,465 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:53:19,466 3465 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 15:53:19,466 3465 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 3
2014-09-02 15:53:19,466 3465 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 15:53:19,467 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:00,634 3205 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-02 15:54:00,648 3219 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-02 15:54:00,652 3223 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-02 15:54:00,652 3223 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-02 15:54:01,211 3782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-02 15:54:01,211 3782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-02 15:54:01,211 3782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-02 15:54:01,211 3782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 56607
2014-09-02 15:54:01,212 3783 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 56607
2014-09-02 15:54:01,212 3783 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: b2b0b75d43689a3356f7372d4c3959b0f23c90c2
2014-09-02 15:54:01,212 3783 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11690
2014-09-02 15:54:01,212 3783 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11690
2014-09-02 15:54:01,213 3784 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 56607 using key 15d6b1645377c2a0
2014-09-02 15:54:01,214 3785 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-02 15:54:01,215 3786 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-02 15:54:01,450 4021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('MAXINT','30'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-02 15:54:01,469 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,469 4040 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-02 15:54:01,469 4040 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-02 15:54:01,469 4040 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-02 15:54:01,496 4067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,496 4067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,500 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-02 15:54:01,501 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,501 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,502 4073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,503 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-02 15:54:01,503 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,504 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,504 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,505 4076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-02 15:54:01,506 4077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,507 4078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,507 4078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,508 4079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-02 15:54:01,509 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,509 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,510 4081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,511 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-02 15:54:01,511 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,512 4083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,512 4083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,513 4084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-02 15:54:01,513 4084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,514 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,514 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,515 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-02 15:54:01,515 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,516 4087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,516 4087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,517 4088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-02 15:54:01,518 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,518 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,519 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,519 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-02 15:54:01,520 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,521 4092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,521 4092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,522 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-02 15:54:01,523 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,523 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,525 4096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,526 4097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-02 15:54:01,527 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,527 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,528 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,529 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-02 15:54:01,530 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,531 4102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,531 4102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,532 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-02 15:54:01,534 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-02 15:54:01,534 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,535 4106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,567 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),eval_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-02 15:54:01,568 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',false),'.'(=('BResults',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:54:01,571 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,572 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,587 4158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$setup_constants',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:54:01,588 4159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID',[]),[])))
2014-09-02 15:54:01,589 4160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,590 4161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,595 4166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-02 15:54:01,596 4167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),'.'(=('NewStateID','.'(op(0,root,0),[])),[])))
2014-09-02 15:54:01,596 4167 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-02 15:54:01,596 4167 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-02 15:54:01,596 4167 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-02 15:54:01,597 4168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,598 4169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,609 4180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),eval_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-02 15:54:01,612 4183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('GTO',[]),'.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('FPropResult',false),'.'(=('EPropResult',false),'.'(=('DPropResult',false),'.'(=('CPropResult',true),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result({},[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result({},[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result({},[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('HErrors',[]),[])))))))))
2014-09-02 15:54:01,612 4183 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,613 4184 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-02 15:54:01,614 4185 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-02 15:54:01,614 4185 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-02 15:54:01,625 4196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,626 4197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,644 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_find_state_satisfying_predicate(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),R),true.

2014-09-02 15:54:01,648 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',errors('.'(error('Unknown identifier rr',none),[]))),[]))
2014-09-02 15:54:01,650 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,650 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-02 15:54:01,661 4232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,union(none,intersection(none,identifier(none,active),identifier(none,ready)),identifier(none,waiting)),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting))),'#PREDICATE','#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting'),ARes),true.

2014-09-02 15:54:01,664 4235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#active,ready,waiting.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & ready /\\ waiting = {} & active /\\ ready \\/ waiting = {} & card(active) <= 1 & ((active = {}) => (ready = {}))) & active = {} & rr : waiting')),[]))
2014-09-02 15:54:01,664 4235 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: rr : waiting
2014-09-02 15:54:01,665 4236 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 3
2014-09-02 15:54:01,665 4236 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over rr is FALSE
2014-09-02 15:54:01,666 4237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - getErrorMessages(Errors),true.

2014-09-02 15:54:01,666 4237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
