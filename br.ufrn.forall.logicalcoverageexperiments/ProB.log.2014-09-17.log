2014-09-17 16:35:46,537 4372 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:35:46,548 4383 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:35:46,554 4389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:35:46,555 4390 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:35:47,362 5197 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:35:47,362 5197 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:35:47,362 5197 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:35:47,363 5198 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63717
2014-09-17 16:35:47,363 5198 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63717
2014-09-17 16:35:47,363 5198 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:35:47,363 5198 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24771
2014-09-17 16:35:47,364 5199 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24771
2014-09-17 16:35:47,365 5200 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63717 using key 98c3ec77b26ce22a
2014-09-17 16:35:47,365 5200 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:35:47,367 5202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:35:47,597 5432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-17 16:35:47,689 5524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,689 5524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:35:47,689 5524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-17 16:35:47,689 5524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-17 16:35:47,720 5555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,722 5557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,724 5559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-17 16:35:47,726 5561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,727 5562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,727 5562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,728 5563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-17 16:35:47,728 5563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,728 5563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,729 5564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,729 5564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-17 16:35:47,730 5565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,730 5565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,731 5566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,731 5566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-17 16:35:47,732 5567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,733 5568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,733 5568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,734 5569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-17 16:35:47,734 5569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,734 5569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,735 5570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,736 5571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-17 16:35:47,736 5571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,736 5571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,737 5572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,737 5572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-17 16:35:47,738 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,738 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,738 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,739 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-17 16:35:47,740 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,740 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,740 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,741 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-17 16:35:47,741 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,742 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,742 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,743 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-17 16:35:47,743 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,743 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,744 5579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,745 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-17 16:35:47,745 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,746 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,746 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,747 5582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-17 16:35:47,748 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,748 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,748 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,749 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-17 16:35:47,749 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:47,750 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,750 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,770 5605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:35:47,819 5654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:47,823 5658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,823 5658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,836 5671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:35:47,850 5685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:35:47,850 5685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:35:47,850 5685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:35:47,850 5685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:35:47,851 5686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,851 5686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,867 5702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:35:47,916 5751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:47,916 5751 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,917 5752 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:47,918 5753 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:47,948 5783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,949 5784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:47,966 5801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-17 16:35:47,984 5819 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-17 16:35:47,984 5819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-17 16:35:47,984 5819 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:35:47,984 5819 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-17 16:35:47,984 5819 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-17 16:35:47,985 5820 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-17 16:35:47,985 5820 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-17 16:35:47,985 5820 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:47,987 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:47,987 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:48,024 5859 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:35:48,030 5865 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:35:48,031 5866 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:35:48,031 5866 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:35:48,783 6618 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:35:48,784 6619 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:35:48,784 6619 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:35:48,784 6619 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63719
2014-09-17 16:35:48,784 6619 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63719
2014-09-17 16:35:48,784 6619 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:35:48,785 6620 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24775
2014-09-17 16:35:48,785 6620 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24775
2014-09-17 16:35:48,785 6620 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63719 using key 98c3ec77b26ce22a
2014-09-17 16:35:48,785 6620 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:35:48,786 6621 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:35:48,810 6645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-17 16:35:48,902 6737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:48,902 6737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:35:48,902 6737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-17 16:35:48,903 6738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:48,904 6739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:48,904 6739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:35:48,917 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:48,920 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:48,921 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:48,923 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:35:48,936 6771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:35:48,936 6771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:35:48,936 6771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:35:48,936 6771 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:35:48,937 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:48,937 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:48,938 6773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:35:49,042 6877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:49,047 6882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:49,047 6882 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:49,047 6882 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-17 16:35:49,047 6882 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:49,048 6883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:49,055 6890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-17 16:35:49,066 6901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-17 16:35:49,066 6901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-17 16:35:49,066 6901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:35:49,066 6901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-17 16:35:49,066 6901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:49,067 6902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:49,068 6903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:54,130 2341 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:35:54,143 2354 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:35:54,148 2359 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:35:54,149 2360 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:35:54,716 2927 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:35:54,717 2928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:35:54,717 2928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:35:54,717 2928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63724
2014-09-17 16:35:54,717 2928 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63724
2014-09-17 16:35:54,717 2928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:35:54,717 2928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24780
2014-09-17 16:35:54,718 2929 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24780
2014-09-17 16:35:54,718 2929 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63724 using key 2c6659113382d846
2014-09-17 16:35:54,719 2930 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:35:54,720 2931 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:35:54,928 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-17 16:35:55,004 3215 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:35:55,004 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,004 3215 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-17 16:35:55,004 3215 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-17 16:35:55,021 3232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,022 3233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,025 3236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-17 16:35:55,027 3238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,027 3238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,027 3238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,028 3239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-17 16:35:55,029 3240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,029 3240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,030 3241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,030 3241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-17 16:35:55,031 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,031 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,032 3243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,032 3243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-17 16:35:55,034 3245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,034 3245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,035 3246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,036 3247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-17 16:35:55,037 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,037 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,037 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,038 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-17 16:35:55,038 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,039 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,039 3250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,040 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-17 16:35:55,040 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,041 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,041 3252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,042 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-17 16:35:55,042 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,042 3253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,043 3254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,044 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-17 16:35:55,044 3255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,045 3256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,045 3256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,046 3257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-17 16:35:55,047 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,047 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,047 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,048 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-17 16:35:55,048 3259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,049 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,049 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,050 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-17 16:35:55,050 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,050 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,051 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,051 3262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-17 16:35:55,052 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:55,052 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,052 3263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,071 3282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:35:55,118 3329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:55,122 3333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,123 3334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,135 3346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:35:55,149 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:35:55,149 3360 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:35:55,149 3360 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:35:55,149 3360 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:35:55,150 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,151 3362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,163 3374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:35:55,198 3409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:55,198 3409 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,198 3409 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:55,199 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:55,200 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,200 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,200 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:35:55,200 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:35:55,200 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:35:55,221 3432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,221 3432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,237 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-17 16:35:55,251 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-17 16:35:55,251 3462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-17 16:35:55,251 3462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:35:55,251 3462 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-17 16:35:55,252 3463 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-17 16:35:55,252 3463 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-17 16:35:55,252 3463 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-17 16:35:55,252 3463 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:55,255 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:55,256 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:55,307 3518 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:35:55,313 3524 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:35:55,314 3525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:35:55,314 3525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:35:55,989 4200 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:35:55,989 4200 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:35:55,990 4201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:35:55,990 4201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63726
2014-09-17 16:35:55,990 4201 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63726
2014-09-17 16:35:55,990 4201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:35:55,990 4201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24784
2014-09-17 16:35:55,991 4202 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24784
2014-09-17 16:35:55,991 4202 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63726 using key 2c6659113382d846
2014-09-17 16:35:55,991 4202 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:35:55,992 4203 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:35:56,003 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-17 16:35:56,095 4306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:35:56,095 4306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:35:56,095 4306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-17 16:35:56,096 4307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:56,097 4308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:56,098 4309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:35:56,112 4323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:56,114 4325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:56,115 4326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:56,117 4328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:35:56,129 4340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:35:56,129 4340 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:35:56,130 4341 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:35:56,130 4341 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:35:56,131 4342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:56,131 4342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:56,132 4343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:35:56,219 4430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:35:56,219 4430 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:56,220 4431 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-17 16:35:56,220 4431 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:56,222 4433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:56,223 4434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:35:56,229 4440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-17 16:35:56,241 4452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-17 16:35:56,241 4452 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-17 16:35:56,242 4453 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:35:56,242 4453 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-17 16:35:56,242 4453 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:35:56,242 4453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:35:56,243 4454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:05,115 2257 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:36:05,128 2270 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:36:05,132 2274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:36:05,132 2274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:36:05,719 2861 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:36:05,719 2861 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:36:05,719 2861 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:36:05,720 2862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63731
2014-09-17 16:36:05,720 2862 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63731
2014-09-17 16:36:05,720 2862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:36:05,720 2862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24789
2014-09-17 16:36:05,720 2862 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24789
2014-09-17 16:36:05,721 2863 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63731 using key b98162a0e332b63c
2014-09-17 16:36:05,722 2864 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:36:05,723 2865 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:36:05,938 3080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-17 16:36:06,038 3180 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:36:06,038 3180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,038 3180 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-17 16:36:06,039 3181 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-17 16:36:06,057 3199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,059 3201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,061 3203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-17 16:36:06,063 3205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,063 3205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,064 3206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,064 3206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-17 16:36:06,065 3207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,065 3207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,066 3208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,066 3208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-17 16:36:06,067 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,067 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,067 3209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,068 3210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-17 16:36:06,069 3211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,070 3212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,070 3212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,071 3213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-17 16:36:06,071 3213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,072 3214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,072 3214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,073 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-17 16:36:06,073 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,073 3215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,074 3216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,074 3216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-17 16:36:06,075 3217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,075 3217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,075 3217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,076 3218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-17 16:36:06,077 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,077 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,077 3219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,078 3220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-17 16:36:06,078 3220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,078 3220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,079 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,079 3221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-17 16:36:06,080 3222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,080 3222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,081 3223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,081 3223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-17 16:36:06,082 3224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,082 3224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,082 3224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,083 3225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-17 16:36:06,084 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,084 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,084 3226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,085 3227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-17 16:36:06,085 3227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:06,086 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,086 3228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,100 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:36:06,149 3291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:36:06,152 3294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,153 3295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,161 3303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:36:06,172 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:36:06,173 3315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:36:06,173 3315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:36:06,173 3315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:36:06,174 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,174 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,191 3333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:36:06,235 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:36:06,235 3377 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,236 3378 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:36:06,237 3379 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:36:06,261 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,261 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,275 3417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-17 16:36:06,293 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-17 16:36:06,293 3435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-17 16:36:06,293 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:36:06,293 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-17 16:36:06,293 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-17 16:36:06,294 3436 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-17 16:36:06,294 3436 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-17 16:36:06,294 3436 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:36:06,296 3438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:06,297 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:06,340 3482 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:36:06,346 3488 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:36:06,347 3489 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:36:06,347 3489 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:36:07,017 4159 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:36:07,018 4160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:36:07,018 4160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:36:07,018 4160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63733
2014-09-17 16:36:07,018 4160 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63733
2014-09-17 16:36:07,018 4160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:36:07,018 4160 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24793
2014-09-17 16:36:07,019 4161 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24793
2014-09-17 16:36:07,019 4161 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63733 using key b98162a0e332b63c
2014-09-17 16:36:07,019 4161 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:36:07,020 4162 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:36:07,031 4173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-17 16:36:07,117 4259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:36:07,117 4259 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:36:07,118 4260 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-17 16:36:07,118 4260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:07,119 4261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:07,120 4262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:36:07,135 4277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:36:07,138 4280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:07,139 4281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:07,140 4282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:36:07,153 4295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:36:07,153 4295 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:36:07,153 4295 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:36:07,153 4295 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:36:07,154 4296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:07,155 4297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:07,155 4297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:36:07,251 4393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:36:07,251 4393 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:36:07,251 4393 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-17 16:36:07,252 4394 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:36:07,254 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:07,255 4397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:07,261 4403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-17 16:36:07,273 4415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-17 16:36:07,275 4417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:36:07,275 4417 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-17 16:36:07,275 4417 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:36:07,275 4417 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-17 16:36:07,276 4418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:36:07,276 4418 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:38:13,555 2740 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:38:13,567 2752 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:38:13,570 2755 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:38:13,570 2755 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:38:14,255 3440 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:38:14,256 3441 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:38:14,256 3441 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:38:14,257 3442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63793
2014-09-17 16:38:14,257 3442 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63793
2014-09-17 16:38:14,257 3442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:38:14,257 3442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 24997
2014-09-17 16:38:14,258 3443 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 24997
2014-09-17 16:38:14,259 3444 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63793 using key 5c4bf5c530cab78d
2014-09-17 16:38:14,259 3444 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:38:14,260 3445 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:38:14,495 3680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-17 16:38:14,620 3805 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:38:14,620 3805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,620 3805 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-17 16:38:14,620 3805 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-17 16:38:14,636 3821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,637 3822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,640 3825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-17 16:38:14,641 3826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,642 3827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,642 3827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,643 3828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-17 16:38:14,643 3828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,643 3828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,644 3829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,644 3829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-17 16:38:14,645 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,645 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,645 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,646 3831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-17 16:38:14,647 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,647 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,648 3833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,648 3833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-17 16:38:14,649 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,649 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,650 3835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,650 3835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-17 16:38:14,651 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,651 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,651 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,652 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-17 16:38:14,652 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,653 3838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,653 3838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,654 3839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-17 16:38:14,654 3839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,655 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,655 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,656 3841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-17 16:38:14,656 3841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,656 3841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,657 3842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,657 3842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-17 16:38:14,658 3843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,658 3843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,659 3844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,659 3844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-17 16:38:14,660 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,660 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,661 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,661 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-17 16:38:14,662 3847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,662 3847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,662 3847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,663 3848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-17 16:38:14,664 3849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:14,664 3849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,664 3849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,681 3866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:38:14,729 3914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:38:14,733 3918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,733 3918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,745 3930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:38:14,757 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:38:14,758 3943 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:38:14,758 3943 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:38:14,758 3943 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:38:14,759 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,759 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,777 3962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:38:14,832 4017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:38:14,832 4017 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,833 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-17 16:38:14,834 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-17 16:38:14,854 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,855 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,869 4054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-17 16:38:14,888 4073 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-17 16:38:14,888 4073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-17 16:38:14,888 4073 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:38:14,889 4074 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-17 16:38:14,889 4074 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-17 16:38:14,889 4074 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-17 16:38:14,889 4074 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-17 16:38:14,889 4074 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:38:14,892 4077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:14,892 4077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:14,930 4115 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-17 16:38:14,935 4120 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-17 16:38:14,936 4121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-17 16:38:14,936 4121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-17 16:38:15,646 4831 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-17 16:38:15,646 4831 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-17 16:38:15,647 4832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-17 16:38:15,647 4832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63795
2014-09-17 16:38:15,647 4832 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63795
2014-09-17 16:38:15,647 4832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-17 16:38:15,647 4832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 25001
2014-09-17 16:38:15,648 4833 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 25001
2014-09-17 16:38:15,648 4833 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63795 using key 5c4bf5c530cab78d
2014-09-17 16:38:15,648 4833 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-17 16:38:15,649 4834 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-17 16:38:15,667 4852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-17 16:38:15,756 4941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-17 16:38:15,756 4941 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-17 16:38:15,756 4941 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-17 16:38:15,757 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:15,757 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:15,758 4943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-17 16:38:15,773 4958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:38:15,775 4960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:15,775 4960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:15,777 4962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-17 16:38:15,796 4981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-17 16:38:15,796 4981 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-17 16:38:15,796 4981 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-17 16:38:15,796 4981 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-17 16:38:15,797 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:15,797 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:15,798 4983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-17 16:38:15,883 5068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-17 16:38:15,883 5068 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:38:15,884 5069 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-17 16:38:15,884 5069 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:38:15,886 5071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:15,886 5071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-17 16:38:15,892 5077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-17 16:38:15,905 5090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-17 16:38:15,905 5090 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-17 16:38:15,906 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-17 16:38:15,906 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-17 16:38:15,906 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-17 16:38:15,907 5092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-17 16:38:15,907 5092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
