2014-10-06 12:46:09,032 3287 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:46:09,046 3301 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:46:09,050 3305 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:46:09,050 3305 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:46:09,615 3870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:46:09,615 3870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:46:09,615 3870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:46:09,615 3870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60963
2014-10-06 12:46:09,615 3870 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60963
2014-10-06 12:46:09,616 3871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:46:09,616 3871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5283
2014-10-06 12:46:09,616 3871 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5283
2014-10-06 12:46:09,617 3872 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60963 using key 2447a31069d041bc
2014-10-06 12:46:09,617 3872 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:46:09,618 3873 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:46:09,786 4041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - list_current_eclipse_preferences(Preferences),true.

2014-10-06 12:46:09,807 4062 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:46:09,807 4062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Preferences','.'(preference('MAXINT',3),'.'(preference('MININT',-1),'.'(preference('DEFAULT_SETSIZE',2),'.'(preference('MAX_INITIALISATIONS',4),'.'(preference('MAX_OPERATIONS',10),'.'(preference('SYMBOLIC',false),'.'(preference('CLPFD',true),'.'(preference('CHR',false),'.'(preference('SMT',false),'.'(preference('CSE',false),'.'(preference('CSE_PRED',true),'.'(preference('CSE_WD_ONLY',false),'.'(preference('STATIC_ORDERING',false),'.'(preference('COMPRESSION',false),'.'(preference('SYMMETRY_MODE',off),'.'(preference('TIME_OUT',2500),'.'(preference('PROOF_INFO',true),'.'(preference('TRY_FIND_ABORT',false),'.'(preference('NUMBER_OF_ANIMATED_ABSTRACTIONS',20),'.'(preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),'.'(preference('USE_RECORD_CONSTRUCTION',true),'.'(preference('KODKOD',false),'.'(preference('KODKOD_ONLY_FULL',true),'.'(preference('MEMO',false),[]))))))))))))))))))))))))),[]))
2014-10-06 12:46:09,850 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,851 4106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,880 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 12:46:09,952 4207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,952 4207 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 12:46:09,954 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,954 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,955 4210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 12:46:09,957 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,957 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,957 4212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,958 4213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 12:46:09,959 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,959 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,959 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,960 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 12:46:09,960 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,960 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,961 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,961 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 12:46:09,962 4217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,963 4218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,963 4218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,964 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 12:46:09,964 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,965 4220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,965 4220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,966 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 12:46:09,966 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,966 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,967 4222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,967 4222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 12:46:09,968 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,968 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,968 4223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,969 4224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 12:46:09,969 4224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,970 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,970 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,970 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 12:46:09,971 4226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,971 4226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,972 4227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,972 4227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 12:46:09,973 4228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,973 4228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,973 4228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,974 4229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 12:46:09,974 4229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,975 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,975 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,976 4231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 12:46:09,976 4231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,977 4232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,977 4232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,978 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 12:46:09,978 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:46:09,978 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:09,979 4234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:09,993 4248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:46:10,034 4289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:46:10,037 4292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:10,037 4292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:10,050 4305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - find_state_for_predicate(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),R),true.

2014-10-06 12:46:10,117 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('R',state_found(op(1,root,0),0)),[]))
2014-10-06 12:46:10,118 4373 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - # /* LET */ (active).( (active)={} & card(active) <= 1 & #(ready,waiting,rr).((ready : POW(PID) & waiting : POW(PID)) & (((ready /\ waiting = {} & active /\ (ready \/ waiting) = {}) & (active = {} => ready = {})) & rr : waiting)))
2014-10-06 12:46:10,119 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:10,119 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:10,120 4375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - find_trace_to_node(0,Trace),true.

2014-10-06 12:46:10,122 4377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Trace','.'(op(0,root,0),[])),[]))
2014-10-06 12:46:10,122 4377 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 12:46:10,122 4377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:10,123 4378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:10,143 4398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - state_property(initialised,0,PropResult),true.

2014-10-06 12:46:10,144 4399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('PropResult',true),[]))
2014-10-06 12:46:10,145 4400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:10,145 4400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:46:10,148 4403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 12:46:10,161 4416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 12:46:10,170 4425 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 12:46:10,171 4426 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 12:46:10,213 4468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:46:10,214 4469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:49:57,131 2560 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:49:57,143 2572 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:49:57,147 2576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:49:57,147 2576 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:49:57,727 3156 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:49:57,727 3156 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:49:57,727 3156 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:49:57,727 3156 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60968
2014-10-06 12:49:57,727 3156 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60968
2014-10-06 12:49:57,728 3157 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:49:57,728 3157 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5304
2014-10-06 12:49:57,728 3157 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5304
2014-10-06 12:49:57,729 3158 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60968 using key 712b98cb856534e7
2014-10-06 12:49:57,730 3159 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:49:57,731 3160 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:49:58,166 3595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 12:49:58,251 3680 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:49:58,251 3680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:49:58,252 3681 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 12:49:58,266 3695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:49:58,267 3696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:49:58,270 3699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 12:49:58,272 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:49:58,273 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:49:58,273 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:49:58,274 3703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 12:49:58,275 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:49:58,275 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:49:58,276 3705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:49:58,277 3706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 12:49:58,277 3706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:49:58,277 3706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:49:58,278 3707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:49:58,295 3724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:49:58,343 3772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:49:58,347 3776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:49:58,347 3776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:46,613 2222 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:50:46,624 2233 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:50:46,627 2236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:50:46,628 2237 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:50:47,213 2822 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:50:47,213 2822 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:50:47,213 2822 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:50:47,213 2822 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60971
2014-10-06 12:50:47,214 2823 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60971
2014-10-06 12:50:47,214 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:50:47,214 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5311
2014-10-06 12:50:47,214 2823 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5311
2014-10-06 12:50:47,215 2824 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60971 using key f2fea45de9d0da0a
2014-10-06 12:50:47,215 2824 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:50:47,218 2827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:50:47,649 3258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 12:50:47,732 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:50:47,732 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:50:47,732 3341 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 12:50:47,747 3356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,748 3357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,750 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 12:50:47,751 3360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:50:47,752 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,752 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,753 3362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 12:50:47,754 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:50:47,754 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,754 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,755 3364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 12:50:47,756 3365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:50:47,756 3365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,757 3366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,771 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:50:47,824 3433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:50:47,828 3437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,829 3438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,841 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 12:50:47,860 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 12:50:47,860 3469 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 12:50:47,860 3469 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 12:50:47,860 3469 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 12:50:47,861 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,862 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,876 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 12:50:47,955 3564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:50:47,955 3564 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 12:50:47,956 3565 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 12:50:47,956 3565 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 12:50:47,956 3565 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 12:50:47,976 3585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:47,976 3585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:50:47,999 3608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 12:50:48,050 3659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 12:50:48,050 3659 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-10-06 12:50:48,050 3659 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 12:50:48,050 3659 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 12:50:48,051 3660 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 12:50:48,051 3660 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 12:50:48,051 3660 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 12:50:48,053 3662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:50:48,053 3662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:40,671 2619 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:52:40,681 2629 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:52:40,685 2633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:52:40,685 2633 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:52:41,291 3239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:52:41,291 3239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:52:41,291 3239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:52:41,291 3239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60987
2014-10-06 12:52:41,291 3239 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60987
2014-10-06 12:52:41,292 3240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:52:41,292 3240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5320
2014-10-06 12:52:41,292 3240 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5320
2014-10-06 12:52:41,293 3241 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60987 using key e7ff53eeb2f512fa
2014-10-06 12:52:41,294 3242 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:52:41,295 3243 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:52:41,749 3697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 12:52:41,826 3774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:52:41,826 3774 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:52:41,826 3774 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 12:52:41,840 3788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,841 3789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,844 3792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 12:52:41,845 3793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:52:41,846 3794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,846 3794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,847 3795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 12:52:41,848 3796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:52:41,848 3796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,849 3797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,850 3798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 12:52:41,850 3798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:52:41,850 3798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,851 3799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,867 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:52:41,925 3873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:52:41,929 3877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,929 3877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,942 3890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 12:52:41,962 3910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 12:52:41,962 3910 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 12:52:41,963 3911 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 12:52:41,963 3911 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 12:52:41,963 3911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:41,964 3912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:41,979 3927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 12:52:42,038 3986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:52:42,038 3986 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 12:52:42,038 3986 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 12:52:42,038 3986 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 12:52:42,038 3986 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 12:52:42,060 4008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:52:42,061 4009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:52:42,084 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 12:53:08,086 2265 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:53:08,098 2277 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:53:08,102 2281 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:53:08,102 2281 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:53:08,698 2877 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:53:08,699 2878 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:53:08,699 2878 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:53:08,699 2878 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60990
2014-10-06 12:53:08,699 2878 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60990
2014-10-06 12:53:08,699 2878 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:53:08,699 2878 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5327
2014-10-06 12:53:08,699 2878 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5327
2014-10-06 12:53:08,700 2879 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60990 using key 393182f03d2e890f
2014-10-06 12:53:08,701 2880 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:53:08,702 2881 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:53:09,142 3321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 12:53:09,222 3401 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:53:09,222 3401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:09,222 3401 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 12:53:09,236 3415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,237 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,239 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 12:53:09,241 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:09,241 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,242 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,242 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 12:53:09,244 3423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:09,244 3423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,245 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,246 3425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 12:53:09,247 3426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:09,247 3426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,248 3427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,262 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:53:09,313 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:53:09,317 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,318 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,329 3508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 12:53:09,349 3528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 12:53:09,349 3528 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 12:53:09,349 3528 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 12:53:09,349 3528 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 12:53:09,350 3529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,351 3530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,368 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 12:53:09,447 3626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:53:09,447 3626 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 12:53:09,447 3626 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 12:53:09,447 3626 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 12:53:09,447 3626 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 12:53:09,467 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,468 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:09,492 3671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 12:53:09,539 3718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 12:53:09,539 3718 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-10-06 12:53:09,540 3719 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 12:53:09,540 3719 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 12:53:09,540 3719 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 12:53:09,540 3719 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 12:53:09,540 3719 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 12:53:09,542 3721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:09,542 3721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:38,436 2207 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 12:53:38,446 2217 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 12:53:38,450 2221 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 12:53:38,450 2221 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 12:53:39,023 2794 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 12:53:39,023 2794 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 12:53:39,024 2795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 12:53:39,024 2795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 60993
2014-10-06 12:53:39,024 2795 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 60993
2014-10-06 12:53:39,024 2795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 12:53:39,024 2795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5333
2014-10-06 12:53:39,025 2796 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5333
2014-10-06 12:53:39,026 2797 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 60993 using key b46f43a309c2e85c
2014-10-06 12:53:39,026 2797 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 12:53:39,027 2798 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 12:53:39,470 3241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 12:53:39,549 3320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 12:53:39,549 3320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:39,549 3320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 12:53:39,564 3335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,565 3336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,567 3338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 12:53:39,568 3339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:39,569 3340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,569 3340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,570 3341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 12:53:39,571 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:39,571 3342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,572 3343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,573 3344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 12:53:39,574 3345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 12:53:39,574 3345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,574 3345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,590 3361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 12:53:39,645 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:53:39,648 3419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,648 3419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,657 3428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 12:53:39,676 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 12:53:39,677 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,678 3449 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 12:53:39,678 3449 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 12:53:39,678 3449 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 12:53:39,679 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,691 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 12:53:39,767 3538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 12:53:39,768 3539 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 12:53:39,768 3539 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 12:53:39,768 3539 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 12:53:39,768 3539 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 12:53:39,788 3559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 12:53:39,788 3559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 12:53:39,816 3587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:08:08,060 2528 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:08:08,070 2538 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:08:08,074 2542 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:08:08,074 2542 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:08:08,666 3134 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:08:08,667 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:08:08,667 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:08:08,667 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61036
2014-10-06 13:08:08,667 3135 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61036
2014-10-06 13:08:08,667 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:08:08,667 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5373
2014-10-06 13:08:08,667 3135 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5373
2014-10-06 13:08:08,668 3136 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61036 using key 8330847ba434ecc
2014-10-06 13:08:08,669 3137 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:08:08,670 3138 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:08:09,126 3594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:08:09,202 3670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:08:09,202 3670 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:08:09,203 3671 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:08:09,217 3685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,218 3686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,220 3688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:08:09,222 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:08:09,222 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,223 3691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,223 3691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:08:09,224 3692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:08:09,225 3693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,225 3693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,227 3695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:08:09,227 3695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:08:09,228 3696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,228 3696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,242 3710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:08:09,299 3767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:08:09,304 3772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,305 3773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,316 3784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:08:09,335 3803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:08:09,336 3804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,336 3804 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:08:09,336 3804 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:08:09,337 3805 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:08:09,337 3805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,350 3818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:08:09,405 3873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:08:09,405 3873 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:08:09,406 3874 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:08:09,406 3874 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:08:09,406 3874 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:08:09,430 3898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,431 3899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:08:09,456 3924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:08:09,506 3974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 13:08:09,506 3974 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-10-06 13:08:09,506 3974 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 13:08:09,506 3974 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 13:08:09,507 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 13:08:09,507 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 13:08:09,507 3975 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 13:08:09,509 3977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:08:09,509 3977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:32,041 2262 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:09:32,055 2276 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:09:32,059 2280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:09:32,059 2280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:09:32,647 2868 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:09:32,648 2869 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:09:32,648 2869 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:09:32,648 2869 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61052
2014-10-06 13:09:32,648 2869 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61052
2014-10-06 13:09:32,648 2869 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:09:32,649 2870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5381
2014-10-06 13:09:32,649 2870 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5381
2014-10-06 13:09:32,650 2871 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61052 using key 5aaf9460176dfe89
2014-10-06 13:09:32,651 2872 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:09:32,652 2873 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:09:33,090 3311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:09:33,176 3397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:09:33,176 3397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:09:33,176 3397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:09:33,193 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,193 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,195 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:09:33,197 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:09:33,197 3418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,198 3419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,199 3420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:09:33,200 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:09:33,200 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,201 3422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,202 3423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:09:33,203 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:09:33,203 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,203 3424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,219 3440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:09:33,269 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:09:33,272 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,272 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,280 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:09:33,292 3513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:09:33,292 3513 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:09:33,292 3513 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:09:33,292 3513 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:09:33,293 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,293 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,306 3527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:09:33,377 3598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:09:33,377 3598 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:09:33,377 3598 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:09:33,377 3598 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:09:33,377 3598 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:09:33,399 3620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:09:33,399 3620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:09:33,423 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:10:55,010 2928 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:10:55,023 2941 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:10:55,027 2945 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:10:55,027 2945 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:10:55,621 3539 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:10:55,622 3540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:10:55,622 3540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:10:55,622 3540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61055
2014-10-06 13:10:55,622 3540 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61055
2014-10-06 13:10:55,622 3540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:10:55,622 3540 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5389
2014-10-06 13:10:55,623 3541 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5389
2014-10-06 13:10:55,624 3542 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61055 using key 3a2cfbc0a11bed35
2014-10-06 13:10:55,624 3542 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:10:55,625 3543 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:10:56,070 3988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:10:56,153 4071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:10:56,153 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:10:56,153 4071 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:10:56,167 4085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,168 4086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,171 4089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:10:56,172 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:10:56,172 4090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,173 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,174 4092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:10:56,175 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:10:56,175 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,175 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,176 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:10:56,177 4095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:10:56,177 4095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,178 4096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,195 4113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:10:56,252 4170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:10:56,256 4174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,257 4175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,269 4187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:10:56,287 4205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:10:56,287 4205 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:10:56,288 4206 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:10:56,288 4206 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:10:56,288 4206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,289 4207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,300 4218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:10:56,356 4274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:10:56,356 4274 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:10:56,356 4274 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:10:56,356 4274 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:10:56,357 4275 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:10:56,375 4293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,376 4294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:10:56,399 4317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:10:56,451 4369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 13:10:56,451 4369 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-10-06 13:10:56,451 4369 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 13:10:56,451 4369 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 13:10:56,451 4369 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 13:10:56,452 4370 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 13:10:56,452 4370 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 13:10:56,454 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:10:56,454 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:37,354 2204 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:11:37,364 2214 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:11:37,369 2219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:11:37,369 2219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:11:37,978 2828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:11:37,978 2828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:11:37,978 2828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:11:37,978 2828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61061
2014-10-06 13:11:37,979 2829 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61061
2014-10-06 13:11:37,979 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:11:37,979 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5400
2014-10-06 13:11:37,979 2829 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5400
2014-10-06 13:11:37,980 2830 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61061 using key 9d6a16acda08ca8a
2014-10-06 13:11:37,980 2830 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:11:37,982 2832 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:11:38,420 3270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:11:38,504 3354 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:11:38,504 3354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:11:38,504 3354 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:11:38,518 3368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,519 3369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,521 3371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:11:38,523 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:11:38,523 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,523 3373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,524 3374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:11:38,525 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:11:38,525 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,526 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,527 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:11:38,527 3377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:11:38,528 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,528 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,543 3393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:11:38,599 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:11:38,604 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,604 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,613 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:11:38,625 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:11:38,625 3475 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:11:38,625 3475 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:11:38,625 3475 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:11:38,626 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,626 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,637 3487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:11:38,705 3555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:11:38,705 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:11:38,705 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:11:38,705 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:11:38,705 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:11:38,730 3580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:11:38,731 3581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:11:38,759 3609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn > min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:14:33,275 2480 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:14:33,287 2492 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:14:33,291 2496 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:14:33,291 2496 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:14:33,869 3074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:14:33,870 3075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:14:33,870 3075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:14:33,870 3075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61067
2014-10-06 13:14:33,870 3075 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61067
2014-10-06 13:14:33,870 3075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:14:33,870 3075 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5409
2014-10-06 13:14:33,871 3076 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5409
2014-10-06 13:14:33,872 3077 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61067 using key c4834241682bacb1
2014-10-06 13:14:33,872 3077 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:14:33,873 3078 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:14:34,313 3518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:14:34,398 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:14:34,398 3603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:14:34,398 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:14:34,413 3618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,414 3619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,416 3621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:14:34,417 3622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:14:34,418 3623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,418 3623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,419 3624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:14:34,420 3625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:14:34,420 3625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,421 3626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,422 3627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:14:34,423 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:14:34,423 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,423 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,437 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:14:34,481 3686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:14:34,485 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,486 3691 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,498 3703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:14:34,518 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:14:34,519 3724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,519 3724 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:14:34,520 3725 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:14:34,520 3725 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:14:34,520 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,536 3741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:14:34,609 3814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:14:34,609 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:14:34,609 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:14:34,609 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:14:34,609 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:14:34,629 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:14:34,629 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:14:34,650 3855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))))'),ARes),true.

2014-10-06 13:14:34,693 3898 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 13:14:34,693 3898 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 13:14:34,693 3898 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 13:14:34,693 3898 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 13:14:34,694 3899 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 13:14:34,694 3899 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 13:17:41,825 3087 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:17:41,838 3100 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:17:41,842 3104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:17:41,842 3104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:17:42,427 3689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:17:42,427 3689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:17:42,427 3689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:17:42,427 3689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61084
2014-10-06 13:17:42,427 3689 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61084
2014-10-06 13:17:42,428 3690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:17:42,428 3690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5419
2014-10-06 13:17:42,428 3690 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5419
2014-10-06 13:17:42,429 3691 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61084 using key 6e4c443de7de09a5
2014-10-06 13:17:42,430 3692 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:17:42,431 3693 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:17:42,871 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:17:42,956 4218 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:17:42,956 4218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:17:42,956 4218 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:17:42,971 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:42,972 4234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:42,974 4236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:17:42,976 4238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:17:42,976 4238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:42,976 4238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:42,977 4239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:17:42,978 4240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:17:42,979 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:42,979 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:42,980 4242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:17:42,981 4243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:17:42,982 4244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:42,982 4244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:42,999 4261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:17:43,055 4317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:17:43,059 4321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:43,060 4322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:43,073 4335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:17:43,091 4353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:17:43,091 4353 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:17:43,092 4354 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:17:43,092 4354 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:17:43,093 4355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:43,093 4355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:43,109 4371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:17:43,184 4446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:17:43,184 4446 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:17:43,184 4446 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:17:43,184 4446 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:17:43,184 4446 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:17:43,209 4471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:43,209 4471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:17:43,229 4491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),implication(none,not_equal(none,identifier(none,queue),empty_sequence(none)),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] => not(nn <= min(ran(queue)))))'),ARes),true.

2014-10-06 13:17:43,266 4528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] => not(nn <= min(ran(queue)))))')),[]))
2014-10-06 13:17:43,266 4528 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 13:17:43,266 4528 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 13:17:43,267 4529 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 13:17:43,267 4529 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 13:17:43,267 4529 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 13:17:43,268 4530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:17:43,268 4530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:49,543 2255 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:18:49,556 2268 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:18:49,560 2272 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:18:49,560 2272 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:18:50,158 2870 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:18:50,159 2871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:18:50,159 2871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:18:50,159 2871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61087
2014-10-06 13:18:50,159 2871 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61087
2014-10-06 13:18:50,160 2872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:18:50,160 2872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5425
2014-10-06 13:18:50,160 2872 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5425
2014-10-06 13:18:50,161 2873 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61087 using key fd5888b9006fc3cc
2014-10-06 13:18:50,162 2874 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:18:50,163 2875 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:18:50,601 3313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:18:50,676 3388 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:18:50,676 3388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:18:50,677 3389 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:18:50,692 3404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,693 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,696 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:18:50,698 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:18:50,698 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,699 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,700 3412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:18:50,701 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:18:50,701 3413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,702 3414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,703 3415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:18:50,703 3415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:18:50,704 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,704 3416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,720 3432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:18:50,772 3484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:18:50,777 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,777 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,789 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:18:50,808 3520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:18:50,808 3520 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:18:50,808 3520 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:18:50,808 3520 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:18:50,809 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,810 3522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,825 3537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:18:50,890 3602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:18:50,890 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:18:50,891 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:18:50,891 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:18:50,891 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:18:50,909 3621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:18:50,910 3622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:18:50,935 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),implication(none,not_equal(none,identifier(none,queue),empty_sequence(none)),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] => not(nn <= min(ran(queue)))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:19:03,154 2219 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:19:03,166 2231 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:19:03,171 2236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:19:03,171 2236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:19:03,757 2822 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:19:03,758 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:19:03,758 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:19:03,758 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61090
2014-10-06 13:19:03,758 2823 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61090
2014-10-06 13:19:03,759 2824 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:19:03,759 2824 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5430
2014-10-06 13:19:03,759 2824 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5430
2014-10-06 13:19:03,760 2825 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61090 using key 291fc563ae54aabe
2014-10-06 13:19:03,761 2826 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:19:03,762 2827 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:19:04,205 3270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:19:04,294 3359 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:19:04,294 3359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:04,295 3360 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:19:04,310 3375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,311 3376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,313 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:19:04,315 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:04,315 3380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,316 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,316 3381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:19:04,318 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:04,318 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,318 3383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,320 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:19:04,320 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:04,321 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,321 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,335 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:19:04,386 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:19:04,390 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,391 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,400 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:19:04,419 3484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:19:04,419 3484 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:19:04,419 3484 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:19:04,419 3484 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:19:04,420 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,420 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,437 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:19:04,491 3556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:19:04,491 3556 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:19:04,492 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:19:04,492 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:19:04,492 3557 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:19:04,512 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:04,512 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:04,534 3599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),implication(none,not_equal(none,identifier(none,queue),empty_sequence(none)),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] => not(nn <= min(ran(queue)))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:19:47,623 2499 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:19:47,637 2513 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:19:47,641 2517 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:19:47,641 2517 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:19:48,226 3102 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:19:48,226 3102 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:19:48,226 3102 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:19:48,226 3102 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61095
2014-10-06 13:19:48,226 3102 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61095
2014-10-06 13:19:48,227 3103 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:19:48,227 3103 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5437
2014-10-06 13:19:48,227 3103 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5437
2014-10-06 13:19:48,228 3104 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61095 using key af6cd2d7667ca421
2014-10-06 13:19:48,229 3105 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:19:48,230 3106 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:19:48,671 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:19:48,748 3624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:48,748 3624 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:19:48,749 3625 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:19:48,763 3639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,764 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,766 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:19:48,768 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:48,768 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,768 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,769 3645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:19:48,770 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:48,771 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,771 3647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,772 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:19:48,773 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:19:48,773 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,773 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,790 3666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:19:48,849 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:19:48,853 3729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,854 3730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,866 3742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:19:48,887 3763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:19:48,889 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,889 3765 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:19:48,889 3765 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:19:48,889 3765 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:19:48,890 3766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:48,904 3780 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:19:48,964 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:19:48,964 3840 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:19:48,964 3840 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:19:48,964 3840 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:19:48,964 3840 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:19:48,983 3859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:19:48,984 3860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:19:49,009 3885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),implication(none,not_equal(none,identifier(none,queue),empty_sequence(none)),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] => not(nn <= min(ran(queue)))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:20:46,324 2709 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:20:46,337 2722 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:20:46,341 2726 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:20:46,341 2726 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:20:47,016 3401 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:20:47,016 3401 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:20:47,016 3401 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:20:47,016 3401 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61098
2014-10-06 13:20:47,017 3402 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61098
2014-10-06 13:20:47,017 3402 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:20:47,017 3402 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5446
2014-10-06 13:20:47,017 3402 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5446
2014-10-06 13:20:47,019 3404 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61098 using key cbdf5c684c2b7449
2014-10-06 13:20:47,019 3404 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:20:47,021 3406 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:20:47,567 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:20:47,669 4054 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:20:47,669 4054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:20:47,670 4055 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:20:47,686 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,687 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,690 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:20:47,692 4077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:20:47,693 4078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,693 4078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,694 4079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:20:47,695 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:20:47,695 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,696 4081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,697 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:20:47,697 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:20:47,698 4083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,698 4083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,718 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:20:47,779 4164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:20:47,783 4168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,784 4169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,796 4181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:20:47,816 4201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:20:47,817 4202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,818 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:20:47,818 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:20:47,818 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:20:47,818 4203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,834 4219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:20:47,923 4308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:20:47,923 4308 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:20:47,924 4309 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:20:47,924 4309 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:20:47,924 4309 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:20:47,952 4337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:20:47,952 4337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:20:47,980 4365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:25:50,029 2554 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:25:50,040 2565 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:25:50,043 2568 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:25:50,044 2569 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:25:50,654 3179 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:25:50,654 3179 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:25:50,654 3179 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:25:50,654 3179 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61114
2014-10-06 13:25:50,654 3179 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61114
2014-10-06 13:25:50,655 3180 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:25:50,655 3180 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5463
2014-10-06 13:25:50,655 3180 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5463
2014-10-06 13:25:50,656 3181 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61114 using key ad8fb4ccf80e2243
2014-10-06 13:25:50,656 3181 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:25:50,657 3182 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:25:51,072 3597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-10'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:25:51,162 3687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:25:51,162 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:25:51,162 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:25:51,176 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,177 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,180 3705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:25:51,181 3706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:25:51,182 3707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,182 3707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,183 3708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:25:51,184 3709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:25:51,184 3709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,184 3709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,185 3710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:25:51,186 3711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:25:51,186 3711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,187 3712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,200 3725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:25:51,252 3777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:25:51,256 3781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,257 3782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,269 3794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:25:51,288 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:25:51,288 3813 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:25:51,289 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:25:51,289 3814 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:25:51,290 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,290 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,305 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:25:51,368 3893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:25:51,368 3893 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:25:51,369 3894 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:25:51,369 3894 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:25:51,369 3894 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:25:51,396 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:25:51,397 3922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:25:51,423 3948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:43:19,698 2500 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/Downloads/ProB//probcli.sh
2014-10-06 13:43:19,711 2513 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 13:43:19,714 2516 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 13:43:19,715 2517 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 13:43:20,332 3134 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 13:43:20,333 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 13:43:20,333 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/Downloads/ProB
2014-10-06 13:43:20,333 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 61214
2014-10-06 13:43:20,333 3135 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 61214
2014-10-06 13:43:20,333 3135 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: 8c62ca4088963255f37475180c1ca7d354ced48a
2014-10-06 13:43:20,334 3136 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5526
2014-10-06 13:43:20,334 3136 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5526
2014-10-06 13:43:20,334 3136 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 61214 using key 9eba583c3ad6274
2014-10-06 13:43:20,335 3137 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 13:43:20,336 3138 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 13:43:20,756 3558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 13:43:20,833 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 13:43:20,833 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:43:20,833 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/Priorityqueue.mch])
2014-10-06 13:43:20,847 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,848 3650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,851 3653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 13:43:20,852 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:43:20,852 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,853 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,853 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 13:43:20,854 3656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:43:20,855 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,855 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,856 3658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 13:43:20,857 3659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 13:43:20,857 3659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,858 3660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,871 3673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 13:43:20,909 3711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:43:20,912 3714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,913 3715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,921 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 13:43:20,933 3735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 13:43:20,933 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 13:43:20,933 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 13:43:20,933 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 13:43:20,934 3736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:20,934 3736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:20,944 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 13:43:20,997 3799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 13:43:20,997 3799 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 13:43:20,998 3800 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 13:43:20,998 3800 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 13:43:20,998 3800 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 13:43:21,015 3817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:21,015 3817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 13:43:21,037 3839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 13:43:21,083 3885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(1),'1'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 1
2014-10-06 13:43:21,083 3885 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 13:43:21,085 3887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 13:43:21,086 3888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:05,255 3028 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:05,268 3041 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:05,272 3045 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:05,273 3046 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:05,938 3711 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:05,938 3711 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:05,938 3711 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:05,939 3712 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63045
2014-10-06 14:59:05,939 3712 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63045
2014-10-06 14:59:05,939 3712 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:05,939 3712 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5745
2014-10-06 14:59:05,939 3712 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5745
2014-10-06 14:59:05,940 3713 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63045 using key 13b7d74caacc10c8
2014-10-06 14:59:05,941 3714 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:05,942 3715 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:06,130 3903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:06,204 3977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:06,204 3977 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:06,204 3977 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:06,219 3992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,220 3993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,222 3995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:06,223 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:06,224 3997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,224 3997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,225 3998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:06,226 3999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:06,226 3999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,227 4000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,228 4001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:06,228 4001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:06,229 4002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,229 4002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,246 4019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:06,292 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:06,295 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,295 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,307 4080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:06,325 4098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:06,325 4098 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:06,325 4098 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:06,326 4099 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:06,326 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,327 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,343 4116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:06,428 4201 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,428 4201 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,428 4201 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:06,428 4201 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,429 4202 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:06,430 4203 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:06,431 4204 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:06,432 4205 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:06,441 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:06,441 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:06,441 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:06,441 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:06,441 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:06,489 4262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,490 4263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:06,508 4281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn >= max(ran(queue)))))'),ARes),true.

2014-10-06 14:59:06,547 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:06,547 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:06,547 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 14:59:06,547 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 14:59:06,548 4321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:06,548 4321 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 14:59:06,551 4324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),'.'(','(int(2),int(0)),'.'(','(int(3),int(1)),[]))),'{(1|->0),(2|->0),(3|->1)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn >= max(ran(queue)))))')),[]))
2014-10-06 14:59:06,551 4324 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:06,552 4325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 14:59:06,552 4325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:06,552 4325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0,0,1] &
2014-10-06 14:59:06,552 4325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:06,552 4325 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:06,554 4327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:06,554 4327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-10-06 14:59:06,555 4328 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 14:59:06,558 4331 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:06,566 4339 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:06,567 4340 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:06,567 4340 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:07,237 5010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:07,237 5010 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:07,238 5011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:07,238 5011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63047
2014-10-06 14:59:07,238 5011 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63047
2014-10-06 14:59:07,238 5011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:07,238 5011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5749
2014-10-06 14:59:07,238 5011 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5749
2014-10-06 14:59:07,238 5011 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63047 using key 13b7d74caacc10c8
2014-10-06 14:59:07,239 5012 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:07,240 5013 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:07,276 5049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:07,400 5173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:07,400 5173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,400 5173 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:07,401 5174 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:07,401 5174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,402 5175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:07,403 5176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:07,403 5176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,404 5177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,404 5177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:07,406 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:07,406 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,406 5179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,408 5181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:07,408 5181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:07,409 5182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,409 5182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,410 5183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:07,444 5217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:07,446 5219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,447 5220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,449 5222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:07,466 5239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:07,466 5239 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:07,466 5239 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:07,466 5239 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:07,467 5240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,467 5240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,468 5241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:07,529 5302 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,529 5302 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,529 5302 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:07,529 5302 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:07,530 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,531 5304 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,532 5305 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:07,533 5306 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:07,548 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:07,548 5321 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:07,549 5322 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:07,549 5322 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:07,549 5322 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:07,552 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,552 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,562 5335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,member(none,identifier(none,nn),nat_set(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))'),ARes),true.

2014-10-06 14:59:07,602 5375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(4),'4'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))')),[]))
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating nn (not critical [unless failure]) : INTEGER : 4:sup ---> 4:4
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 4
2014-10-06 14:59:07,602 5375 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:07,603 5376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:07,603 5376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:07,608 5381 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:07,613 5386 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:07,614 5387 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:07,614 5387 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:08,280 6053 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:08,280 6053 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:08,281 6054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:08,281 6054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63049
2014-10-06 14:59:08,281 6054 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63049
2014-10-06 14:59:08,281 6054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:08,281 6054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5753
2014-10-06 14:59:08,282 6055 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5753
2014-10-06 14:59:08,282 6055 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63049 using key 13b7d74caacc10c8
2014-10-06 14:59:08,282 6055 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:08,283 6056 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:08,306 6079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:08,386 6159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:08,387 6160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,387 6160 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:08,387 6160 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:08,388 6161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,389 6162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:08,391 6164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:08,392 6165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,392 6165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,393 6166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:08,394 6167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:08,395 6168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,395 6168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,396 6169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:08,402 6175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:08,402 6175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,403 6176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,404 6177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:08,437 6210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:08,438 6211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,439 6212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,440 6213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:08,451 6224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:08,451 6224 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:08,451 6224 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:08,451 6224 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:08,452 6225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,452 6225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,452 6225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:08,507 6280 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,507 6280 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,507 6280 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,507 6280 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,508 6281 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:08,509 6282 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:08,510 6283 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,511 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:08,528 6301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:08,529 6302 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:08,530 6303 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:08,530 6303 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:08,530 6303 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:08,531 6304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,532 6305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:08,539 6312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn <= min(ran(queue)))))'),ARes),true.

2014-10-06 14:59:08,572 6345 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,572 6345 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,572 6345 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 14:59:08,572 6345 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 14:59:08,572 6345 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,573 6346 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 14:59:08,588 6361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(1),'1'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn <= min(ran(queue)))))')),[]))
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 1
2014-10-06 14:59:08,589 6362 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:08,589 6362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:08,590 6363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;','.'('min applied to empty set;;',[]))),[]))
2014-10-06 14:59:08,590 6363 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 14:59:08,593 6366 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:08,597 6370 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:08,601 6374 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:08,604 6377 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 14:59:08,605 6378 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 14:59:08,605 6378 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:08,605 6378 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:08,605 6378 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 14:59:08,606 6379 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:08,607 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:08,607 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:09,204 6977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:09,204 6977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:09,204 6977 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:09,205 6978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63051
2014-10-06 14:59:09,205 6978 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63051
2014-10-06 14:59:09,205 6978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:09,205 6978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5757
2014-10-06 14:59:09,205 6978 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5757
2014-10-06 14:59:09,205 6978 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63051 using key 13b7d74caacc10c8
2014-10-06 14:59:09,206 6979 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:09,207 6980 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:09,233 7006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:09,312 7085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:09,312 7085 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:09,312 7085 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:09,313 7086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,313 7086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,314 7087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:09,315 7088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:09,316 7089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,316 7089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,317 7090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:09,318 7091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:09,318 7091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,319 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,320 7093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:09,320 7093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:09,320 7093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,321 7094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,321 7094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_24,formula_23],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:09,351 7124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:09,353 7126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,354 7127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,356 7129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:09,368 7141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:09,368 7141 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:09,368 7141 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:09,368 7141 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:09,368 7141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,369 7142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,369 7142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_24,formula_23],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:09,418 7191 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,418 7191 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,418 7191 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:09,418 7191 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,418 7191 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,419 7192 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,420 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,421 7194 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:09,421 7194 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:09,421 7194 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:09,421 7194 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:09,421 7194 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:09,428 7201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:09,428 7201 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:09,428 7201 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:09,428 7201 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:09,428 7201 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:09,430 7203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,431 7204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,438 7211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-10-06 14:59:09,457 7230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-10-06 14:59:09,457 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 14:59:09,458 7231 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:09,458 7231 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 14:59:09,458 7231 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:09,458 7231 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:09,459 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:09,459 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:09,462 7235 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:09,467 7240 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:09,468 7241 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:09,468 7241 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:10,047 7820 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:10,048 7821 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:10,048 7821 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:10,048 7821 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63053
2014-10-06 14:59:10,048 7821 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63053
2014-10-06 14:59:10,048 7821 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:10,048 7821 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5761
2014-10-06 14:59:10,048 7821 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5761
2014-10-06 14:59:10,049 7822 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63053 using key 13b7d74caacc10c8
2014-10-06 14:59:10,049 7822 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:10,050 7823 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:10,070 7843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:10,147 7920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,147 7920 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:10,148 7921 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:10,148 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,148 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,149 7922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:10,151 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,151 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,151 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,152 7925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:10,153 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,153 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,153 7926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,154 7927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:10,155 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,155 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,155 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,156 7929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_29,formula_31,formula_30],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:10,186 7959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:10,187 7960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,187 7960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,188 7961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:10,198 7971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:10,198 7971 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:10,199 7972 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:10,199 7972 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:10,199 7972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,199 7972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,200 7973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_29,formula_31,formula_30],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:10,252 8025 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,253 8026 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,254 8027 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:10,255 8028 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:10,260 8033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:10,260 8033 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:10,260 8033 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:10,260 8033 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:10,261 8034 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:10,262 8035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,263 8036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,267 8040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-10-06 14:59:10,271 8044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-10-06 14:59:10,271 8044 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 14:59:10,271 8044 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:10,271 8044 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 14:59:10,271 8044 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:10,271 8044 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:10,272 8045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,272 8045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,276 8049 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:10,280 8053 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:10,281 8054 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:10,282 8055 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:10,872 8645 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:10,872 8645 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:10,872 8645 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:10,872 8645 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63055
2014-10-06 14:59:10,873 8646 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63055
2014-10-06 14:59:10,873 8646 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:10,873 8646 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5765
2014-10-06 14:59:10,873 8646 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5765
2014-10-06 14:59:10,873 8646 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63055 using key 13b7d74caacc10c8
2014-10-06 14:59:10,874 8647 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:10,874 8647 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:10,890 8663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:10,968 8741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,968 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:10,968 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:10,968 8741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,969 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,970 8743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:10,971 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,972 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,972 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,972 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:10,974 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,974 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,974 8747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,975 8748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:10,976 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:10,976 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:10,976 8749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:10,977 8750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_36,formula_38,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:11,006 8779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:11,008 8781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,008 8781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,009 8782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:11,021 8794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:11,021 8794 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:11,021 8794 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:11,021 8794 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:11,021 8794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,022 8795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,022 8795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_36,formula_38,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,078 8851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,079 8852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,080 8853 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,084 8857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:11,084 8857 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:11,085 8858 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:11,085 8858 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:11,085 8858 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:11,088 8861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,088 8861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,093 8866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))'),ARes),true.

2014-10-06 14:59:11,118 8891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))')),[]))
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:11,118 8891 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:11,119 8892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,119 8892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-10-06 14:59:11,119 8892 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,121 8894 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 14:59:11,122 8895 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:11,127 8900 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:11,128 8901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:11,128 8901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:11,706 9479 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63057
2014-10-06 14:59:11,707 9480 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63057
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5769
2014-10-06 14:59:11,707 9480 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5769
2014-10-06 14:59:11,707 9480 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63057 using key 13b7d74caacc10c8
2014-10-06 14:59:11,708 9481 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:11,709 9482 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:11,724 9497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:11,795 9568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:11,795 9568 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:11,795 9568 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:11,795 9568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,796 9569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,796 9569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:11,798 9571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:11,798 9571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,798 9571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,799 9572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:11,800 9573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:11,800 9573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,801 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,801 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:11,802 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:11,802 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,803 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,803 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_43,formula_45,formula_44],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:11,833 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:11,834 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,834 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,835 9608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:11,845 9618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:11,845 9618 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:11,846 9619 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:11,846 9619 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:11,846 9619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,846 9619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,847 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_43,formula_45,formula_44],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:11,895 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,895 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,895 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,895 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,896 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:11,897 9670 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:11,898 9671 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:11,901 9674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:11,901 9674 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:11,901 9674 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:11,901 9674 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:11,901 9674 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:11,903 9676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,903 9676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:11,907 9680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))'),ARes),true.

2014-10-06 14:59:11,934 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))')),[]))
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:11,934 9707 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:11,935 9708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:11,935 9708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;',[])),[]))
2014-10-06 14:59:11,936 9709 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 14:59:11,937 9710 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:11,937 9710 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:11,937 9710 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 14:59:11,938 9711 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 14:59:11,938 9711 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:11,938 9711 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 14:59:11,939 9712 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:11,944 9717 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:11,945 9718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:11,945 9718 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:12,515 10288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:12,515 10288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:12,515 10288 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:12,516 10289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63059
2014-10-06 14:59:12,516 10289 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63059
2014-10-06 14:59:12,516 10289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:12,516 10289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5773
2014-10-06 14:59:12,516 10289 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5773
2014-10-06 14:59:12,516 10289 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63059 using key 13b7d74caacc10c8
2014-10-06 14:59:12,517 10290 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:12,518 10291 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:12,539 10312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:12,610 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:12,610 10383 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:12,610 10383 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:12,610 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,611 10384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,611 10384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:12,613 10386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:12,613 10386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,614 10387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,614 10387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:12,615 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:12,615 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,616 10389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,616 10389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:12,617 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:12,617 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,617 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,618 10391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_50,formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:12,648 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:12,649 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,649 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,651 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:12,661 10434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:12,661 10434 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:12,661 10434 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:12,661 10434 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:12,662 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,662 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,662 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_50,formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:12,711 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,711 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,711 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:12,711 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,711 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,712 10485 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:12,713 10486 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:12,717 10490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:12,717 10490 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:12,717 10490 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:12,717 10490 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:12,717 10490 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:12,719 10492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,720 10493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,724 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))'),ARes),true.

2014-10-06 14:59:12,745 10518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))')),[]))
2014-10-06 14:59:12,745 10518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:12,745 10518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 14:59:12,745 10518 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:12,746 10519 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 14:59:12,746 10519 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 14:59:12,746 10519 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:12,746 10519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:12,747 10520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:12,761 10534 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:12,767 10540 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:12,768 10541 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:12,769 10542 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:13,346 11119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:13,346 11119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:13,346 11119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:13,346 11119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63061
2014-10-06 14:59:13,346 11119 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63061
2014-10-06 14:59:13,346 11119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:13,347 11120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5777
2014-10-06 14:59:13,347 11120 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5777
2014-10-06 14:59:13,347 11120 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63061 using key 13b7d74caacc10c8
2014-10-06 14:59:13,347 11120 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:13,348 11121 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:13,362 11135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:13,438 11211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:13,438 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:13,439 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:13,439 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,439 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,440 11213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:13,441 11214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:13,441 11214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,442 11215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,442 11215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:13,443 11216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:13,443 11216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,444 11217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,444 11217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:13,445 11218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:13,445 11218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,446 11219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,446 11219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_59,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:13,477 11250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:13,478 11251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,479 11252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,480 11253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:13,491 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:13,491 11264 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:13,492 11265 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:13,492 11265 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:13,492 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,492 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,493 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_59,formula_58],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:13,554 11327 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,554 11327 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,554 11327 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:13,555 11328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:13,556 11329 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:13,557 11330 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:13,558 11331 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:13,564 11337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:13,564 11337 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:13,565 11338 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:13,565 11338 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:13,565 11338 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:13,567 11340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,567 11340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,571 11344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),not_equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))'),ARes),true.

2014-10-06 14:59:13,595 11368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))')),[]))
2014-10-06 14:59:13,596 11369 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 14:59:13,596 11369 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 14:59:13,596 11369 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:13,596 11369 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0]
2014-10-06 14:59:13,596 11369 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:13,597 11370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:13,597 11370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:13,600 11373 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 14:59:13,607 11380 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 14:59:13,608 11381 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 14:59:13,608 11381 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 14:59:14,330 12103 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 14:59:14,331 12104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 14:59:14,331 12104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 14:59:14,331 12104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63063
2014-10-06 14:59:14,332 12105 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63063
2014-10-06 14:59:14,332 12105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 14:59:14,332 12105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5781
2014-10-06 14:59:14,332 12105 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5781
2014-10-06 14:59:14,332 12105 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63063 using key 13b7d74caacc10c8
2014-10-06 14:59:14,333 12106 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 14:59:14,334 12107 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 14:59:14,352 12125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 14:59:14,435 12208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:14,435 12208 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 14:59:14,435 12208 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 14:59:14,435 12208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,436 12209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,437 12210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 14:59:14,438 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:14,438 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,439 12212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,439 12212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 14:59:14,440 12213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:14,441 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,441 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,441 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 14:59:14,442 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 14:59:14,442 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,443 12216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,444 12217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_64,formula_66,formula_65],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 14:59:14,474 12247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 14:59:14,475 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,475 12248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,476 12249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 14:59:14,487 12260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 14:59:14,487 12260 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 14:59:14,487 12260 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 14:59:14,487 12260 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 14:59:14,487 12260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,488 12261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,488 12261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_64,formula_66,formula_65],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 14:59:14,544 12317 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,544 12317 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,545 12318 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,546 12319 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,547 12320 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 14:59:14,548 12321 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 14:59:14,554 12327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 14:59:14,554 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 14:59:14,554 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 14:59:14,554 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 14:59:14,554 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 14:59:14,556 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,556 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 14:59:14,560 12333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))'),ARes),true.

2014-10-06 14:59:14,564 12337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))')),[]))
2014-10-06 14:59:14,564 12337 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 14:59:14,564 12337 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 14:59:14,564 12337 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = []
2014-10-06 14:59:14,564 12337 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 14:59:14,564 12337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 14:59:14,565 12338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:28,533 2560 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:28,544 2571 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:28,548 2575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:28,548 2575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:29,121 3148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:29,121 3148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:29,121 3148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:29,121 3148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63093
2014-10-06 15:05:29,122 3149 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63093
2014-10-06 15:05:29,122 3149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:29,122 3149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5808
2014-10-06 15:05:29,122 3149 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5808
2014-10-06 15:05:29,123 3150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63093 using key 58f73c3b6ea3b708
2014-10-06 15:05:29,123 3150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:29,125 3152 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:29,281 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:29,355 3382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:29,355 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:29,355 3382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:29,372 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,373 3400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,375 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:29,378 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:29,378 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,378 3405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,379 3406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:29,381 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:29,381 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,381 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,382 3409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:29,383 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:29,384 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,384 3411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,407 3434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:29,458 3485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:29,462 3489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,463 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,476 3503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:29,494 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:29,495 3522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,496 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:29,496 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:29,496 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:29,496 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,512 3539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,589 3616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,590 3617 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:29,591 3618 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:29,592 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:29,593 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:29,608 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:29,608 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:29,608 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:29,608 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:29,608 3635 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:29,663 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,663 3690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:29,677 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn >= max(ran(queue)))))'),ARes),true.

2014-10-06 15:05:29,708 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:29,709 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:29,709 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:05:29,709 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:05:29,709 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:29,709 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:05:29,712 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),'.'(','(int(2),int(0)),'.'(','(int(3),int(1)),[]))),'{(1|->0),(2|->0),(3|->1)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn >= max(ran(queue)))))')),[]))
2014-10-06 15:05:29,712 3739 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:29,713 3740 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 15:05:29,713 3740 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:29,713 3740 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0,0,1] &
2014-10-06 15:05:29,713 3740 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:29,713 3740 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:29,715 3742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:29,716 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-10-06 15:05:29,716 3743 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:05:29,720 3747 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:29,726 3753 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:29,727 3754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:29,727 3754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:30,361 4388 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:30,361 4388 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:30,362 4389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:30,362 4389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63095
2014-10-06 15:05:30,362 4389 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63095
2014-10-06 15:05:30,362 4389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:30,362 4389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5812
2014-10-06 15:05:30,362 4389 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5812
2014-10-06 15:05:30,362 4389 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63095 using key 58f73c3b6ea3b708
2014-10-06 15:05:30,363 4390 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:30,364 4391 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:30,396 4423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:30,513 4540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:30,513 4540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,514 4541 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:30,514 4541 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:30,515 4542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,516 4543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:30,518 4545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:30,518 4545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,518 4545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,519 4546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:30,520 4547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:30,520 4547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,521 4548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,522 4549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:30,523 4550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:30,523 4550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,523 4550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,524 4551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:30,557 4584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:30,559 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,560 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,562 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:30,573 4600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:30,574 4601 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:30,574 4601 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:30,574 4601 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:30,575 4602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,575 4602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,576 4603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,630 4657 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,631 4658 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:30,632 4659 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,633 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:30,634 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:30,645 4672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:30,645 4672 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:30,645 4672 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:30,645 4672 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:30,646 4673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:30,650 4677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,651 4678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,660 4687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,member(none,identifier(none,nn),nat_set(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))'),ARes),true.

2014-10-06 15:05:30,701 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(4),'4'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))')),[]))
2014-10-06 15:05:30,701 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating nn (not critical [unless failure]) : INTEGER : 4:sup ---> 4:4
2014-10-06 15:05:30,701 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:05:30,701 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:30,701 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:05:30,701 4728 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 4
2014-10-06 15:05:30,702 4729 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:30,702 4729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:30,702 4729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:30,706 4733 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:30,711 4738 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:30,712 4739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:30,713 4740 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:31,404 5431 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:31,405 5432 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:31,405 5432 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:31,405 5432 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63097
2014-10-06 15:05:31,405 5432 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63097
2014-10-06 15:05:31,406 5433 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:31,406 5433 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5816
2014-10-06 15:05:31,406 5433 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5816
2014-10-06 15:05:31,406 5433 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63097 using key 58f73c3b6ea3b708
2014-10-06 15:05:31,406 5433 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:31,407 5434 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:31,430 5457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:31,511 5538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:31,511 5538 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:31,512 5539 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:31,512 5539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,512 5539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,513 5540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:31,514 5541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:31,515 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,515 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,515 5542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:31,516 5543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:31,517 5544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,517 5544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,518 5545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:31,519 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:31,519 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,520 5547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,521 5548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:31,555 5582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:31,557 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,557 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,558 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:31,569 5596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:31,570 5597 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:31,570 5597 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:31,570 5597 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:31,570 5597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,571 5598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,571 5598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:31,626 5653 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,626 5653 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,626 5653 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,626 5653 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,626 5653 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,627 5654 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,628 5655 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,629 5656 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,630 5657 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:31,643 5670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:31,646 5673 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:31,646 5673 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:31,646 5673 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:31,646 5673 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:31,646 5673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,647 5674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:31,652 5679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn <= min(ran(queue)))))'),ARes),true.

2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,684 5711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:05:31,697 5724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(1),'1'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(nn <= min(ran(queue)))))')),[]))
2014-10-06 15:05:31,697 5724 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:31,697 5724 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 15:05:31,698 5725 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:31,698 5725 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:05:31,698 5725 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 1
2014-10-06 15:05:31,698 5725 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:31,698 5725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:31,699 5726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;','.'('min applied to empty set;;',[]))),[]))
2014-10-06 15:05:31,699 5726 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:05:31,703 5730 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:31,707 5734 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:31,715 5742 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:31,715 5742 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:05:31,716 5743 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:31,717 5744 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:32,305 6332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:32,305 6332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:32,305 6332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:32,305 6332 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63099
2014-10-06 15:05:32,306 6333 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63099
2014-10-06 15:05:32,306 6333 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:32,306 6333 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5820
2014-10-06 15:05:32,306 6333 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5820
2014-10-06 15:05:32,306 6333 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63099 using key 58f73c3b6ea3b708
2014-10-06 15:05:32,307 6334 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:32,307 6334 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:32,334 6361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:32,411 6438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:32,411 6438 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:32,411 6438 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:32,411 6438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,412 6439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,413 6440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:32,414 6441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:32,414 6441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,415 6442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,415 6442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:32,417 6444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:32,417 6444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,417 6444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,418 6445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:32,419 6446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:32,419 6446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,419 6446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,420 6447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_24,formula_23],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:32,455 6482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:32,456 6483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,457 6484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,458 6485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:32,468 6495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:32,468 6495 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:32,468 6495 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:32,468 6495 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:32,468 6495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,469 6496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,469 6496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_24,formula_23],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:32,518 6545 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,518 6545 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,518 6545 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:32,518 6545 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:32,519 6546 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,520 6547 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,521 6548 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:32,522 6549 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:32,524 6551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:32,524 6551 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:32,525 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:32,525 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:32,525 6552 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:32,527 6554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,527 6554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,533 6560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-10-06 15:05:32,551 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-10-06 15:05:32,551 6578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:05:32,551 6578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:32,551 6578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:05:32,551 6578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:32,551 6578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:32,552 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:32,552 6579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:32,556 6583 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:32,561 6588 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:32,562 6589 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:32,562 6589 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:33,145 7172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:33,145 7172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:33,145 7172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:33,145 7172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63101
2014-10-06 15:05:33,145 7172 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63101
2014-10-06 15:05:33,146 7173 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:33,146 7173 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5824
2014-10-06 15:05:33,146 7173 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5824
2014-10-06 15:05:33,146 7173 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63101 using key 58f73c3b6ea3b708
2014-10-06 15:05:33,146 7173 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:33,147 7174 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:33,163 7190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:33,234 7261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:33,234 7261 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:33,234 7261 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:33,234 7261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,235 7262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,236 7263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:33,237 7264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:33,238 7265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,238 7265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,238 7265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:33,240 7267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:33,240 7267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,240 7267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,241 7268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:33,242 7269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:33,242 7269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,242 7269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,243 7270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_29,formula_31,formula_30],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:33,273 7300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:33,274 7301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,275 7302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,276 7303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:33,285 7312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:33,285 7312 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:33,286 7313 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:33,286 7313 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:33,286 7313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,287 7314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,287 7314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_29,formula_31,formula_30],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,336 7363 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:33,337 7364 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:33,338 7365 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:33,341 7368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:33,341 7368 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:33,342 7369 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:33,342 7369 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:33,342 7369 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:33,344 7371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,344 7371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:33,348 7375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))'),ARes),true.

2014-10-06 15:05:33,373 7400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))')),[]))
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:33,373 7400 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:33,374 7401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:33,374 7401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-10-06 15:05:33,375 7402 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:05:33,376 7403 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:33,376 7403 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:33,376 7403 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:05:33,376 7403 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:05:33,377 7404 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:33,377 7404 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:05:33,378 7405 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:33,385 7412 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:33,386 7413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:33,387 7414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:33,957 7984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:33,957 7984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:33,957 7984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:33,957 7984 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63103
2014-10-06 15:05:33,958 7985 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63103
2014-10-06 15:05:33,958 7985 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:33,958 7985 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5828
2014-10-06 15:05:33,958 7985 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5828
2014-10-06 15:05:33,958 7985 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63103 using key 58f73c3b6ea3b708
2014-10-06 15:05:33,959 7986 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:33,960 7987 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:33,977 8004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:34,050 8077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,050 8077 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:34,050 8077 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:34,050 8077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,051 8078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,051 8078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:34,053 8080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,053 8080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,053 8080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,054 8081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:34,055 8082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,055 8082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,056 8083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,056 8083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:34,057 8084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,057 8084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,058 8085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,058 8085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_36,formula_38,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:34,088 8115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:34,089 8116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,089 8116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,091 8118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:34,103 8130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:34,103 8130 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:34,103 8130 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:34,104 8131 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:34,104 8131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,104 8131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,105 8132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_36,formula_38,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,153 8180 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,154 8181 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,155 8182 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,159 8186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:34,159 8186 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:34,159 8186 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:34,159 8186 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:34,159 8186 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:34,161 8188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,161 8188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,166 8193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-10-06 15:05:34,170 8197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-10-06 15:05:34,170 8197 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:05:34,170 8197 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:34,170 8197 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:05:34,170 8197 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:34,170 8197 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:34,171 8198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,171 8198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,174 8201 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:34,178 8205 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:34,179 8206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:34,179 8206 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:34,765 8792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:34,765 8792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:34,766 8793 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:34,766 8793 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63105
2014-10-06 15:05:34,766 8793 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63105
2014-10-06 15:05:34,766 8793 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:34,766 8793 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5832
2014-10-06 15:05:34,766 8793 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5832
2014-10-06 15:05:34,766 8793 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63105 using key 58f73c3b6ea3b708
2014-10-06 15:05:34,767 8794 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:34,768 8795 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:34,783 8810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:34,856 8883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,856 8883 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:34,856 8883 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:34,856 8883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,857 8884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,857 8884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:34,859 8886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,859 8886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,860 8887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,860 8887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:34,861 8888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,861 8888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,862 8889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,862 8889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:34,863 8890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:34,863 8890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,864 8891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,864 8891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_43,formula_45,formula_44],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:34,898 8925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:34,899 8926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,900 8927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,901 8928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:34,911 8938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:34,911 8938 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:34,911 8938 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:34,911 8938 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:34,912 8939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,912 8939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,912 8939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_43,formula_45,formula_44],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,961 8988 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,962 8989 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:34,963 8990 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:34,967 8994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:34,967 8994 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:34,967 8994 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:34,967 8994 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:34,967 8994 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:34,969 8996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:34,969 8996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:34,973 9000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))'),ARes),true.

2014-10-06 15:05:34,999 9026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))')),[]))
2014-10-06 15:05:34,999 9026 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:34,999 9026 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-10-06 15:05:34,999 9026 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:34,999 9026 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:05:34,999 9026 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:35,000 9027 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:35,000 9027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,000 9027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;',[])),[]))
2014-10-06 15:05:35,001 9028 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:05:35,002 9029 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,002 9029 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,002 9029 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:05:35,003 9030 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:05:35,003 9030 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:35,003 9030 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:05:35,004 9031 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:35,008 9035 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:35,009 9036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:35,010 9037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:35,579 9606 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:35,580 9607 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:35,580 9607 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:35,580 9607 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63107
2014-10-06 15:05:35,580 9607 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63107
2014-10-06 15:05:35,580 9607 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:35,580 9607 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5836
2014-10-06 15:05:35,580 9607 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5836
2014-10-06 15:05:35,581 9608 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63107 using key 58f73c3b6ea3b708
2014-10-06 15:05:35,581 9608 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:35,582 9609 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:35,599 9626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:35,673 9700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:35,673 9700 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:35,673 9700 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:35,673 9700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,674 9701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,674 9701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:35,676 9703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:35,676 9703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,676 9703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,677 9704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:35,678 9705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:35,678 9705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,679 9706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,679 9706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:35,680 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:35,680 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,680 9707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,681 9708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_50,formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:35,712 9739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:35,713 9740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,713 9740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,714 9741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:35,726 9753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:35,726 9753 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:35,726 9753 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:35,726 9753 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:35,726 9753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,727 9754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,727 9754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_50,formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:35,775 9802 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:35,776 9803 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,777 9804 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:35,778 9805 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:35,781 9808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:35,781 9808 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:35,781 9808 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:35,782 9809 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:35,782 9809 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:35,783 9810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,784 9811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,787 9814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))'),ARes),true.

2014-10-06 15:05:35,810 9837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))')),[]))
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:05:35,810 9837 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:35,811 9838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:35,812 9839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:35,817 9844 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:35,822 9849 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:35,823 9850 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:35,823 9850 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:36,410 10437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:36,410 10437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:36,410 10437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:36,410 10437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63109
2014-10-06 15:05:36,410 10437 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63109
2014-10-06 15:05:36,410 10437 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:36,411 10438 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5840
2014-10-06 15:05:36,411 10438 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5840
2014-10-06 15:05:36,411 10438 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63109 using key 58f73c3b6ea3b708
2014-10-06 15:05:36,411 10438 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:36,412 10439 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:36,426 10453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:36,497 10524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:36,497 10524 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:36,497 10524 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:36,497 10524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,498 10525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,498 10525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:36,500 10527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:36,500 10527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,500 10527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,501 10528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:36,502 10529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:36,502 10529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,502 10529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,503 10530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:36,504 10531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:36,504 10531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,504 10531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,505 10532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_59,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:36,539 10566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:36,540 10567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,540 10567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,541 10568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:36,553 10580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:36,553 10580 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:36,554 10581 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:36,554 10581 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:36,554 10581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,554 10581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,555 10582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_59,formula_58],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:36,608 10635 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,609 10636 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,610 10637 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,611 10638 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:36,612 10639 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:36,619 10646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:36,619 10646 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:36,619 10646 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:36,619 10646 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:36,619 10646 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:36,621 10648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,622 10649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,625 10652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),not_equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))'),ARes),true.

2014-10-06 15:05:36,649 10676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))')),[]))
2014-10-06 15:05:36,649 10676 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:05:36,649 10676 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 15:05:36,650 10677 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:36,650 10677 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0]
2014-10-06 15:05:36,650 10677 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:36,650 10677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:36,651 10678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:36,654 10681 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:05:36,662 10689 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:05:36,663 10690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:05:36,663 10690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:05:37,248 11275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:05:37,249 11276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:05:37,249 11276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:05:37,249 11276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63111
2014-10-06 15:05:37,249 11276 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63111
2014-10-06 15:05:37,249 11276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:05:37,249 11276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5844
2014-10-06 15:05:37,250 11277 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5844
2014-10-06 15:05:37,250 11277 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63111 using key 58f73c3b6ea3b708
2014-10-06 15:05:37,250 11277 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:05:37,251 11278 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:05:37,264 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,less_equal(52,identifier(53,nn),min(54,range(55,identifier(56,queue)))),assign(57,[identifier(58,queue)],[insert_front(59,identifier(60,nn),identifier(61,queue))])),select_when(62,greater_equal(63,identifier(64,nn),max(65,range(66,identifier(67,queue)))),assign(68,[identifier(69,queue)],[insert_tail(70,identifier(71,queue),identifier(72,nn))]))],any(73,[identifier(74,xx)],conjunct(75,conjunct(76,member(77,identifier(78,xx),interval(79,integer(80,1),minus_or_set_subtract(81,size(82,identifier(83,queue)),integer(84,1)))),less_equal(85,function(86,identifier(87,queue),[identifier(88,xx)]),identifier(89,nn))),less_equal(90,identifier(91,nn),function(92,identifier(93,queue),[add(94,identifier(95,xx),integer(96,1))]))),assign(97,[identifier(98,queue)],[concat(99,concat(100,restrict_front(101,identifier(102,queue),identifier(103,xx)),sequence_extension(104,[identifier(105,nn)])),restrict_tail(106,identifier(107,queue),identifier(108,xx)))]))))),operation(109,identifier(109,extract),[identifier(110,nn)],[],precondition(111,not_equal(112,identifier(113,queue),empty_sequence(114)),parallel(115,[assign(116,[identifier(117,nn)],[first(118,identifier(119,queue))]),assign(120,[identifier(121,queue)],[tail(122,identifier(123,queue))])])))])]))]),start_animation,true.

2014-10-06 15:05:37,334 11361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:37,334 11361 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:05:37,335 11362 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/B2LLVMCaseStudy/Priorityqueue.mch])
2014-10-06 15:05:37,335 11362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,336 11363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,336 11363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:05:37,338 11365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:37,338 11365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,338 11365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,338 11365 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:05:37,340 11367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:37,340 11367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,340 11367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,341 11368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:05:37,342 11369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:05:37,342 11369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,342 11369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,343 11370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_64,formula_66,formula_65],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:05:37,373 11400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:05:37,374 11401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,374 11401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,375 11402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:05:37,385 11412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:05:37,385 11412 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:05:37,385 11412 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:05:37,385 11412 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:05:37,385 11412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,386 11413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,386 11413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_64,formula_66,formula_65],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,435 11462 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,436 11463 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,437 11464 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,438 11465 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:05:37,439 11466 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:05:37,439 11466 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:05:37,439 11466 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:05:37,439 11466 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-10-06 15:05:37,441 11468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','insert: min applied to empty set: ','An expression was not well-defined.\nReason:  min applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),'.'(error('*unknown*','insert: max applied to empty set: ','An expression was not well-defined.\nReason:  max applied to empty set\nDetails: \nContext: \nEVENT/OPERATION: insert\n  State ID:0, State: ( queue={} )'),[]))),[])))))))))
2014-10-06 15:05:37,441 11468 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:05:37,442 11469 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:05:37,442 11469 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:05:37,442 11469 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:05:37,443 11470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,443 11470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:05:37,447 11474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))'),ARes),true.

2014-10-06 15:05:37,451 11478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))')),[]))
2014-10-06 15:05:37,451 11478 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 15:05:37,451 11478 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:05:37,451 11478 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = []
2014-10-06 15:05:37,451 11478 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:05:37,452 11479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:05:37,452 11479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:27,133 2869 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:27,145 2881 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:27,149 2885 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:27,149 2885 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:27,718 3454 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:27,718 3454 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:27,719 3455 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:27,719 3455 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63142
2014-10-06 15:12:27,719 3455 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63142
2014-10-06 15:12:27,719 3455 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:27,719 3455 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5876
2014-10-06 15:12:27,719 3455 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5876
2014-10-06 15:12:27,720 3456 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63142 using key e97cca3c217b2179
2014-10-06 15:12:27,721 3457 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:27,722 3458 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:27,901 3637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:27,987 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:27,987 3723 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:27,987 3723 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:28,003 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,004 3740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,007 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:28,008 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:28,009 3745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,009 3745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,010 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:28,011 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:28,011 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,012 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,013 3749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:28,014 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:28,014 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,015 3751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,034 3770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:28,084 3820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:28,088 3824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,089 3825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,101 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:28,119 3855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:28,120 3856 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:28,120 3856 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:28,120 3856 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:28,121 3857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,121 3857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,139 3875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:28,205 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:28,205 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:28,205 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:28,205 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:28,205 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:28,259 3995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,260 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,276 4012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 15:12:28,321 4057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:28,321 4057 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:28,323 4059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:28,323 4059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:28,328 4064 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:28,333 4069 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:28,334 4070 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:28,334 4070 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:29,023 4759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:29,023 4759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:29,024 4760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:29,024 4760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63144
2014-10-06 15:12:29,024 4760 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63144
2014-10-06 15:12:29,024 4760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:29,024 4760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5880
2014-10-06 15:12:29,024 4760 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5880
2014-10-06 15:12:29,024 4760 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63144 using key e97cca3c217b2179
2014-10-06 15:12:29,025 4761 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:29,026 4762 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:29,071 4807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:29,198 4934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:29,198 4934 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:29,199 4935 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:29,199 4935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,200 4936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,200 4936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:29,202 4938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:29,202 4938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,202 4938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,203 4939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:29,204 4940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:29,204 4940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,204 4940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,205 4941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:29,206 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:29,206 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,206 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,207 4943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:29,241 4977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:29,244 4980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,244 4980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,246 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:29,258 4994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:29,259 4995 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:29,259 4995 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:29,259 4995 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:29,259 4995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,260 4996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,260 4996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:29,314 5050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:29,319 5055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,324 5060 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:29,324 5060 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:29,324 5060 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:29,324 5060 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:29,325 5061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,333 5069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 15:12:29,379 5115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(1),'1'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 15:12:29,379 5115 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:29,380 5116 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:29,380 5116 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:29,380 5116 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:29,380 5116 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 1
2014-10-06 15:12:29,380 5116 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:29,381 5117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:29,382 5118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:29,387 5123 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:29,393 5129 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:29,395 5131 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:29,395 5131 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:30,058 5794 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:30,058 5794 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:30,059 5795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:30,059 5795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63146
2014-10-06 15:12:30,059 5795 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63146
2014-10-06 15:12:30,059 5795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:30,059 5795 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5884
2014-10-06 15:12:30,059 5795 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5884
2014-10-06 15:12:30,059 5795 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63146 using key e97cca3c217b2179
2014-10-06 15:12:30,060 5796 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:30,061 5797 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:30,085 5821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:30,190 5926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:30,190 5926 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:30,190 5926 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:30,191 5927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,192 5928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,192 5928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:30,194 5930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:30,194 5930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,194 5930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,195 5931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:30,196 5932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:30,196 5932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,196 5932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,197 5933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:30,198 5934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:30,198 5934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,198 5934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,199 5935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:30,233 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:30,234 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,234 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,235 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:30,247 5983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:30,247 5983 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:30,247 5983 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:30,247 5983 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:30,248 5984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,248 5984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,248 5984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:30,302 6038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:30,302 6038 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:30,303 6039 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:30,303 6039 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:30,303 6039 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:30,305 6041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,305 6041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:30,314 6050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))'),ARes),true.

2014-10-06 15:12:30,326 6062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED',[],'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))')),[]))
2014-10-06 15:12:30,327 6063 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (FALSE)
2014-10-06 15:12:30,327 6063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:30,327 6063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;','.'('min applied to empty set;;','.'('min applied to empty set;;','.'('min applied to empty set;;',[]))))),[]))
2014-10-06 15:12:30,328 6064 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:12:30,332 6068 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:30,332 6068 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:30,332 6068 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:30,332 6068 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:30,332 6068 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:30,332 6068 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:12:30,333 6069 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:30,336 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:30,342 6078 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:30,343 6079 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:30,344 6080 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:30,345 6081 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:30,345 6081 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-10-06 15:12:30,345 6081 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:30,345 6081 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:30,345 6081 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:30,346 6082 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:30,346 6082 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:31,036 6772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:31,036 6772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:31,036 6772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:31,036 6772 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63148
2014-10-06 15:12:31,037 6773 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63148
2014-10-06 15:12:31,037 6773 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:31,037 6773 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5888
2014-10-06 15:12:31,037 6773 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5888
2014-10-06 15:12:31,037 6773 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63148 using key e97cca3c217b2179
2014-10-06 15:12:31,038 6774 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:31,039 6775 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:31,068 6804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:31,175 6911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:31,175 6911 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:31,175 6911 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:31,175 6911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,177 6913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,178 6914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:31,180 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:31,181 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,181 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,182 6918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:31,183 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:31,183 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,184 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,185 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:31,185 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:31,186 6922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,186 6922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,187 6923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_24,formula_23],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:31,219 6955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:31,220 6956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,220 6956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,221 6957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:31,233 6969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:31,233 6969 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:31,233 6969 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:31,233 6969 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:31,234 6970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,234 6970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,235 6971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_24,formula_23],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:31,281 7017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:31,281 7017 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:31,282 7018 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:31,282 7018 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:31,282 7018 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:31,283 7019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,284 7020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,288 7024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,member(none,identifier(none,nn),nat_set(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))'),ARes),true.

2014-10-06 15:12:31,311 7047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(4),'4'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(nn : NAT)))')),[]))
2014-10-06 15:12:31,311 7047 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating nn (not critical [unless failure]) : INTEGER : 4:sup ---> 4:4
2014-10-06 15:12:31,312 7048 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:31,312 7048 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:31,312 7048 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:12:31,312 7048 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 4
2014-10-06 15:12:31,312 7048 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:31,313 7049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:31,313 7049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:31,317 7053 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:31,321 7057 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:31,322 7058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:31,323 7059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:31,912 7648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:31,912 7648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:31,913 7649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:31,913 7649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63150
2014-10-06 15:12:31,913 7649 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63150
2014-10-06 15:12:31,913 7649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:31,914 7650 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5892
2014-10-06 15:12:31,914 7650 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5892
2014-10-06 15:12:31,914 7650 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63150 using key e97cca3c217b2179
2014-10-06 15:12:31,915 7651 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:31,916 7652 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:31,932 7668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:32,010 7746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,010 7746 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:32,011 7747 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:32,011 7747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,011 7747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,012 7748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:32,013 7749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,013 7749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,014 7750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,014 7750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:32,016 7752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,016 7752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,016 7752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,017 7753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:32,018 7754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,018 7754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,018 7754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,019 7755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_29,formula_31,formula_30],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:32,048 7784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:32,049 7785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,050 7786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,051 7787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:32,061 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:32,061 7797 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:32,061 7797 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:32,061 7797 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:32,061 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,062 7798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,062 7798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_29,formula_31,formula_30],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:32,113 7849 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:32,113 7849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:32,113 7849 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:32,113 7849 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:32,113 7849 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:32,116 7852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,116 7852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,121 7857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-10-06 15:12:32,140 7876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-10-06 15:12:32,140 7876 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:32,140 7876 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:32,140 7876 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:12:32,140 7876 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:32,140 7876 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:32,141 7877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,141 7877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,145 7881 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:32,149 7885 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:32,150 7886 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:32,150 7886 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:32,733 8469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:32,733 8469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:32,733 8469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:32,733 8469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63152
2014-10-06 15:12:32,733 8469 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63152
2014-10-06 15:12:32,733 8469 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:32,734 8470 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5896
2014-10-06 15:12:32,734 8470 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5896
2014-10-06 15:12:32,734 8470 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63152 using key e97cca3c217b2179
2014-10-06 15:12:32,734 8470 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:32,735 8471 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:32,752 8488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:32,825 8561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,825 8561 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:32,826 8562 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:32,826 8562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,827 8563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,827 8563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:32,829 8565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,829 8565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,829 8565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,830 8566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:32,831 8567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,832 8568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,832 8568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,833 8569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:32,834 8570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:32,834 8570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,834 8570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,835 8571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_36,formula_38,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:32,865 8601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:32,866 8602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,867 8603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,868 8604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:32,879 8615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:32,879 8615 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:32,879 8615 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:32,879 8615 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:32,879 8615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,880 8616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,880 8616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_36,formula_38,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:32,928 8664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:32,928 8664 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:32,929 8665 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:32,929 8665 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:32,929 8665 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:32,931 8667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,932 8668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,938 8674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),not_equal(none,identifier(none,queue),empty_sequence(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))'),ARes),true.

2014-10-06 15:12:32,962 8698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn <= min(ran(queue))) <=> not(1=2 & nn <= min(ran(queue)))))')),[]))
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:32,962 8698 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:32,963 8699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:32,963 8699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:32,966 8702 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:32,970 8706 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:32,971 8707 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:32,971 8707 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:33,672 9408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:33,672 9408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:33,672 9408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:33,672 9408 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63154
2014-10-06 15:12:33,673 9409 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63154
2014-10-06 15:12:33,673 9409 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:33,673 9409 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5900
2014-10-06 15:12:33,673 9409 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5900
2014-10-06 15:12:33,673 9409 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63154 using key e97cca3c217b2179
2014-10-06 15:12:33,674 9410 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:33,675 9411 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:33,694 9430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:33,766 9502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:33,767 9503 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:33,767 9503 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:33,767 9503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,768 9504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,768 9504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:33,770 9506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:33,770 9506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,770 9506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,771 9507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:33,772 9508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:33,773 9509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,773 9509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,774 9510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:33,775 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:33,775 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,775 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,776 9512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_43,formula_45,formula_44],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:33,806 9542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:33,808 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,808 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,809 9545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:33,820 9556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:33,820 9556 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:33,821 9557 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:33,821 9557 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:33,821 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,821 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,822 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_43,formula_45,formula_44],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:33,868 9604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:33,868 9604 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:33,868 9604 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:33,868 9604 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:33,868 9604 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:33,870 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,871 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,877 9613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 15:12:33,915 9651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),'.'(','(int(2),int(0)),'.'(','(int(3),int(1)),[]))),'{(1|->0),(2|->0),(3|->1)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 15:12:33,915 9651 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:33,916 9652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:33,916 9652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:33,916 9652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0,0,1] &
2014-10-06 15:12:33,916 9652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:33,916 9652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:33,916 9652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:33,917 9653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:33,920 9656 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:33,924 9660 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:33,928 9664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:33,929 9665 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:34,547 10283 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:34,547 10283 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:34,547 10283 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:34,548 10284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63156
2014-10-06 15:12:34,548 10284 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63156
2014-10-06 15:12:34,548 10284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:34,548 10284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5904
2014-10-06 15:12:34,548 10284 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5904
2014-10-06 15:12:34,548 10284 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63156 using key e97cca3c217b2179
2014-10-06 15:12:34,549 10285 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:34,550 10286 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:34,568 10304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:34,649 10385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:34,649 10385 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:34,649 10385 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:34,649 10385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,650 10386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,650 10386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:34,652 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:34,652 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,652 10388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,653 10389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:34,654 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:34,654 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,654 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,655 10391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:34,656 10392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:34,656 10392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,657 10393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,658 10394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_50,formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:34,688 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:34,689 10425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,690 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,691 10427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:34,701 10437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:34,701 10437 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:34,702 10438 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:34,702 10438 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:34,702 10438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,702 10438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,703 10439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_50,formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:34,748 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:34,748 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:34,748 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:34,748 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:34,748 10484 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:34,750 10486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,750 10486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:34,755 10491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))'),ARes),true.

2014-10-06 15:12:34,763 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED',[],'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))')),[]))
2014-10-06 15:12:34,763 10499 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (FALSE)
2014-10-06 15:12:34,763 10499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:34,764 10500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;','.'('max applied to empty set;;','.'('max applied to empty set;;','.'('max applied to empty set;;',[]))))),[]))
2014-10-06 15:12:34,764 10500 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-10-06 15:12:34,767 10503 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:34,770 10506 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:34,777 10513 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:34,778 10514 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:34,778 10514 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:34,778 10514 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:34,778 10514 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-10-06 15:12:34,779 10515 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-10-06 15:12:34,780 10516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-10-06 15:12:34,780 10516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-10-06 15:12:34,780 10516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! 
2014-10-06 15:12:34,780 10516 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63158
2014-10-06 15:12:35,376 11112 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63158
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:35,376 11112 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5908
2014-10-06 15:12:35,377 11113 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5908
2014-10-06 15:12:35,377 11113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63158 using key e97cca3c217b2179
2014-10-06 15:12:35,377 11113 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:35,379 11115 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:35,395 11131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:35,469 11205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:35,469 11205 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:35,469 11205 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:35,470 11206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,470 11206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,471 11207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:35,473 11209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:35,473 11209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,473 11209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,474 11210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:35,475 11211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:35,475 11211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,476 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,477 11213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:35,478 11214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:35,478 11214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,479 11215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,479 11215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_59,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:35,510 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:35,511 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,512 11248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,513 11249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:35,523 11259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:35,523 11259 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:35,523 11259 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:35,523 11259 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:35,523 11259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,524 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,524 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_59,formula_58],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:35,569 11305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:35,569 11305 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:35,569 11305 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:35,569 11305 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:35,570 11306 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:35,571 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,571 11307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,576 11312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-10-06 15:12:35,580 11316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-10-06 15:12:35,580 11316 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:35,581 11317 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:35,581 11317 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-10-06 15:12:35,581 11317 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:35,581 11317 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:35,582 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:35,582 11318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:35,586 11322 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:35,592 11328 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:35,601 11337 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:35,601 11337 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:36,300 12036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:36,301 12037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:36,301 12037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:36,301 12037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63160
2014-10-06 15:12:36,301 12037 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63160
2014-10-06 15:12:36,302 12038 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:36,302 12038 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5912
2014-10-06 15:12:36,302 12038 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5912
2014-10-06 15:12:36,302 12038 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63160 using key e97cca3c217b2179
2014-10-06 15:12:36,303 12039 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:36,304 12040 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:36,318 12054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:36,389 12125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:36,389 12125 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:36,389 12125 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:36,390 12126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,391 12127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,391 12127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:36,393 12129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:36,393 12129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,393 12129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,394 12130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:36,395 12131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:36,395 12131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,396 12132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,396 12132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:36,397 12133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:36,397 12133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,398 12134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,398 12134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_64,formula_66,formula_65],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:36,428 12164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:36,429 12165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,430 12166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,431 12167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:36,442 12178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:36,442 12178 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:36,443 12179 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:36,443 12179 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:36,443 12179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,443 12179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,444 12180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_64,formula_66,formula_65],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:36,490 12226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:36,490 12226 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:36,490 12226 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:36,490 12226 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:36,490 12226 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:36,491 12227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,492 12228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,496 12232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),not_equal(none,identifier(none,queue),empty_sequence(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))'),ARes),true.

2014-10-06 15:12:36,520 12256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= []) & ((1=1 & nn >= max(ran(queue))) <=> not(1=2 & nn >= max(ran(queue)))))')),[]))
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:36,520 12256 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:36,521 12257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:36,522 12258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:36,524 12260 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:36,529 12265 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:36,530 12266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:36,530 12266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:37,194 12930 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:37,194 12930 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:37,194 12930 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:37,194 12930 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63162
2014-10-06 15:12:37,195 12931 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63162
2014-10-06 15:12:37,195 12931 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:37,195 12931 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5916
2014-10-06 15:12:37,195 12931 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5916
2014-10-06 15:12:37,195 12931 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63162 using key e97cca3c217b2179
2014-10-06 15:12:37,195 12931 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:37,196 12932 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:37,212 12948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:37,289 13025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:37,289 13025 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:37,289 13025 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:37,289 13025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,290 13026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,290 13026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:37,292 13028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:37,292 13028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,293 13029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,293 13029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:37,294 13030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:37,294 13030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,295 13031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,295 13031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:37,296 13032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:37,296 13032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,297 13033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,297 13033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_73,formula_72],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:37,327 13063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:37,328 13064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,328 13064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,329 13065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:37,339 13075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:37,339 13075 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:37,340 13076 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:37,340 13076 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:37,340 13076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,340 13076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,341 13077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_73,formula_72],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:37,391 13127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:37,391 13127 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:37,392 13128 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:37,392 13128 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:37,392 13128 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:37,393 13129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,394 13130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,398 13134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-10-06 15:12:37,426 13162 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-10-06 15:12:37,426 13162 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:37,426 13162 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:37,426 13162 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:37,427 13163 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:37,427 13163 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:37,427 13163 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:37,427 13163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:37,427 13163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:37,430 13166 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:37,435 13171 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:37,436 13172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:37,436 13172 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:38,128 13864 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:38,137 13873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:38,137 13873 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:38,138 13874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63164
2014-10-06 15:12:38,138 13874 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63164
2014-10-06 15:12:38,138 13874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:38,138 13874 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5920
2014-10-06 15:12:38,138 13874 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5920
2014-10-06 15:12:38,139 13875 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63164 using key e97cca3c217b2179
2014-10-06 15:12:38,139 13875 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:38,141 13877 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:38,158 13894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:38,231 13967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:38,231 13967 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:38,231 13967 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:38,232 13968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,232 13968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,233 13969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:38,234 13970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:38,234 13970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,235 13971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,235 13971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:38,236 13972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:38,237 13973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,237 13973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,238 13974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:38,239 13975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:38,239 13975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,239 13975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,240 13976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_78,formula_80,formula_79],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:38,276 14012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:38,277 14013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,278 14014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,279 14015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:38,290 14026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:38,290 14026 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:38,290 14026 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:38,290 14026 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:38,290 14026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,291 14027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,291 14027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_78,formula_80,formula_79],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:38,338 14074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:38,338 14074 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:38,339 14075 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:38,339 14075 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:38,339 14075 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:38,340 14076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,341 14077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,345 14081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))'),ARes),true.

2014-10-06 15:12:38,376 14112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (not(queue = [])))')),[]))
2014-10-06 15:12:38,376 14112 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:38,377 14113 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-10-06 15:12:38,377 14113 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:38,377 14113 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-10-06 15:12:38,377 14113 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-10-06 15:12:38,377 14113 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:38,377 14113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:38,378 14114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:38,381 14117 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:38,386 14122 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:38,389 14125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:38,389 14125 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:39,024 14760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63166
2014-10-06 15:12:39,025 14761 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63166
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5924
2014-10-06 15:12:39,025 14761 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5924
2014-10-06 15:12:39,025 14761 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63166 using key e97cca3c217b2179
2014-10-06 15:12:39,026 14762 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:39,027 14763 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:39,040 14776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:39,113 14849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:39,113 14849 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:39,114 14850 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:39,114 14850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,114 14850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,115 14851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:39,116 14852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:39,117 14853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,117 14853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,117 14853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:39,119 14855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:39,119 14855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,119 14855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,120 14856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:39,121 14857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:39,121 14857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,121 14857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,122 14858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_85,formula_87,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:39,151 14887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:39,152 14888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,152 14888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,153 14889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:39,165 14901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:39,165 14901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:39,165 14901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:39,165 14901 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:39,165 14901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,166 14902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,166 14902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_85,formula_87,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:39,221 14957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:39,221 14957 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:39,221 14957 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:39,221 14957 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:39,221 14957 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:39,222 14958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,223 14959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,226 14962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),not_equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))'),ARes),true.

2014-10-06 15:12:39,247 14983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (queue /= []))')),[]))
2014-10-06 15:12:39,247 14983 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 3
2014-10-06 15:12:39,247 14983 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 15:12:39,247 14983 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:39,247 14983 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0]
2014-10-06 15:12:39,247 14983 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:39,247 14983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:39,248 14984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:39,250 14986 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:12:39,256 14992 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:12:39,257 14993 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:12:39,257 14993 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:12:39,927 15663 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63168
2014-10-06 15:12:39,928 15664 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63168
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5928
2014-10-06 15:12:39,928 15664 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5928
2014-10-06 15:12:39,928 15664 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63168 using key e97cca3c217b2179
2014-10-06 15:12:39,929 15665 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:12:39,930 15666 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:12:39,943 15679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-10-06 15:12:40,015 15751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:40,015 15751 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:12:40,015 15751 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-10-06 15:12:40,015 15751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,016 15752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,016 15752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-10-06 15:12:40,018 15754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:40,018 15754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,019 15755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,019 15755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-10-06 15:12:40,020 15756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:40,020 15756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,021 15757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,021 15757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-10-06 15:12:40,022 15758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:12:40,022 15758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,022 15758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,023 15759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_92,formula_94,formula_93],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:12:40,053 15789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:40,054 15790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,054 15790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,055 15791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:12:40,065 15801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:12:40,065 15801 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:12:40,066 15802 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:12:40,066 15802 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:12:40,066 15802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,066 15802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,067 15803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_92,formula_94,formula_93],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:12:40,112 15848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),[]))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:12:40,112 15848 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:12:40,112 15848 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-10-06 15:12:40,112 15848 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-10-06 15:12:40,112 15848 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:12:40,113 15849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,113 15849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:12:40,117 15853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,not_equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))'),ARes),true.

2014-10-06 15:12:40,120 15856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),[]),'#queue.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (not(queue /= [])))')),[]))
2014-10-06 15:12:40,120 15856 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue is TRUE
2014-10-06 15:12:40,120 15856 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:12:40,121 15857 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = []
2014-10-06 15:12:40,121 15857 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:12:40,121 15857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:12:40,121 15857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:58,504 3195 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:29:58,516 3207 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:29:58,545 3236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:29:58,545 3236 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:29:59,305 3996 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:29:59,305 3996 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:29:59,306 3997 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:29:59,306 3997 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63631
2014-10-06 15:29:59,306 3997 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63631
2014-10-06 15:29:59,306 3997 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:29:59,307 3998 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5984
2014-10-06 15:29:59,307 3998 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5984
2014-10-06 15:29:59,308 3999 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63631 using key fb26aac24b729d7d
2014-10-06 15:29:59,309 4000 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:29:59,310 4001 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:29:59,548 4239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 15:29:59,643 4334 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:29:59,643 4334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,643 4334 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 15:29:59,676 4367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,677 4368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,679 4370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 15:29:59,681 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,681 4372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,682 4373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,682 4373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 15:29:59,683 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,683 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,684 4375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,684 4375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 15:29:59,685 4376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,685 4376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,685 4376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,686 4377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 15:29:59,687 4378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,688 4379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,688 4379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,689 4380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 15:29:59,689 4380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,690 4381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,690 4381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,691 4382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 15:29:59,691 4382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,692 4383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,692 4383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,693 4384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 15:29:59,693 4384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,694 4385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,694 4385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,695 4386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 15:29:59,695 4386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,695 4386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,696 4387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,696 4387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 15:29:59,697 4388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,697 4388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,697 4388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,698 4389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 15:29:59,698 4389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,699 4390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,699 4390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,700 4391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 15:29:59,700 4391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,701 4392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,701 4392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,702 4393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 15:29:59,703 4394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,703 4394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,703 4394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,704 4395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 15:29:59,705 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:29:59,705 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,705 4396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,720 4411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:29:59,771 4462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:29:59,775 4466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,776 4467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,797 4488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:29:59,816 4507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:29:59,817 4508 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:29:59,817 4508 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:29:59,817 4508 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:29:59,818 4509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,818 4509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,832 4523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:29:59,863 4554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:29:59,863 4554 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:29:59,864 4555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:29:59,880 4571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,881 4572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,897 4588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 15:29:59,924 4615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 15:29:59,924 4615 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 15:29:59,925 4616 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:29:59,926 4617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:29:59,927 4618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:29:59,964 4655 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:29:59,969 4660 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:29:59,970 4661 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:29:59,971 4662 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:30:00,767 5458 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:30:00,768 5459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:30:00,768 5459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:30:00,768 5459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63633
2014-10-06 15:30:00,768 5459 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63633
2014-10-06 15:30:00,768 5459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:30:00,769 5460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 5988
2014-10-06 15:30:00,769 5460 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 5988
2014-10-06 15:30:00,769 5460 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63633 using key fb26aac24b729d7d
2014-10-06 15:30:00,770 5461 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:30:00,771 5462 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:30:00,790 5481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 15:30:00,866 5557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:30:00,866 5557 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:30:00,866 5557 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 15:30:00,866 5557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:30:00,867 5558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:30:00,868 5559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:30:00,884 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:30:00,886 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:30:00,887 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:30:00,889 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:30:00,901 5592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:30:00,901 5592 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:30:00,902 5593 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:30:00,902 5593 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:30:00,902 5593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:30:00,903 5594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:30:00,904 5595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:30:00,982 5673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:30:00,982 5673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:30:00,982 5673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 15:30:00,982 5673 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:30:00,984 5675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:30:00,985 5676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:30:00,991 5682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 15:30:01,008 5699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 15:30:01,009 5700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:30:01,010 5701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 15:30:01,010 5701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:30:01,010 5701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 15:30:01,010 5701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:30:01,011 5702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:04,416 2480 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:40:04,429 2493 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:40:04,433 2497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:40:04,433 2497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:40:05,042 3106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:40:05,042 3106 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:40:05,043 3107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:40:05,043 3107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63717
2014-10-06 15:40:05,043 3107 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63717
2014-10-06 15:40:05,043 3107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:40:05,043 3107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6014
2014-10-06 15:40:05,043 3107 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6014
2014-10-06 15:40:05,044 3108 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63717 using key f2ee58c6a20cd26c
2014-10-06 15:40:05,045 3109 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:40:05,046 3110 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:40:05,250 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 15:40:05,346 3410 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:40:05,346 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,347 3411 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 15:40:05,367 3431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,369 3433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,372 3436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 15:40:05,375 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,375 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,376 3440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,377 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 15:40:05,377 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,377 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,378 3442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,378 3442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 15:40:05,379 3443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,379 3443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,380 3444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,380 3444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 15:40:05,382 3446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,383 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,383 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,384 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 15:40:05,384 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,385 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,385 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,386 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 15:40:05,386 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,386 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,387 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,387 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 15:40:05,388 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,388 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,388 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,389 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 15:40:05,390 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,390 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,390 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,391 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 15:40:05,391 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,392 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,392 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,393 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 15:40:05,393 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,394 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,394 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,395 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 15:40:05,395 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,396 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,396 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,396 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 15:40:05,397 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,397 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,398 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,398 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 15:40:05,399 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:05,399 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,399 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,413 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:40:05,455 3519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:40:05,459 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,460 3524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,472 3536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:40:05,491 3555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:40:05,491 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:40:05,491 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:40:05,491 3555 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:40:05,492 3556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,492 3556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,504 3568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:40:05,538 3602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:40:05,538 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,538 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,538 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,538 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:40:05,538 3602 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,539 3603 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:40:05,540 3604 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:40:05,540 3604 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:40:05,560 3624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,560 3624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,576 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 15:40:05,600 3664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 15:40:05,600 3664 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 15:40:05,600 3664 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:40:05,600 3664 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 15:40:05,600 3664 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 15:40:05,600 3664 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 15:40:05,601 3665 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 15:40:05,601 3665 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:40:05,603 3667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:05,603 3667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:05,646 3710 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:40:05,651 3715 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:40:05,652 3716 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:40:05,653 3717 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:40:06,409 4473 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:40:06,418 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:40:06,418 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:40:06,418 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63719
2014-10-06 15:40:06,418 4482 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63719
2014-10-06 15:40:06,419 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:40:06,419 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6018
2014-10-06 15:40:06,419 4483 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6018
2014-10-06 15:40:06,419 4483 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63719 using key f2ee58c6a20cd26c
2014-10-06 15:40:06,420 4484 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:40:06,420 4484 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:40:06,432 4496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 15:40:06,510 4574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:40:06,510 4574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:40:06,510 4574 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 15:40:06,510 4574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:06,511 4575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:06,512 4576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:40:06,523 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:40:06,526 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:06,526 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:06,528 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:40:06,541 4605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:40:06,541 4605 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:40:06,541 4605 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:40:06,541 4605 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:40:06,542 4606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:06,542 4606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:06,543 4607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:40:06,622 4686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:40:06,622 4686 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:40:06,623 4687 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 15:40:06,623 4687 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:40:06,625 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:06,626 4690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:40:06,632 4696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 15:40:06,650 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 15:40:06,652 4716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:40:06,652 4716 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 15:40:06,652 4716 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:40:06,652 4716 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 15:40:06,652 4716 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:40:06,653 4717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:05,778 2543 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:46:05,791 2556 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:46:05,795 2560 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:46:05,795 2560 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:46:06,419 3184 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:46:06,419 3184 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:46:06,419 3184 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:46:06,420 3185 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63791
2014-10-06 15:46:06,420 3185 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63791
2014-10-06 15:46:06,420 3185 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:46:06,420 3185 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6033
2014-10-06 15:46:06,421 3186 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6033
2014-10-06 15:46:06,422 3187 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63791 using key 6663bfcda06b1239
2014-10-06 15:46:06,422 3187 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:46:06,424 3189 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:46:06,613 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 15:46:06,716 3481 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:46:06,716 3481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,717 3482 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 15:46:06,734 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,735 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,737 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 15:46:06,739 3504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,740 3505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,740 3505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,741 3506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 15:46:06,741 3506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,741 3506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,742 3507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,742 3507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 15:46:06,743 3508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,743 3508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,744 3509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,745 3510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 15:46:06,746 3511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,747 3512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,747 3512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,748 3513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 15:46:06,749 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,749 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,749 3514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,750 3515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 15:46:06,751 3516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,751 3516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,751 3516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,752 3517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 15:46:06,752 3517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,753 3518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,753 3518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,754 3519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 15:46:06,754 3519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,755 3520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,755 3520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,755 3520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 15:46:06,756 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,756 3521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,757 3522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,757 3522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 15:46:06,758 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,758 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,758 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,759 3524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 15:46:06,760 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,760 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,760 3525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,761 3526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 15:46:06,761 3526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,762 3527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,762 3527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,763 3528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 15:46:06,763 3528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:06,763 3528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,764 3529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,779 3544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:46:06,828 3593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:46:06,831 3596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,832 3597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,843 3608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:46:06,861 3626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:46:06,863 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,873 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:46:06,874 3639 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:46:06,874 3639 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:46:06,874 3639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,889 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:46:06,945 3710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:46:06,945 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,945 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,945 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,945 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,946 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:46:06,947 3712 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:46:06,947 3712 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:46:06,974 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:06,975 3740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:06,989 3754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 15:46:07,009 3774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 15:46:07,009 3774 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 15:46:07,009 3774 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:46:07,010 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 15:46:07,010 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 15:46:07,010 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 15:46:07,010 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 15:46:07,010 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:46:07,012 3777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,012 3777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:07,049 3814 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:46:07,053 3818 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:46:07,054 3819 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:46:07,055 3820 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:46:07,726 4491 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:46:07,727 4492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:46:07,727 4492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:46:07,727 4492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63793
2014-10-06 15:46:07,727 4492 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63793
2014-10-06 15:46:07,727 4492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:46:07,727 4492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6037
2014-10-06 15:46:07,727 4492 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6037
2014-10-06 15:46:07,728 4493 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63793 using key 6663bfcda06b1239
2014-10-06 15:46:07,728 4493 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:46:07,729 4494 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:46:07,741 4506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 15:46:07,816 4581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:46:07,817 4582 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:46:07,817 4582 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 15:46:07,817 4582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,818 4583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:07,819 4584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:46:07,830 4595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:46:07,832 4597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,833 4598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:07,835 4600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:46:07,848 4613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:46:07,848 4613 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:46:07,848 4613 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:46:07,848 4613 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:46:07,849 4614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,849 4614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:07,850 4615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:46:07,924 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:46:07,927 4692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,936 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:46:07,936 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 15:46:07,936 4701 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:46:07,937 4702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:46:07,942 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 15:46:07,960 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 15:46:07,962 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:46:07,962 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 15:46:07,962 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:46:07,962 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 15:46:07,962 4727 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:46:07,963 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,046 2553 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:48:34,057 2564 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:48:34,060 2567 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:48:34,061 2568 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:48:34,636 3143 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:48:34,637 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:48:34,637 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:48:34,637 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63813
2014-10-06 15:48:34,637 3144 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63813
2014-10-06 15:48:34,637 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:48:34,638 3145 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6046
2014-10-06 15:48:34,638 3145 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6046
2014-10-06 15:48:34,639 3146 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63813 using key 33fb74590c898ae0
2014-10-06 15:48:34,639 3146 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:48:34,641 3148 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:48:34,833 3340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 15:48:34,914 3421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,914 3421 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:48:34,915 3422 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 15:48:34,932 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,933 3440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,936 3443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 15:48:34,938 3445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,938 3445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,938 3445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,939 3446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 15:48:34,940 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,940 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,940 3447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,941 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 15:48:34,941 3448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,942 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,942 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,943 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 15:48:34,944 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,944 3451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,945 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,945 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 15:48:34,946 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,946 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,947 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,947 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 15:48:34,948 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,948 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,949 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,949 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 15:48:34,950 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,950 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,951 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,951 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 15:48:34,952 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,952 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,952 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,953 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 15:48:34,954 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,954 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,954 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,955 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 15:48:34,955 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,956 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,956 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,957 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 15:48:34,957 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,958 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,958 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,959 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 15:48:34,959 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,960 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,960 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,960 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 15:48:34,961 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:34,961 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:34,962 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:34,983 3490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:48:35,036 3543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:48:35,040 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:35,041 3548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:35,054 3561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:48:35,087 3594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:48:35,088 3595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:35,089 3596 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:48:35,089 3596 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:48:35,090 3597 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:48:35,090 3597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:35,108 3615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:48:35,163 3670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:48:35,164 3671 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,164 3671 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,164 3671 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,164 3671 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,165 3672 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,166 3673 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:48:35,166 3673 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:48:35,166 3673 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:48:35,196 3703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:35,197 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:35,220 3727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 15:48:35,241 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 15:48:35,241 3748 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 15:48:35,241 3748 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:48:35,242 3749 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 15:48:35,242 3749 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 15:48:35,242 3749 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 15:48:35,242 3749 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 15:48:35,242 3749 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:48:35,245 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:35,245 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:35,305 3812 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:48:35,310 3817 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:48:35,311 3818 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:48:35,311 3818 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:48:36,253 4760 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:48:36,254 4761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:48:36,254 4761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:48:36,254 4761 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63815
2014-10-06 15:48:36,254 4761 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63815
2014-10-06 15:48:36,255 4762 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:48:36,255 4762 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6050
2014-10-06 15:48:36,255 4762 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6050
2014-10-06 15:48:36,255 4762 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63815 using key 33fb74590c898ae0
2014-10-06 15:48:36,256 4763 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:48:36,256 4763 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:48:36,272 4779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 15:48:36,365 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:48:36,365 4872 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:48:36,365 4872 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 15:48:36,365 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:36,366 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:36,367 4874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:48:36,378 4885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:48:36,381 4888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:36,381 4888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:36,383 4890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:48:36,396 4903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:48:36,396 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:48:36,396 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:48:36,396 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:48:36,397 4904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:36,397 4904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:36,398 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:48:36,478 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:48:36,478 4985 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:48:36,478 4985 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 15:48:36,479 4986 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:48:36,481 4988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:36,481 4988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:48:36,487 4994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 15:48:36,505 5012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 15:48:36,506 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:48:36,507 5014 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 15:48:36,507 5014 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:48:36,507 5014 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 15:48:36,507 5014 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:48:36,507 5014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:19,742 2186 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:50:19,755 2199 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:50:19,759 2203 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:50:19,760 2204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:50:20,357 2801 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:50:20,358 2802 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:50:20,358 2802 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:50:20,358 2802 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63823
2014-10-06 15:50:20,358 2802 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63823
2014-10-06 15:50:20,359 2803 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:50:20,359 2803 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6059
2014-10-06 15:50:20,359 2803 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6059
2014-10-06 15:50:20,360 2804 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63823 using key b865ce3c368e066c
2014-10-06 15:50:20,360 2804 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:50:20,362 2806 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:50:20,576 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 15:50:20,658 3102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,658 3102 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:50:20,658 3102 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 15:50:20,677 3121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,678 3122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,680 3124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 15:50:20,682 3126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,682 3126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,683 3127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,683 3127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 15:50:20,684 3128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,684 3128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,685 3129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,685 3129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 15:50:20,686 3130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,686 3130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,687 3131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,687 3131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 15:50:20,689 3133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,689 3133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,690 3134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,691 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 15:50:20,691 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,691 3135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,692 3136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,692 3136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 15:50:20,693 3137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,693 3137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,694 3138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,694 3138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 15:50:20,695 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,695 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,695 3139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,696 3140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 15:50:20,697 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,697 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,697 3141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,698 3142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 15:50:20,698 3142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,699 3143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,699 3143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,700 3144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 15:50:20,700 3144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,701 3145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,701 3145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,702 3146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 15:50:20,702 3146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,702 3146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,703 3147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,703 3147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 15:50:20,704 3148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,704 3148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,705 3149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,705 3149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 15:50:20,706 3150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:20,706 3150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,706 3150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,726 3170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:50:20,781 3225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:50:20,785 3229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,785 3229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,798 3242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:50:20,816 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:50:20,816 3260 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:50:20,816 3260 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:50:20,816 3260 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:50:20,817 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,817 3261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,835 3279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:50:20,886 3330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:50:20,886 3330 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,886 3330 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,886 3330 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:50:20,887 3331 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,888 3332 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,888 3332 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 15:50:20,888 3332 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 15:50:20,888 3332 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 15:50:20,911 3355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,911 3355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,924 3368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 15:50:20,943 3387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 15:50:20,943 3387 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 15:50:20,943 3387 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:50:20,943 3387 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 15:50:20,943 3387 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 15:50:20,943 3387 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 15:50:20,944 3388 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 15:50:20,944 3388 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:50:20,945 3389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:20,946 3390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:20,989 3433 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 15:50:20,994 3438 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 15:50:20,995 3439 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 15:50:20,995 3439 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 15:50:21,676 4120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 15:50:21,676 4120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 15:50:21,676 4120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 15:50:21,676 4120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 63825
2014-10-06 15:50:21,676 4120 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 63825
2014-10-06 15:50:21,676 4120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 15:50:21,677 4121 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6063
2014-10-06 15:50:21,677 4121 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6063
2014-10-06 15:50:21,677 4121 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 63825 using key b865ce3c368e066c
2014-10-06 15:50:21,677 4121 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 15:50:21,678 4122 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 15:50:21,689 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 15:50:21,781 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 15:50:21,781 4225 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 15:50:21,782 4226 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 15:50:21,782 4226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:21,783 4227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:21,783 4227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 15:50:21,794 4238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:50:21,797 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:21,797 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:21,799 4243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 15:50:21,812 4256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 15:50:21,812 4256 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 15:50:21,813 4257 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 15:50:21,813 4257 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 15:50:21,813 4257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:21,814 4258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:21,814 4258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 15:50:21,888 4332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 15:50:21,888 4332 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:50:21,888 4332 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 15:50:21,888 4332 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:50:21,891 4335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:21,891 4335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 15:50:21,897 4341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 15:50:21,915 4359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 15:50:21,915 4359 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 15:50:21,915 4359 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 15:50:21,915 4359 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 15:50:21,916 4360 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 15:50:21,916 4360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 15:50:21,917 4361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:39,262 3076 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:07:39,277 3091 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:07:39,284 3098 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:07:39,284 3098 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:07:39,969 3783 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:07:39,970 3784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:07:39,970 3784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:07:39,970 3784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64158
2014-10-06 16:07:39,970 3784 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64158
2014-10-06 16:07:39,970 3784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:07:39,970 3784 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6121
2014-10-06 16:07:39,971 3785 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6121
2014-10-06 16:07:39,972 3786 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64158 using key 63cef606195f74d7
2014-10-06 16:07:39,972 3786 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:07:39,973 3787 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:07:40,183 3997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 16:07:40,287 4101 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:07:40,287 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,287 4101 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 16:07:40,307 4121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,308 4122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,311 4125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 16:07:40,312 4126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,313 4127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,313 4127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,314 4128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 16:07:40,315 4129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,315 4129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,315 4129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,316 4130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 16:07:40,317 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,317 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,317 4131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,318 4132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 16:07:40,319 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,319 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,320 4134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,320 4134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 16:07:40,321 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,321 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,321 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,322 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 16:07:40,323 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,323 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,323 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,324 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 16:07:40,324 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,325 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,325 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,326 4140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 16:07:40,327 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,327 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,328 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,328 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 16:07:40,329 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,329 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,329 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,330 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 16:07:40,331 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,331 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,331 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,332 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 16:07:40,333 4147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,333 4147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,334 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,334 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 16:07:40,335 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,335 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,336 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,336 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 16:07:40,337 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:40,337 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,337 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,355 4169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:07:40,411 4225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:07:40,416 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,416 4230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,429 4243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:07:40,446 4260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:07:40,446 4260 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:07:40,447 4261 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:07:40,447 4261 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:07:40,447 4261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,448 4262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,465 4279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:07:40,504 4318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:07:40,504 4318 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,504 4318 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,504 4318 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,504 4318 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,505 4319 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:07:40,506 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:07:40,506 4320 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:07:40,526 4340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,527 4341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,548 4362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 16:07:40,567 4381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 16:07:40,567 4381 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 16:07:40,567 4381 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:07:40,567 4381 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 16:07:40,568 4382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 16:07:40,568 4382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 16:07:40,568 4382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 16:07:40,568 4382 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:07:40,570 4384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:40,570 4384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:40,629 4443 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:07:40,634 4448 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:07:40,636 4450 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:07:40,636 4450 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:07:41,563 5377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:07:41,564 5378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:07:41,564 5378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:07:41,564 5378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64160
2014-10-06 16:07:41,564 5378 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64160
2014-10-06 16:07:41,565 5379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:07:41,565 5379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6125
2014-10-06 16:07:41,565 5379 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6125
2014-10-06 16:07:41,565 5379 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64160 using key 63cef606195f74d7
2014-10-06 16:07:41,566 5380 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:07:41,567 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:07:41,579 5393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 16:07:41,699 5513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:07:41,699 5513 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:07:41,700 5514 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 16:07:41,700 5514 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:41,701 5515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:41,702 5516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:07:41,714 5528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:07:41,717 5531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:41,718 5532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:41,719 5533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:07:41,732 5546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:07:41,732 5546 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:07:41,732 5546 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:07:41,732 5546 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:07:41,733 5547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:41,733 5547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:41,734 5548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:07:41,831 5645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:07:41,831 5645 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:07:41,832 5646 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 16:07:41,832 5646 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:07:41,834 5648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:41,834 5648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:07:41,838 5652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 16:07:41,849 5663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 16:07:41,849 5663 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 16:07:41,849 5663 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:07:41,849 5663 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 16:07:41,850 5664 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:07:41,850 5664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:07:41,850 5664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:16,091 2519 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:11:16,105 2533 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:11:16,108 2536 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:11:16,108 2536 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:11:16,715 3143 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:11:16,716 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:11:16,716 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:11:16,716 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64182
2014-10-06 16:11:16,716 3144 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64182
2014-10-06 16:11:16,716 3144 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:11:16,717 3145 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6135
2014-10-06 16:11:16,717 3145 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6135
2014-10-06 16:11:16,718 3146 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64182 using key c4dc86a67d46d408
2014-10-06 16:11:16,718 3146 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:11:16,720 3148 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:11:16,918 3346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 16:11:17,000 3428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,000 3428 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:11:17,000 3428 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 16:11:17,021 3449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,022 3450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,024 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 16:11:17,026 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,026 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,026 3454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,027 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 16:11:17,027 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,028 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,028 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,029 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 16:11:17,029 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,030 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,030 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,031 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 16:11:17,032 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,033 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,033 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,034 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 16:11:17,034 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,035 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,035 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,036 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 16:11:17,036 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,036 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,037 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,037 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 16:11:17,038 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,038 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,038 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,039 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 16:11:17,039 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,040 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,040 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,041 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 16:11:17,041 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,041 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,042 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,042 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 16:11:17,043 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,043 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,044 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,045 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 16:11:17,045 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,046 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,046 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,047 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 16:11:17,048 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,048 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,049 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,049 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 16:11:17,050 3478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:17,050 3478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,051 3479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,066 3494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:11:17,116 3544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:11:17,119 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,120 3548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,129 3557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:11:17,143 3571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:11:17,145 3573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,145 3573 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:11:17,145 3573 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:11:17,145 3573 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:11:17,146 3574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,158 3586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:11:17,208 3636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:11:17,208 3636 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,209 3637 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:11:17,210 3638 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:11:17,234 3662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,235 3663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,252 3680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 16:11:17,271 3699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 16:11:17,271 3699 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 16:11:17,271 3699 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:11:17,271 3699 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 16:11:17,272 3700 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 16:11:17,272 3700 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 16:11:17,272 3700 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 16:11:17,272 3700 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:11:17,273 3701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:17,274 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:17,325 3753 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:11:17,329 3757 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:11:17,330 3758 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:11:17,331 3759 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:11:18,053 4481 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:11:18,054 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:11:18,054 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:11:18,054 4482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64184
2014-10-06 16:11:18,055 4483 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64184
2014-10-06 16:11:18,055 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:11:18,055 4483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6139
2014-10-06 16:11:18,055 4483 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6139
2014-10-06 16:11:18,055 4483 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64184 using key c4dc86a67d46d408
2014-10-06 16:11:18,056 4484 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:11:18,057 4485 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:11:18,069 4497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 16:11:18,152 4580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:11:18,152 4580 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:11:18,152 4580 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 16:11:18,152 4580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:18,153 4581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:18,154 4582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:11:18,165 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:11:18,167 4595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:18,168 4596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:18,170 4598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:11:18,187 4615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:11:18,187 4615 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:11:18,187 4615 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:11:18,187 4615 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:11:18,188 4616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:18,188 4616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:18,189 4617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:11:18,283 4711 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:11:18,282 4710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:11:18,283 4711 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 16:11:18,283 4711 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:11:18,286 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:18,287 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:11:18,292 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 16:11:18,309 4737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 16:11:18,310 4738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:11:18,311 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 16:11:18,311 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:11:18,311 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 16:11:18,311 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:11:18,312 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:41,361 3044 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:18:41,375 3058 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:18:41,379 3062 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:18:41,380 3063 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:18:42,007 3690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:18:42,008 3691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:18:42,008 3691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:18:42,008 3691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64206
2014-10-06 16:18:42,008 3691 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64206
2014-10-06 16:18:42,009 3692 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:18:42,009 3692 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6149
2014-10-06 16:18:42,009 3692 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6149
2014-10-06 16:18:42,010 3693 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64206 using key 9a627642e42ddbdf
2014-10-06 16:18:42,010 3693 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:18:42,012 3695 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:18:42,223 3906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 16:18:42,316 3999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,316 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:18:42,316 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 16:18:42,333 4016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,334 4017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,337 4020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 16:18:42,339 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,339 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,340 4023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,340 4023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 16:18:42,341 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,341 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,341 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,342 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 16:18:42,342 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,343 4026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,343 4026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,344 4027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 16:18:42,345 4028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,345 4028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,346 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,346 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 16:18:42,347 4030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,347 4030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,348 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,348 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 16:18:42,349 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,349 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,349 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,350 4033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 16:18:42,350 4033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,351 4034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,351 4034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,352 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 16:18:42,352 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,353 4036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,353 4036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,354 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 16:18:42,354 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,354 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,355 4038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,355 4038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 16:18:42,356 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,356 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,356 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,357 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 16:18:42,357 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,358 4041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,358 4041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,359 4042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 16:18:42,359 4042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,359 4042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,360 4043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,360 4043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 16:18:42,361 4044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:42,361 4044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,362 4045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,382 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:18:42,431 4114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:18:42,435 4118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,436 4119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,449 4132 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:18:42,468 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:18:42,468 4151 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:18:42,469 4152 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:18:42,469 4152 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:18:42,470 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,470 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,488 4171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:18:42,538 4221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:18:42,538 4221 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,539 4222 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:18:42,540 4223 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:18:42,565 4248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,565 4248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,579 4262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 16:18:42,593 4276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 16:18:42,593 4276 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 16:18:42,594 4277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:18:42,597 4280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:42,597 4280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:42,641 4324 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:18:42,647 4330 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:18:42,648 4331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:18:42,648 4331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:18:43,421 5104 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:18:43,422 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:18:43,422 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:18:43,422 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64208
2014-10-06 16:18:43,422 5105 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64208
2014-10-06 16:18:43,422 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:18:43,422 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6153
2014-10-06 16:18:43,423 5106 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6153
2014-10-06 16:18:43,423 5106 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64208 using key 9a627642e42ddbdf
2014-10-06 16:18:43,423 5106 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:18:43,424 5107 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:18:43,436 5119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 16:18:43,529 5212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:18:43,530 5213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:18:43,530 5213 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 16:18:43,530 5213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:43,531 5214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:43,532 5215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:18:43,548 5231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:18:43,550 5233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:43,551 5234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:43,552 5235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:18:43,566 5249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:18:43,566 5249 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:18:43,567 5250 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:18:43,567 5250 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:18:43,567 5250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:43,568 5251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:43,568 5251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:18:43,645 5328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:18:43,645 5328 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:18:43,645 5328 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 16:18:43,645 5328 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:18:43,647 5330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:43,647 5330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:43,652 5335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 16:18:43,667 5350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 16:18:43,669 5352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:18:43,669 5352 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 16:18:43,669 5352 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:18:43,669 5352 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 16:18:43,669 5352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:18:43,670 5353 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:19:32,767 2202 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:19:32,779 2214 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:19:32,782 2217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:19:32,783 2218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:19:33,393 2828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:19:33,394 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:19:33,394 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:19:33,394 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64215
2014-10-06 16:19:33,394 2829 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64215
2014-10-06 16:19:33,394 2829 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:19:33,395 2830 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6158
2014-10-06 16:19:33,395 2830 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6158
2014-10-06 16:19:33,396 2831 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64215 using key b415618f4bc8abb6
2014-10-06 16:19:33,396 2831 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:19:33,397 2832 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:19:33,585 3020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-10-06 16:19:33,696 3131 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:19:33,696 3131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,697 3132 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-10-06 16:19:33,716 3151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,717 3152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,719 3154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-10-06 16:19:33,721 3156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,721 3156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,722 3157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,722 3157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-10-06 16:19:33,723 3158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,723 3158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,724 3159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,724 3159 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-10-06 16:19:33,725 3160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,725 3160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,725 3160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,726 3161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-10-06 16:19:33,728 3163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,728 3163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,728 3163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,729 3164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-10-06 16:19:33,730 3165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,730 3165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,734 3169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,734 3169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-10-06 16:19:33,735 3170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,735 3170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,735 3170 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,736 3171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-10-06 16:19:33,737 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,737 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,737 3172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,738 3173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-10-06 16:19:33,738 3173 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,739 3174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,739 3174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,739 3174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-10-06 16:19:33,740 3175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,740 3175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,740 3175 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,741 3176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-10-06 16:19:33,742 3177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,742 3177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,742 3177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,743 3178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-10-06 16:19:33,743 3178 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,744 3179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,744 3179 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,745 3180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-10-06 16:19:33,745 3180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,746 3181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,746 3181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,747 3182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-10-06 16:19:33,747 3182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:33,747 3182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,748 3183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,765 3200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:19:33,809 3244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:19:33,813 3248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,814 3249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,825 3260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:19:33,840 3275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:19:33,840 3275 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:19:33,841 3276 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:19:33,841 3276 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:19:33,841 3276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,842 3277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,859 3294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:19:33,902 3337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:19:33,902 3337 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,903 3338 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-10-06 16:19:33,904 3339 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-10-06 16:19:33,928 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,928 3363 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:33,943 3378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-10-06 16:19:33,964 3399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-10-06 16:19:33,964 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-10-06 16:19:33,964 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:19:33,964 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-10-06 16:19:33,964 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-10-06 16:19:33,964 3399 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-10-06 16:19:33,965 3400 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-10-06 16:19:33,965 3400 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:19:33,967 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:33,967 3402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:34,016 3451 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-10-06 16:19:34,021 3456 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-10-06 16:19:34,023 3458 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-10-06 16:19:34,023 3458 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-10-06 16:19:34,779 4214 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-10-06 16:19:34,780 4215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-10-06 16:19:34,780 4215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-10-06 16:19:34,780 4215 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 64217
2014-10-06 16:19:34,781 4216 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 64217
2014-10-06 16:19:34,781 4216 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-10-06 16:19:34,781 4216 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 6162
2014-10-06 16:19:34,781 4216 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 6162
2014-10-06 16:19:34,781 4216 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 64217 using key b415618f4bc8abb6
2014-10-06 16:19:34,782 4217 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-10-06 16:19:34,782 4217 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-10-06 16:19:34,804 4239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','3'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-10-06 16:19:34,888 4323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-10-06 16:19:34,889 4324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-10-06 16:19:34,889 4324 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-10-06 16:19:34,889 4324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:34,890 4325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:34,891 4326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-10-06 16:19:34,903 4338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:19:34,906 4341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:34,906 4341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:34,908 4343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-10-06 16:19:34,921 4356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-10-06 16:19:34,921 4356 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-10-06 16:19:34,921 4356 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-10-06 16:19:34,922 4357 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-10-06 16:19:34,922 4357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:34,922 4357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:34,923 4358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-10-06 16:19:35,016 4451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-10-06 16:19:35,016 4451 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:19:35,016 4451 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-10-06 16:19:35,016 4451 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:19:35,018 4453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:35,018 4453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-10-06 16:19:35,024 4459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-10-06 16:19:35,038 4473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-10-06 16:19:35,038 4473 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-10-06 16:19:35,038 4473 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-10-06 16:19:35,038 4473 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-10-06 16:19:35,039 4474 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-10-06 16:19:35,039 4474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-10-06 16:19:35,040 4475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
