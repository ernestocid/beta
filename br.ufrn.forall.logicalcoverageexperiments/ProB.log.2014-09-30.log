2014-09-30 15:07:37,626 2845 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:37,640 2859 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:37,643 2862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:37,643 2862 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:38,304 3523 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:38,305 3524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:38,305 3524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:38,305 3524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50941
2014-09-30 15:07:38,306 3525 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50941
2014-09-30 15:07:38,306 3525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:38,306 3525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10771
2014-09-30 15:07:38,306 3525 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10771
2014-09-30 15:07:38,307 3526 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50941 using key c7add9e216d5315c
2014-09-30 15:07:38,307 3526 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:38,308 3527 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:38,481 3700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:38,557 3776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:38,557 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:38,557 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:38,558 3777 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:38,558 3777 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:38,558 3777 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:38,586 3805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,587 3806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,589 3808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:38,591 3810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:38,592 3811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,592 3811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,593 3812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:38,594 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:38,594 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,595 3814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,596 3815 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:38,597 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:38,597 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,597 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,615 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:38,666 3885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:38,670 3889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,670 3889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,683 3902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:38,702 3921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:38,703 3922 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:38,703 3922 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:38,703 3922 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:38,704 3923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,704 3923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,723 3942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:38,799 4018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:38,799 4018 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:38,800 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:38,800 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:38,800 4019 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:38,848 4067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,851 4070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,874 4093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= [] & nn <= min(ran(queue))))'),ARes),true.

2014-09-30 15:07:38,919 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= [] & nn <= min(ran(queue))))')),[]))
2014-09-30 15:07:38,919 4138 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:38,920 4139 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:38,920 4139 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:38,920 4139 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:38,920 4139 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:38,921 4140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:38,922 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:38,926 4145 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:38,930 4149 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:38,932 4151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:38,932 4151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:39,562 4781 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:39,562 4781 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:39,562 4781 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:39,562 4781 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50943
2014-09-30 15:07:39,562 4781 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50943
2014-09-30 15:07:39,563 4782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:39,563 4782 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10775
2014-09-30 15:07:39,563 4782 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10775
2014-09-30 15:07:39,563 4782 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50943 using key c7add9e216d5315c
2014-09-30 15:07:39,563 4782 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:39,564 4783 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:39,598 4817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:39,722 4941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:39,722 4941 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:39,722 4941 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:39,723 4942 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:39,723 4942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,723 4942 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:39,723 4942 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:39,724 4943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,725 4944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:39,727 4946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:39,728 4947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,728 4947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,729 4948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:39,730 4949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:39,730 4949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,731 4950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,731 4950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:39,732 4951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:39,732 4951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,733 4952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,733 4952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:39,766 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:39,768 4987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,768 4987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,770 4989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:39,781 5000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:39,781 5000 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:39,782 5001 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:39,782 5001 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:39,782 5001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,783 5002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,783 5002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:39,838 5057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:39,839 5058 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:39,839 5058 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:39,839 5058 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:39,839 5058 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:39,843 5062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,843 5062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,851 5070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-09-30 15:07:39,871 5090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-09-30 15:07:39,872 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:39,872 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:39,872 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:39,872 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:39,872 5091 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:39,873 5092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:39,874 5093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:39,878 5097 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:39,885 5104 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:39,886 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:39,886 5105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:40,596 5815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:40,596 5815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:40,596 5815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:40,597 5816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50945
2014-09-30 15:07:40,597 5816 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50945
2014-09-30 15:07:40,597 5816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:40,597 5816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10780
2014-09-30 15:07:40,597 5816 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10780
2014-09-30 15:07:40,597 5816 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50945 using key c7add9e216d5315c
2014-09-30 15:07:40,598 5817 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:40,598 5817 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:40,623 5842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:40,721 5940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:40,721 5940 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:40,722 5941 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:40,722 5941 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:40,722 5941 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:40,722 5941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,722 5941 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:40,723 5942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,724 5943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:40,726 5945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:40,726 5945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,727 5946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,727 5946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:40,729 5948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:40,729 5948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,729 5948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,730 5949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:40,731 5950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:40,731 5950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,732 5951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,732 5951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:40,772 5991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:40,774 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,774 5993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,776 5995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:40,788 6007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:40,788 6007 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:40,788 6007 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:40,789 6008 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:40,789 6008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,789 6008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,790 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:40,847 6066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:40,847 6066 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:40,847 6066 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:40,847 6066 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:40,847 6066 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:40,851 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,851 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,863 6082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= [] & nn >= max(ran(queue))))'),ARes),true.

2014-09-30 15:07:40,917 6136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue /= [] & nn >= max(ran(queue))))')),[]))
2014-09-30 15:07:40,917 6136 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:40,918 6137 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:40,918 6137 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:40,918 6137 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:40,918 6137 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:40,919 6138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:40,919 6138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:40,924 6143 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:40,929 6148 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:40,932 6151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:40,932 6151 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:41,554 6773 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50947
2014-09-30 15:07:41,555 6774 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50947
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10784
2014-09-30 15:07:41,555 6774 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10784
2014-09-30 15:07:41,555 6774 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50947 using key c7add9e216d5315c
2014-09-30 15:07:41,556 6775 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:41,557 6776 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:41,580 6799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:41,657 6876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:41,657 6876 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:41,658 6877 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:41,658 6877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,658 6877 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:41,658 6877 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:41,658 6877 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:41,658 6877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,659 6878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:41,660 6879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:41,661 6880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,661 6880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,661 6880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:41,662 6881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:41,663 6882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,663 6882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,664 6883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_24,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:41,664 6883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:41,665 6884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,665 6884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,666 6885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_24,formula_23],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:41,696 6915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:41,697 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,697 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,698 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:41,708 6927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:41,708 6927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:41,708 6927 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:41,709 6928 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:41,709 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,709 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,710 6929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_24,formula_23],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:41,775 6994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:41,775 6994 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:41,776 6995 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:41,776 6995 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:41,776 6995 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:41,779 6998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,779 6998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,788 7007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] & nn <= min(ran(queue))))'),ARes),true.

2014-09-30 15:07:41,812 7031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] & nn <= min(ran(queue))))')),[]))
2014-09-30 15:07:41,812 7031 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:41,812 7031 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:41,813 7032 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:41,813 7032 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:41,813 7032 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:41,813 7032 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:41,814 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:41,814 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:41,817 7036 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:41,821 7040 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:41,822 7041 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:41,822 7041 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:42,382 7601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50949
2014-09-30 15:07:42,383 7602 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50949
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10788
2014-09-30 15:07:42,383 7602 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10788
2014-09-30 15:07:42,383 7602 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50949 using key c7add9e216d5315c
2014-09-30 15:07:42,384 7603 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:42,385 7604 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:42,402 7621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:42,486 7705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:42,486 7705 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:42,486 7705 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:42,486 7705 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:42,486 7705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,486 7705 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:42,486 7705 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:42,487 7706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,487 7706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:42,489 7708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:42,489 7708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,490 7709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,490 7709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:42,491 7710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:42,492 7711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,492 7711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,493 7712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:42,494 7713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:42,494 7713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,494 7713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,495 7714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_29,formula_31,formula_30],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:42,525 7744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:42,526 7745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,526 7745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,527 7746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:42,542 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:42,542 7761 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:42,543 7762 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:42,543 7762 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:42,543 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,544 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,544 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_29,formula_31,formula_30],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:42,598 7817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:42,598 7817 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:42,598 7817 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:42,599 7818 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:42,599 7818 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:42,601 7820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,601 7820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,607 7826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-09-30 15:07:42,612 7831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-09-30 15:07:42,612 7831 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:42,612 7831 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:42,612 7831 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:42,612 7831 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:42,612 7831 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:42,613 7832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:42,613 7832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:42,617 7836 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:42,623 7842 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:42,624 7843 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:42,625 7844 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:43,192 8411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:43,192 8411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:43,192 8411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:43,193 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50951
2014-09-30 15:07:43,193 8412 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50951
2014-09-30 15:07:43,193 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:43,193 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10792
2014-09-30 15:07:43,193 8412 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10792
2014-09-30 15:07:43,193 8412 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50951 using key c7add9e216d5315c
2014-09-30 15:07:43,194 8413 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:43,195 8414 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:43,211 8430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:43,283 8502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:43,283 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:43,283 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:43,283 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:43,283 8502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,283 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:43,283 8502 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:43,284 8503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,284 8503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:43,286 8505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:43,286 8505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,286 8505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,287 8506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:43,288 8507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:43,288 8507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,288 8507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,289 8508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:43,290 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:43,290 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,290 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,291 8510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_36,formula_38,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:43,321 8540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:43,322 8541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,322 8541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,323 8542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:43,334 8553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:43,335 8554 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:43,335 8554 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:43,335 8554 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:43,335 8554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,335 8554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,336 8555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_36,formula_38,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:43,385 8604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:43,385 8604 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:43,385 8604 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:43,385 8604 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:43,385 8604 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:43,387 8606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,388 8607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,393 8612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue = []))'),ARes),true.

2014-09-30 15:07:43,423 8642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue = []))')),[]))
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:43,423 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:43,424 8643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:43,425 8644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:43,428 8647 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:43,432 8651 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:43,433 8652 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:43,433 8652 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:44,000 9219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:44,000 9219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:44,000 9219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:44,000 9219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50953
2014-09-30 15:07:44,001 9220 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50953
2014-09-30 15:07:44,001 9220 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:44,001 9220 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10796
2014-09-30 15:07:44,001 9220 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10796
2014-09-30 15:07:44,001 9220 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50953 using key c7add9e216d5315c
2014-09-30 15:07:44,002 9221 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:44,003 9222 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:44,022 9241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:44,094 9313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,094 9313 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:44,094 9313 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:44,094 9313 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:44,094 9313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,094 9313 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:44,095 9314 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:44,095 9314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,096 9315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:44,097 9316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,097 9316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,098 9317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,098 9317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:44,099 9318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,099 9318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,100 9319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,100 9319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:44,101 9320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,101 9320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,101 9320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,102 9321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_43,formula_45,formula_44],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:44,138 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:44,139 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,139 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,140 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:44,151 9370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:44,151 9370 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:44,151 9370 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:44,152 9371 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:44,152 9371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,152 9371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,153 9372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_43,formula_45,formula_44],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:44,201 9420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:44,201 9420 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:44,202 9421 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:44,202 9421 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:44,202 9421 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:44,204 9423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,204 9423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,209 9428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),negation(none,member(none,identifier(none,nn),nat_set(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & not(nn : NAT))'),ARes),true.

2014-09-30 15:07:44,232 9451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(21),'21'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & not(nn : NAT))')),[]))
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating nn (not critical [unless failure]) : INTEGER : 21:sup ---> 21:21
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 21
2014-09-30 15:07:44,232 9451 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:44,233 9452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,233 9452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,236 9455 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:44,240 9459 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:44,241 9460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:44,241 9460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:44,839 10058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:44,839 10058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:44,839 10058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:44,839 10058 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50955
2014-09-30 15:07:44,840 10059 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50955
2014-09-30 15:07:44,840 10059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:44,840 10059 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10800
2014-09-30 15:07:44,840 10059 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10800
2014-09-30 15:07:44,840 10059 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50955 using key c7add9e216d5315c
2014-09-30 15:07:44,841 10060 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:44,841 10060 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:44,856 10075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:44,926 10145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,926 10145 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:44,927 10146 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:44,927 10146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,927 10146 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:44,927 10146 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:44,927 10146 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:44,927 10146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,928 10147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:44,929 10148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,930 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,930 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,930 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:44,932 10151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,932 10151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,932 10151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,933 10152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:44,933 10152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:44,933 10152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,934 10153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,935 10154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_50,formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:44,965 10184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:44,966 10185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,966 10185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,967 10186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:44,977 10196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:44,977 10196 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:44,977 10196 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:44,977 10196 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:44,977 10196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:44,978 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:44,978 10197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_50,formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:45,026 10245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:45,026 10245 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:45,027 10246 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:45,027 10246 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:45,027 10246 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:45,029 10248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,029 10248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,037 10256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] & nn >= max(ran(queue))))'),ARes),true.

2014-09-30 15:07:45,074 10293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue /= [] & nn >= max(ran(queue))))')),[]))
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:45,075 10294 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:45,076 10295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,077 10296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,081 10300 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:45,086 10305 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:45,087 10306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:45,087 10306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:45,682 10901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:45,682 10901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:45,682 10901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:45,682 10901 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50957
2014-09-30 15:07:45,682 10901 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50957
2014-09-30 15:07:45,683 10902 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:45,683 10902 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10804
2014-09-30 15:07:45,683 10902 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10804
2014-09-30 15:07:45,683 10902 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50957 using key c7add9e216d5315c
2014-09-30 15:07:45,683 10902 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:45,684 10903 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:45,698 10917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:45,772 10991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:45,772 10991 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:45,773 10992 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:45,773 10992 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:45,773 10992 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:45,773 10992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,773 10992 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:45,774 10993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,774 10993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:45,776 10995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:45,776 10995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,776 10995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,777 10996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:45,778 10997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:45,778 10997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,778 10997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,779 10998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:45,779 10998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:45,780 10999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,780 10999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,781 11000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_59,formula_58],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:45,812 11031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:45,812 11031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,813 11032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,814 11033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:45,824 11043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:45,824 11043 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:45,824 11043 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:45,824 11043 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:45,824 11043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,825 11044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,825 11044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_59,formula_58],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:45,874 11093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:45,874 11093 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:45,875 11094 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:45,875 11094 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:45,875 11094 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:45,876 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,877 11096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,882 11101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))'),ARes),true.

2014-09-30 15:07:45,901 11120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT))')),[]))
2014-09-30 15:07:45,901 11120 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:45,902 11121 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:45,902 11121 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:45,902 11121 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:45,902 11121 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:45,902 11121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:45,902 11121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:45,906 11125 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:45,910 11129 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:45,911 11130 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:45,911 11130 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:46,472 11691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:46,472 11691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:46,472 11691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:46,472 11691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50959
2014-09-30 15:07:46,472 11691 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50959
2014-09-30 15:07:46,473 11692 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:46,473 11692 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10808
2014-09-30 15:07:46,473 11692 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10808
2014-09-30 15:07:46,473 11692 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50959 using key c7add9e216d5315c
2014-09-30 15:07:46,473 11692 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:46,474 11693 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:46,488 11707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:46,565 11784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:46,565 11784 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:46,565 11784 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:46,565 11784 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:46,565 11784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,565 11784 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:46,566 11785 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:46,566 11785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,567 11786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:46,568 11787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:46,568 11787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,569 11788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,569 11788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_65,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:46,571 11790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:46,571 11790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,571 11790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,572 11791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:46,573 11792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:46,573 11792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,574 11793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,574 11793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_64,formula_66,formula_65],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:46,606 11825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:46,607 11826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,608 11827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,609 11828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:46,621 11840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:46,621 11840 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:46,621 11840 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:46,622 11841 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:46,622 11841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,622 11841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,623 11842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_64,formula_66,formula_65],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:46,679 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:46,679 11898 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:46,679 11898 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:46,679 11898 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:46,679 11898 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:46,681 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,681 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:46,686 11905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))))'),ARes),true.

2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-09-30 15:07:46,716 11935 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-09-30 15:07:46,726 11945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),'.'(','(int(2),int(0)),'.'(','(int(3),int(0)),'.'(','(int(4),int(0)),'.'(','(int(5),int(0)),'.'(','(int(6),int(0)),'.'(','(int(7),int(0)),'.'(','(int(8),int(0)),'.'(','(int(9),int(0)),'.'(','(int(10),int(0)),'.'(','(int(11),int(0)),'.'(','(int(12),int(0)),'.'(','(int(13),int(0)),'.'(','(int(14),int(0)),'.'(','(int(15),int(0)),'.'(','(int(16),int(0)),'.'(','(int(17),int(0)),'.'(','(int(18),int(0)),'.'(','(int(19),int(0)),'.'(','(int(20),int(1)),[])))))))))))))))))))),'{(1|->0),(2|->0),(3|->0),(4|->0),(5|->0),(6|->0),(7|->0),(8|->0),(9|->0),(10|->0),(11|->0),(12|->0),(13|->0),(14|->0),(15|->0),(16|->0),(17|->0),(18|->0),(19|->0),(20|->1)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn >= max(ran(queue))))')),[]))
2014-09-30 15:07:46,726 11945 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:46,727 11946 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-09-30 15:07:46,727 11946 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:46,727 11946 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1] &
2014-09-30 15:07:46,727 11946 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:46,727 11946 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:46,729 11948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:46,729 11948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-09-30 15:07:46,729 11948 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-09-30 15:07:46,733 11952 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:46,738 11957 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:46,739 11958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:46,739 11958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:47,333 12552 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:47,333 12552 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:47,333 12552 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:47,333 12552 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50961
2014-09-30 15:07:47,334 12553 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50961
2014-09-30 15:07:47,334 12553 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:47,334 12553 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10814
2014-09-30 15:07:47,334 12553 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10814
2014-09-30 15:07:47,334 12553 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50961 using key c7add9e216d5315c
2014-09-30 15:07:47,335 12554 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:47,336 12555 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:47,352 12571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:47,437 12656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:47,437 12656 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:47,438 12657 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:47,438 12657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,438 12657 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:47,438 12657 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:47,438 12657 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:47,439 12658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,440 12659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:47,442 12661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:47,443 12662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,443 12662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,444 12663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:47,445 12664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:47,446 12665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,446 12665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,447 12666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:47,448 12667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:47,448 12667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,448 12667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,449 12668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_73,formula_72],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:47,483 12702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:47,484 12703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,485 12704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,486 12705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:47,504 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:47,504 12723 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:47,504 12723 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:47,505 12724 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:47,505 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,505 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,506 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_73,formula_72],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:47,576 12795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:47,576 12795 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:47,577 12796 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:47,577 12796 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:47,577 12796 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:47,579 12798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,579 12798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:47,587 12806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),greater_equal(none,identifier(none,nn),max(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))'),ARes),true.

2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! max applied to empty set
2014-09-30 15:07:47,633 12852 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-09-30 15:07:47,637 12856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn >= max(ran(queue))))')),[]))
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:47,637 12856 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:47,638 12857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:47,638 12857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('max applied to empty set;;',[])),[]))
2014-09-30 15:07:47,638 12857 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-09-30 15:07:47,642 12861 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:47,646 12865 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:47,648 12867 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:47,648 12867 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:48,258 13477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:48,258 13477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:48,258 13477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:48,258 13477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50963
2014-09-30 15:07:48,259 13478 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50963
2014-09-30 15:07:48,259 13478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:48,259 13478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10818
2014-09-30 15:07:48,259 13478 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10818
2014-09-30 15:07:48,259 13478 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50963 using key c7add9e216d5315c
2014-09-30 15:07:48,260 13479 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:48,261 13480 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:48,274 13493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:48,345 13564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:48,345 13564 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:48,346 13565 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:48,346 13565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,346 13565 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:48,346 13565 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:48,346 13565 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:48,347 13566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,347 13566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_78,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:48,349 13568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:48,349 13568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,349 13568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,350 13569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:48,351 13570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:48,351 13570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,351 13570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,352 13571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:48,352 13571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:48,353 13572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,353 13572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,353 13572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_78,formula_80,formula_79],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:48,384 13603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:48,385 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,385 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,386 13605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:48,396 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:48,396 13615 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:48,396 13615 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:48,396 13615 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:48,396 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,397 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,397 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_78,formula_80,formula_79],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:48,447 13666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:48,447 13666 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:48,447 13666 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:48,447 13666 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:48,447 13666 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:48,449 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,449 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,454 13673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),equal(none,identifier(none,queue),empty_sequence(none)))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))'),ARes),true.

2014-09-30 15:07:48,458 13677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,[],{}),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (queue = []))')),[]))
2014-09-30 15:07:48,458 13677 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:48,458 13677 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:48,458 13677 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [] &
2014-09-30 15:07:48,458 13677 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:48,458 13677 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:48,459 13678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:48,459 13678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:48,462 13681 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:48,466 13685 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:48,467 13686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:48,468 13687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:49,047 14266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:49,047 14266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:49,047 14266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:49,047 14266 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50965
2014-09-30 15:07:49,048 14267 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50965
2014-09-30 15:07:49,048 14267 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:49,048 14267 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10822
2014-09-30 15:07:49,048 14267 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10822
2014-09-30 15:07:49,048 14267 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50965 using key c7add9e216d5315c
2014-09-30 15:07:49,048 14267 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:49,049 14268 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:49,063 14282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:49,135 14354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:49,135 14354 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:49,135 14354 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:49,135 14354 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:49,135 14354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,135 14354 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:49,135 14354 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:49,136 14355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,136 14355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:49,138 14357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:49,138 14357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,138 14357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,139 14358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:49,140 14359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:49,140 14359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,140 14359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,141 14360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:49,141 14360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:49,142 14361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,142 14361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,142 14361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_85,formula_87,formula_86],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:49,172 14391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:49,172 14391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,173 14392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,174 14393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:49,183 14402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:49,183 14402 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:49,184 14403 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:49,184 14403 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:49,184 14403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,184 14403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,185 14404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_85,formula_87,formula_86],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:49,234 14453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:49,234 14453 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:49,234 14453 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:49,234 14453 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:49,234 14453 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:49,236 14455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,236 14455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,241 14460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,equal(none,identifier(none,queue),empty_sequence(none))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue = []))'),ARes),true.

2014-09-30 15:07:49,264 14483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(queue = []))')),[]))
2014-09-30 15:07:49,264 14483 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:49,264 14483 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:07:49,264 14483 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:49,264 14483 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:49,264 14483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:49,264 14483 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:49,265 14484 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:49,265 14484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:49,268 14487 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:49,273 14492 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:49,273 14492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:49,274 14493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:49,929 15148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:49,930 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:49,930 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:49,930 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50967
2014-09-30 15:07:49,930 15149 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50967
2014-09-30 15:07:49,930 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:49,930 15149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10826
2014-09-30 15:07:49,931 15150 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10826
2014-09-30 15:07:49,931 15150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50967 using key c7add9e216d5315c
2014-09-30 15:07:49,931 15150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:49,932 15151 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:49,953 15172 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:50,032 15251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,033 15252 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:50,033 15252 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:50,033 15252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,033 15252 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:50,033 15252 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:50,033 15252 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:50,034 15253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,034 15253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:50,036 15255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,036 15255 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,037 15256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,037 15256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:50,038 15257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,038 15257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,039 15258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,039 15258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:50,040 15259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,041 15260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,041 15260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,042 15261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_92,formula_94,formula_93],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:50,071 15290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:50,072 15291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,073 15292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,074 15293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:50,083 15302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:50,083 15302 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:50,084 15303 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:50,084 15303 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:50,084 15303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,084 15303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,085 15304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_92,formula_94,formula_93],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:50,139 15358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:50,139 15358 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:50,140 15359 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:50,140 15359 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:50,140 15359 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:50,141 15360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,142 15361 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,147 15366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))'),ARes),true.

2014-09-30 15:07:50,176 15395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('NOT-WELL-DEFINED','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))))')),[]))
2014-09-30 15:07:50,176 15395 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:07:50,176 15395 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is NOT-WELL-DEFINED (TRUE)
2014-09-30 15:07:50,176 15395 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:07:50,177 15396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-09-30 15:07:50,177 15396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors','.'('min applied to empty set;;',[])),[]))
2014-09-30 15:07:50,177 15396 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-09-30 15:07:50,178 15397 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-09-30 15:07:50,178 15397 [main] ERROR de.prob.animator.AnimatorImpl Method:
				getErrors Line: 80 - ProB raised exception(s):

2014-09-30 15:07:50,178 15397 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-09-30 15:07:50,178 15397 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-09-30 15:07:50,180 15399 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:07:50,186 15405 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:07:50,187 15406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:07:50,187 15406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:07:50,817 16036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:07:50,817 16036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:07:50,817 16036 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:07:50,818 16037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50969
2014-09-30 15:07:50,818 16037 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50969
2014-09-30 15:07:50,818 16037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:07:50,818 16037 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10830
2014-09-30 15:07:50,818 16037 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10830
2014-09-30 15:07:50,818 16037 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50969 using key c7add9e216d5315c
2014-09-30 15:07:50,819 16038 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:07:50,820 16039 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:07:50,833 16052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:07:50,923 16142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,923 16142 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:07:50,923 16142 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:07:50,923 16142 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:07:50,923 16142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,924 16143 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:07:50,924 16143 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:07:50,924 16143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,925 16144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:07:50,926 16145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,927 16146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,927 16146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,927 16146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:07:50,928 16147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,929 16148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,929 16148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,929 16148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:07:50,930 16149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:07:50,930 16149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,931 16150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,931 16150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_99,formula_101,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:07:50,962 16181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:50,963 16182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,963 16182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,964 16183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:07:50,975 16194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:07:50,975 16194 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:07:50,975 16194 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:07:50,975 16194 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:07:50,975 16194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:50,976 16195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:50,976 16195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_99,formula_101,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:07:51,027 16246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:07:51,027 16246 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:07:51,027 16246 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:07:51,027 16246 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:07:51,027 16246 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:07:51,028 16247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:07:51,029 16248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:07:51,034 16253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))))'),ARes),true.

2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! well_definedness_error
2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An error occurred !
2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! source(well_definedness_error)
2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! min applied to empty set
2014-09-30 15:07:51,076 16295 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! [nodeid(none)]
2014-09-30 15:10:14,377 2860 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:10:14,398 2881 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:10:14,401 2884 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:10:14,401 2884 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:10:14,982 3465 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:10:14,982 3465 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:10:14,982 3465 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:10:14,982 3465 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50983
2014-09-30 15:10:14,983 3466 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50983
2014-09-30 15:10:14,983 3466 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:10:14,983 3466 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10838
2014-09-30 15:10:14,983 3466 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10838
2014-09-30 15:10:14,984 3467 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50983 using key 11b1dc10ca3fe74f
2014-09-30 15:10:14,984 3467 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:10:14,985 3468 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:10:15,159 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:10:15,240 3723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:15,240 3723 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:10:15,240 3723 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:10:15,240 3723 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:10:15,241 3724 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:10:15,241 3724 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:10:15,256 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,257 3740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,259 3742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:10:15,261 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:15,261 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,261 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,262 3745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:10:15,263 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:15,263 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,264 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,265 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:10:15,265 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:15,265 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,266 3749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,283 3766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:10:15,334 3817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:10:15,338 3821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,339 3822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,352 3835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:10:15,370 3853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:10:15,372 3855 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:10:15,372 3855 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:10:15,372 3855 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:10:15,372 3855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,373 3856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,385 3868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:10:15,463 3946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:10:15,463 3946 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:10:15,464 3947 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:10:15,464 3947 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:10:15,464 3947 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:10:15,512 3995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,513 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,539 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:10:15,577 4060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-09-30 15:10:15,577 4060 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:10:15,578 4061 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:10:15,578 4061 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:10:15,578 4061 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:10:15,578 4061 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:10:15,578 4061 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:10:15,580 4063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:15,581 4064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:15,585 4068 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:10:15,590 4073 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:10:15,591 4074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:10:15,591 4074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:10:16,216 4699 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:10:16,217 4700 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:10:16,217 4700 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:10:16,217 4700 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 50985
2014-09-30 15:10:16,217 4700 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 50985
2014-09-30 15:10:16,218 4701 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:10:16,218 4701 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10842
2014-09-30 15:10:16,218 4701 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10842
2014-09-30 15:10:16,218 4701 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 50985 using key 11b1dc10ca3fe74f
2014-09-30 15:10:16,218 4701 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:10:16,219 4702 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:10:16,267 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:10:16,366 4849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:16,367 4850 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:10:16,367 4850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,367 4850 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:10:16,367 4850 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:10:16,367 4850 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:10:16,367 4850 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:10:16,368 4851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,368 4851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:10:16,370 4853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:16,371 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,371 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,372 4855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:10:16,373 4856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:16,373 4856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,373 4856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,374 4857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:10:16,375 4858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:10:16,375 4858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,376 4859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,376 4859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:10:16,409 4892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:10:16,411 4894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,411 4894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,413 4896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:10:16,430 4913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:10:16,430 4913 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:10:16,431 4914 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:10:16,431 4914 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:10:16,431 4914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,432 4915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,432 4915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:10:16,488 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:10:16,488 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:10:16,488 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:10:16,488 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:10:16,488 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:10:16,493 4976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:10:16,494 4977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:10:16,503 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:13:18,375 2889 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:13:18,389 2903 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:13:18,392 2906 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:13:18,392 2906 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:13:18,963 3477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:13:18,963 3477 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:13:18,964 3478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:13:18,964 3478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51003
2014-09-30 15:13:18,964 3478 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51003
2014-09-30 15:13:18,964 3478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:13:18,964 3478 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10856
2014-09-30 15:13:18,964 3478 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10856
2014-09-30 15:13:18,965 3479 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51003 using key 836d66cf5d8878db
2014-09-30 15:13:18,966 3480 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:13:18,967 3481 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:13:19,132 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:13:19,213 3727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:19,213 3727 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:13:19,213 3727 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:13:19,213 3727 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:13:19,213 3727 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:13:19,213 3727 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:13:19,229 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,230 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,232 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:13:19,233 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:19,234 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,234 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,235 3749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:13:19,236 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:19,236 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,236 3750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,238 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:13:19,238 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:19,239 3753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,239 3753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,253 3767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:13:19,295 3809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:13:19,298 3812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,299 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,311 3825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:13:19,329 3843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:13:19,329 3843 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:13:19,330 3844 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:13:19,330 3844 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:13:19,331 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,331 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,347 3861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:13:19,430 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:13:19,430 3944 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:13:19,430 3944 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:13:19,430 3944 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:13:19,430 3944 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:13:19,452 3966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,453 3967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,503 4017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:13:19,551 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-09-30 15:13:19,551 4065 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:13:19,552 4066 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:13:19,552 4066 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:13:19,552 4066 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:13:19,552 4066 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:13:19,552 4066 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:13:19,554 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:19,555 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:19,559 4073 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:13:19,565 4079 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:13:19,566 4080 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:13:19,566 4080 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:13:20,213 4727 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:13:20,214 4728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:13:20,214 4728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:13:20,214 4728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51005
2014-09-30 15:13:20,214 4728 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51005
2014-09-30 15:13:20,214 4728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:13:20,214 4728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10860
2014-09-30 15:13:20,215 4729 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10860
2014-09-30 15:13:20,215 4729 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51005 using key 836d66cf5d8878db
2014-09-30 15:13:20,215 4729 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:13:20,216 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:13:20,247 4761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PriorityQueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:13:20,351 4865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:20,351 4865 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:13:20,352 4866 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:13:20,352 4866 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - *** Warning: main filename does not appear in Filenames list: 
2014-09-30 15:13:20,352 4866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,352 4866 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /Users/ernestocid/Temp/MCDC/PriorityQueue.mch
2014-09-30 15:13:20,352 4866 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - [/Users/ernestocid/Temp/MCDC/Priorityqueue.mch]
2014-09-30 15:13:20,353 4867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,353 4867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:13:20,355 4869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:20,355 4869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,355 4869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,356 4870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:13:20,357 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:20,357 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,357 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,358 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:13:20,359 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:13:20,359 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,359 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,360 4874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:13:20,393 4907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:13:20,395 4909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,396 4910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,398 4912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:13:20,410 4924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:13:20,410 4924 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:13:20,410 4924 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:13:20,410 4924 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:13:20,411 4925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,411 4925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,412 4926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:13:20,483 4997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:13:20,483 4997 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:13:20,484 4998 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:13:20,484 4998 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:13:20,484 4998 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:13:20,489 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:13:20,490 5004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:13:20,499 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:28:37,103 2624 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:28:37,115 2636 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:28:37,119 2640 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:28:37,119 2640 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:28:37,702 3223 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:28:37,702 3223 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:28:37,703 3224 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:28:37,703 3224 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51074
2014-09-30 15:28:37,703 3224 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51074
2014-09-30 15:28:37,703 3224 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:28:37,703 3224 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10922
2014-09-30 15:28:37,703 3224 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10922
2014-09-30 15:28:37,704 3225 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51074 using key c9bbec365b7b753e
2014-09-30 15:28:37,705 3226 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:28:37,706 3227 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:28:37,882 3403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:28:37,954 3475 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:28:37,954 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:37,955 3476 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:28:37,970 3491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:37,971 3492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:37,974 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:28:37,975 3496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:37,976 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:37,976 3497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:37,977 3498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:28:37,978 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:37,978 3499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:37,979 3500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:37,980 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:28:37,980 3501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:37,981 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:37,981 3502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:38,001 3522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_1,formula_3,formula_2],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:28:38,051 3572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:28:38,054 3575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:38,055 3576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:38,066 3587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:28:38,084 3605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:28:38,084 3605 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:28:38,084 3605 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:28:38,084 3605 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:28:38,085 3606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:38,086 3607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:38,102 3623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_1,formula_3,formula_2],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:28:38,183 3704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:28:38,183 3704 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:28:38,184 3705 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:28:38,184 3705 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:28:38,184 3705 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:28:38,240 3761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:38,240 3761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:38,260 3781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:28:38,295 3816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(queue,'.'(','(int(1),int(0)),[]),'{(1|->0)}'),'.'(bind(nn,int(0),'0'),[])),'#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & (nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))')),[]))
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating queue (not critical [unless failure]) : seq (length) : inf ---> 20
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over queue,nn is TRUE
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        queue = [0] &
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        nn = 0
2014-09-30 15:28:38,296 3817 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:28:38,298 3819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:38,298 3819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:38,302 3823 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:28:38,308 3829 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:28:38,309 3830 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:28:38,309 3830 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:28:38,990 4511 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:28:38,990 4511 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:28:38,990 4511 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:28:38,990 4511 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51076
2014-09-30 15:28:38,991 4512 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51076
2014-09-30 15:28:38,991 4512 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:28:38,991 4512 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10926
2014-09-30 15:28:38,991 4512 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10926
2014-09-30 15:28:38,991 4512 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51076 using key c9bbec365b7b753e
2014-09-30 15:28:38,992 4513 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:28:38,993 4514 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:28:39,040 4561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Priorityqueue.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Priorityqueue',['/Users/ernestocid/Temp/MCDC/Priorityqueue.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Priorityqueue',[]),[variables(4,[identifier(5,queue)]),invariant(6,conjunct(7,member(8,identifier(9,queue),seq(10,nat_set(11))),forall(12,[identifier(13,xx)],implication(14,member(15,identifier(16,xx),interval(17,integer(18,1),minus_or_set_subtract(19,size(20,identifier(21,queue)),integer(22,1)))),less_equal(23,function(24,identifier(25,queue),[identifier(26,xx)]),function(27,identifier(28,queue),[add(29,identifier(30,xx),integer(31,1))])))))),initialisation(32,assign(33,[identifier(34,queue)],[empty_sequence(35)])),operations(36,[operation(37,identifier(37,insert),[],[identifier(38,nn)],precondition(39,member(40,identifier(41,nn),nat_set(42)),select(43,equal(44,identifier(45,queue),empty_sequence(46)),assign(47,[identifier(48,queue)],[sequence_extension(49,[identifier(50,nn)])]),[select_when(51,conjunct(52,not_equal(53,identifier(54,queue),empty_sequence(55)),less_equal(56,identifier(57,nn),min(58,range(59,identifier(60,queue))))),assign(61,[identifier(62,queue)],[insert_front(63,identifier(64,nn),identifier(65,queue))])),select_when(66,conjunct(67,not_equal(68,identifier(69,queue),empty_sequence(70)),greater_equal(71,identifier(72,nn),max(73,range(74,identifier(75,queue))))),assign(76,[identifier(77,queue)],[insert_tail(78,identifier(79,queue),identifier(80,nn))]))],any(81,[identifier(82,xx)],conjunct(83,conjunct(84,member(85,identifier(86,xx),interval(87,integer(88,1),minus_or_set_subtract(89,size(90,identifier(91,queue)),integer(92,1)))),less_equal(93,function(94,identifier(95,queue),[identifier(96,xx)]),identifier(97,nn))),less_equal(98,identifier(99,nn),function(100,identifier(101,queue),[add(102,identifier(103,xx),integer(104,1))]))),assign(105,[identifier(106,queue)],[concat(107,concat(108,restrict_front(109,identifier(110,queue),identifier(111,xx)),sequence_extension(112,[identifier(113,nn)])),restrict_tail(114,identifier(115,queue),identifier(116,xx)))]))))),operation(117,identifier(117,extract),[identifier(118,nn)],[],precondition(119,not_equal(120,identifier(121,queue),empty_sequence(122)),parallel(123,[assign(124,[identifier(125,nn)],[first(126,identifier(127,queue))]),assign(128,[identifier(129,queue)],[tail(130,identifier(131,queue))])])))])]))]),start_animation,true.

2014-09-30 15:28:39,139 4660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:39,139 4660 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:28:39,140 4661 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Priorityqueue,[/Users/ernestocid/Temp/MCDC/Priorityqueue.mch])
2014-09-30 15:28:39,140 4661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,141 4662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,142 4663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(identifier(none,queue),'#EXPRESSION',queue)),true.

2014-09-30 15:28:39,144 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:39,144 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,144 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,145 4666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,queue),seq(none,nat_set(none))),'#PREDICATE','queue:seq(NAT)')),true.

2014-09-30 15:28:39,146 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:39,146 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,147 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,147 4668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))])))),'#PREDICATE','!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))')),true.

2014-09-30 15:28:39,148 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:28:39,148 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,149 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,149 4670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_10,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:28:39,182 4703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:28:39,184 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,184 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,186 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:28:39,199 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:28:39,199 4720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:28:39,199 4720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:28:39,199 4720 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:28:39,200 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,200 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,201 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_10,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:28:39,256 4777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,1),'.'(op(2,0,2),'.'(op(3,0,3),'.'(op(4,0,4),'.'(op(5,0,5),'.'(op(6,0,6),'.'(op(7,0,7),'.'(op(8,0,8),'.'(op(9,0,9),'.'(op(10,0,10),[]))))))))))),'.'(=('BResults','.'(result(v([],[]),[],queue),'.'(result('TRUE',[],'!xx.(xx:1..size(queue)-1 => queue(xx)<=queue(xx+1))'),'.'(result('TRUE',[],'queue:seq(NAT)'),[])))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:28:39,256 4777 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:28:39,257 4778 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - []
2014-09-30 15:28:39,257 4778 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over xx is TRUE
2014-09-30 15:28:39,257 4778 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:28:39,261 4782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:28:39,261 4782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:28:39,274 4795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,queue),identifier(none,nn)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,queue),seq(none,nat_set(none))),forall(none,[identifier(none,xx)],implication(none,member(none,identifier(none,xx),interval(none,integer(none,1),minus_or_set_subtract(none,size(none,identifier(none,queue)),integer(none,1)))),less_equal(none,function(none,identifier(none,queue),[identifier(none,xx)]),function(none,identifier(none,queue),[add(none,identifier(none,xx),integer(none,1))]))))),member(none,identifier(none,nn),nat_set(none))),negation(none,less_equal(none,identifier(none,nn),min(none,range(none,identifier(none,queue)))))),equivalence(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,queue),empty_sequence(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#queue,nn.((queue : seq(NAT) & !(xx).((xx : 1..((size(queue) - 1))) => (queue(xx) <= queue((xx + 1))))) & (nn : NAT) & not(nn <= min(ran(queue))) & ((queue /= [] & 1=1) <=> not(queue /= [] & 1=2)))'),ARes),true.

2014-09-30 15:30:54,997 2610 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:30:55,007 2620 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:30:55,011 2624 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:30:55,011 2624 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:30:55,580 3193 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:30:55,580 3193 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:30:55,580 3193 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:30:55,580 3193 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51093
2014-09-30 15:30:55,581 3194 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51093
2014-09-30 15:30:55,581 3194 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:30:55,581 3194 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10946
2014-09-30 15:30:55,581 3194 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10946
2014-09-30 15:30:55,582 3195 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51093 using key fae7ce90de6205ed
2014-09-30 15:30:55,582 3195 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:30:55,584 3197 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:30:55,751 3364 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:30:55,826 3439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,826 3439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:30:55,826 3439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:30:55,843 3456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,844 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,846 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:30:55,848 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,848 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,848 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,849 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:30:55,850 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,850 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,850 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,851 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:30:55,851 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,851 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,852 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,852 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:30:55,853 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,853 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,853 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,854 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:30:55,855 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,855 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,856 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,856 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:30:55,857 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,857 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,857 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,858 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:30:55,859 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,859 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,859 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,860 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:30:55,860 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,861 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,861 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,862 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:30:55,862 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,862 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,863 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,863 3476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:30:55,864 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:55,864 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,864 3477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,882 3495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:30:55,971 3584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:55,976 3589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:55,977 3590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:55,990 3603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:30:56,007 3620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:30:56,007 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:30:56,007 3620 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:30:56,008 3621 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:30:56,009 3622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,009 3622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,026 3639 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:30:56,070 3683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:56,070 3683 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:30:56,071 3684 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:56,072 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:30:56,073 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:30:56,073 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:56,073 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:30:56,073 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:56,073 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:56,130 3743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,131 3744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,152 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:30:56,162 3775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:30:56,162 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:30:56,162 3775 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:30:56,163 3776 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:56,165 3778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,166 3779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,172 3785 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:30:56,178 3791 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:30:56,179 3792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:30:56,179 3792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:30:56,817 4430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:30:56,817 4430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:30:56,817 4430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:30:56,818 4431 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51095
2014-09-30 15:30:56,818 4431 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51095
2014-09-30 15:30:56,818 4431 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:30:56,818 4431 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10950
2014-09-30 15:30:56,818 4431 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10950
2014-09-30 15:30:56,818 4431 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51095 using key fae7ce90de6205ed
2014-09-30 15:30:56,819 4432 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:30:56,819 4432 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:30:56,864 4477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:30:56,962 4575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,962 4575 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:30:56,962 4575 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:30:56,962 4575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,963 4576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,964 4577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:30:56,965 4578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,966 4579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,966 4579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,966 4579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:30:56,967 4580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,967 4580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,967 4580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,968 4581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:30:56,968 4581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,968 4581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,969 4582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,970 4583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:30:56,970 4583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,970 4583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,971 4584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,971 4584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:30:56,972 4585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,972 4585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,973 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,973 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:30:56,974 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,974 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,974 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,975 4588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:30:56,976 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,976 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,976 4589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,977 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:30:56,977 4590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,978 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,978 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,979 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:30:56,979 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,979 4592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,980 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,980 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:30:56,980 4593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:56,981 4594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:56,981 4594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:56,982 4595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:30:57,052 4665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:57,054 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,054 4667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,056 4669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:30:57,075 4688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:30:57,075 4688 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:30:57,075 4688 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:30:57,076 4689 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:30:57,076 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,076 4689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,077 4690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:30:57,123 4736 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:57,123 4736 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:57,123 4736 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:30:57,123 4736 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:57,123 4736 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:30:57,124 4737 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:57,125 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:57,128 4741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,129 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,139 4752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:30:57,142 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:30:57,143 4756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,144 4757 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:30:57,144 4757 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:57,144 4757 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:30:57,144 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,148 4761 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:30:57,152 4765 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:30:57,154 4767 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:30:57,154 4767 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:30:57,834 5447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:30:57,834 5447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:30:57,835 5448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:30:57,835 5448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51097
2014-09-30 15:30:57,835 5448 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51097
2014-09-30 15:30:57,835 5448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:30:57,835 5448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10954
2014-09-30 15:30:57,835 5448 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10954
2014-09-30 15:30:57,835 5448 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51097 using key fae7ce90de6205ed
2014-09-30 15:30:57,836 5449 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:30:57,837 5450 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:30:57,863 5476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:30:57,955 5568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,956 5569 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:30:57,956 5569 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:30:57,956 5569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,957 5570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,957 5570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:30:57,959 5572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,959 5572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,960 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,960 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:30:57,960 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,961 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,961 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,961 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:30:57,962 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,962 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,962 5575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,963 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:30:57,963 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,964 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,964 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,965 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:30:57,966 5579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,967 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,967 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,968 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:30:57,968 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,968 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,969 5582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,969 5582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:30:57,970 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,970 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,970 5583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,971 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:30:57,971 5584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,972 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,972 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,972 5585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:30:57,973 5586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,973 5586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,973 5586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,974 5587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:30:57,974 5587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:57,974 5587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:57,975 5588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:57,975 5588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:30:58,040 5653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:58,041 5654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,042 5655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,043 5656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:30:58,058 5671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:30:58,058 5671 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:30:58,059 5672 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:30:58,059 5672 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:30:58,059 5672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,060 5673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,060 5673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:30:58,100 5713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:58,100 5713 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:58,100 5713 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:30:58,100 5713 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:58,100 5713 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:30:58,101 5714 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:58,102 5715 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:58,105 5718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,105 5718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,114 5727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:30:58,122 5735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:30:58,122 5735 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:30:58,123 5736 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:58,124 5737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,124 5737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,129 5742 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:30:58,134 5747 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:30:58,135 5748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:30:58,135 5748 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:30:58,766 6379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:30:58,766 6379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:30:58,767 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:30:58,767 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51099
2014-09-30 15:30:58,767 6380 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51099
2014-09-30 15:30:58,767 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:30:58,767 6380 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10958
2014-09-30 15:30:58,767 6380 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10958
2014-09-30 15:30:58,767 6380 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51099 using key fae7ce90de6205ed
2014-09-30 15:30:58,768 6381 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:30:58,769 6382 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:30:58,796 6409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:30:58,870 6483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,870 6483 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:30:58,871 6484 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:30:58,871 6484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,872 6485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,872 6485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:30:58,874 6487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,875 6488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,875 6488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,875 6488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:30:58,876 6489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,876 6489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,876 6489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,877 6490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:30:58,877 6490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,877 6490 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,878 6491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,878 6491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:30:58,878 6491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,879 6492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,879 6492 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,880 6493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:30:58,881 6494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,881 6494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,882 6495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,883 6496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:30:58,883 6496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,883 6496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,884 6497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,884 6497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:30:58,885 6498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,885 6498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,886 6499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,886 6499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:30:58,887 6500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,887 6500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,887 6500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,888 6501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:30:58,888 6501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,888 6501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,888 6501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,889 6502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:30:58,889 6502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:30:58,889 6502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,890 6503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,890 6503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:30:58,962 6575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:58,963 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,964 6577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,965 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:30:58,977 6590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:30:58,977 6590 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:30:58,977 6590 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:30:58,977 6590 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:30:58,978 6591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:58,978 6591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:58,979 6592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:30:59,020 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:59,020 6633 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:59,021 6634 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:30:59,024 6637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:59,024 6637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:30:59,031 6644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:30:59,039 6652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:30:59,039 6652 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:30:59,041 6654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:30:59,041 6654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:11,855 2696 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:34:11,869 2710 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:34:11,872 2713 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:34:11,872 2713 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:34:12,433 3274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:34:12,433 3274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:34:12,433 3274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:34:12,433 3274 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51109
2014-09-30 15:34:12,433 3274 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51109
2014-09-30 15:34:12,434 3275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:34:12,434 3275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10971
2014-09-30 15:34:12,434 3275 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10971
2014-09-30 15:34:12,435 3276 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51109 using key e56be14169c317f9
2014-09-30 15:34:12,435 3276 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:34:12,436 3277 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:34:12,600 3441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:34:12,679 3520 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:34:12,679 3520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,679 3520 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:34:12,695 3536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,696 3537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,698 3539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:34:12,700 3541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,700 3541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,701 3542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,702 3543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:34:12,702 3543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,703 3544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,703 3544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,704 3545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:34:12,704 3545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,704 3545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,705 3546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,705 3546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:34:12,706 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,706 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,706 3547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,707 3548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:34:12,708 3549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,709 3550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,709 3550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,710 3551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:34:12,711 3552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,711 3552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,711 3552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,712 3553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:34:12,712 3553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,713 3554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,713 3554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,714 3555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:34:12,714 3555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,715 3556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,715 3556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,716 3557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:34:12,716 3557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,716 3557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,717 3558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,717 3558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:34:12,718 3559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:12,718 3559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,719 3560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,733 3574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:34:12,832 3673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:12,838 3679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,838 3679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,851 3692 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:34:12,868 3709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:34:12,869 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:34:12,869 3710 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:34:12,870 3711 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:34:12,870 3711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:12,871 3712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:12,888 3729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:12,949 3790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:12,949 3790 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:12,950 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:13,005 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,005 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,035 3876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:34:13,039 3880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:34:13,039 3880 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:34:13,039 3880 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:13,039 3880 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:34:13,040 3881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,041 3882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,046 3887 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:34:13,055 3896 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:34:13,055 3896 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:34:13,056 3897 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:34:13,723 4564 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:34:13,723 4564 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:34:13,723 4564 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:34:13,724 4565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51111
2014-09-30 15:34:13,724 4565 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51111
2014-09-30 15:34:13,724 4565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:34:13,724 4565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10975
2014-09-30 15:34:13,724 4565 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10975
2014-09-30 15:34:13,724 4565 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51111 using key e56be14169c317f9
2014-09-30 15:34:13,725 4566 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:34:13,726 4567 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:34:13,769 4610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:34:13,866 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,866 4707 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:34:13,866 4707 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:34:13,866 4707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,867 4708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,868 4709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:34:13,869 4710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,869 4710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,870 4711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,870 4711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:34:13,871 4712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,871 4712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,871 4712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,872 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:34:13,872 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,872 4713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,873 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,873 4714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:34:13,874 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,874 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,874 4715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,875 4716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:34:13,877 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,877 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,877 4718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,878 4719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:34:13,878 4719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,879 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,879 4720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,880 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:34:13,880 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,880 4721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,881 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,881 4722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:34:13,882 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,882 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,882 4723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,883 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:34:13,883 4724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,884 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,884 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,884 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:34:13,885 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:13,885 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,885 4726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,886 4727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:34:13,955 4796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:13,957 4798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,957 4798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,959 4800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:34:13,978 4819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:34:13,979 4820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:13,979 4820 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:34:13,979 4820 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:34:13,979 4820 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:34:13,980 4821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:13,981 4822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:34:14,038 4879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:14,038 4879 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:14,038 4879 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:14,039 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:34:14,040 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:14,041 4882 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:14,042 4883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,043 4884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,052 4893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:34:14,061 4902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:34:14,061 4902 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:34:14,062 4903 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:14,064 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,064 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,068 4909 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:34:14,073 4914 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:34:14,074 4915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:34:14,074 4915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:34:14,774 5615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:34:14,774 5615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:34:14,775 5616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:34:14,775 5616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51113
2014-09-30 15:34:14,775 5616 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51113
2014-09-30 15:34:14,775 5616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:34:14,775 5616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10979
2014-09-30 15:34:14,776 5617 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10979
2014-09-30 15:34:14,776 5617 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51113 using key e56be14169c317f9
2014-09-30 15:34:14,776 5617 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:34:14,778 5619 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:34:14,810 5651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:34:14,898 5739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,898 5739 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:34:14,899 5740 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:34:14,899 5740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,900 5741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,900 5741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:34:14,902 5743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,902 5743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,902 5743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,903 5744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:34:14,903 5744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,903 5744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,903 5744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,904 5745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:34:14,904 5745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,904 5745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,905 5746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,905 5746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:34:14,906 5747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,906 5747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,907 5748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,907 5748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:34:14,909 5750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,909 5750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,910 5751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,910 5751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:34:14,910 5751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,911 5752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,911 5752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,911 5752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:34:14,912 5753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,912 5753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,912 5753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,913 5754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:34:14,913 5754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,914 5755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,914 5755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,914 5755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:34:14,915 5756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,915 5756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,915 5756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,916 5757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:34:14,916 5757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:14,916 5757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,916 5757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,917 5758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:34:14,982 5823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:14,984 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,984 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,986 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:34:14,997 5838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:34:14,997 5838 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:34:14,997 5838 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:34:14,997 5838 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:34:14,998 5839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:14,998 5839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:14,998 5839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:34:15,046 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:15,046 5887 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,046 5887 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:34:15,046 5887 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,046 5887 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,046 5887 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:15,047 5888 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,048 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,051 5892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,051 5892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,060 5901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:34:15,067 5908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:34:15,068 5909 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:34:15,069 5910 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:34:15,069 5910 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,069 5910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,070 5911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,075 5916 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:34:15,080 5921 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:34:15,081 5922 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:34:15,081 5922 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:34:15,671 6512 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:34:15,671 6512 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:34:15,671 6512 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:34:15,672 6513 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51115
2014-09-30 15:34:15,672 6513 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51115
2014-09-30 15:34:15,672 6513 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:34:15,672 6513 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10983
2014-09-30 15:34:15,672 6513 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10983
2014-09-30 15:34:15,672 6513 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51115 using key e56be14169c317f9
2014-09-30 15:34:15,673 6514 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:34:15,674 6515 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:34:15,693 6534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:34:15,775 6616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,775 6616 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:34:15,775 6616 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:34:15,776 6617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,776 6617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,777 6618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:34:15,779 6620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,779 6620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,780 6621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,780 6621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:34:15,782 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,782 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,782 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,783 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:34:15,783 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,783 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,784 6625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,784 6625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:34:15,785 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,785 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,785 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,786 6627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:34:15,787 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,787 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,787 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,788 6629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:34:15,788 6629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,789 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,789 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,789 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:34:15,790 6631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,790 6631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,791 6632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,791 6632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:34:15,792 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,792 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,792 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,792 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:34:15,793 6634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,793 6634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,793 6634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,794 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:34:15,794 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:34:15,794 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,795 6636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,795 6636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:34:15,853 6694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:15,854 6695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,854 6695 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,855 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:34:15,866 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:34:15,866 6707 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:34:15,866 6707 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:34:15,866 6707 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:34:15,866 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,867 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,867 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:34:15,903 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,903 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,904 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:34:15,906 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,907 6748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:34:15,914 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:34:15,922 6763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:34:15,922 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:34:15,923 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:34:15,923 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:34:15,923 6764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:34:15,924 6765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:09,615 3273 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:09,627 3285 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:09,631 3289 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:09,632 3290 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:10,188 3846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:10,189 3847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:10,189 3847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:10,189 3847 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51139
2014-09-30 15:40:10,189 3847 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51139
2014-09-30 15:40:10,190 3848 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:10,190 3848 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10995
2014-09-30 15:40:10,190 3848 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10995
2014-09-30 15:40:10,191 3849 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51139 using key 51a723e057ee11c3
2014-09-30 15:40:10,192 3850 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:10,193 3851 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:10,374 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:10,460 4118 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:10,460 4118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,461 4119 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:10,477 4135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,478 4136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,481 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:10,482 4140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,483 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,483 4141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,484 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:10,484 4142 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,485 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,485 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,485 4143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:10,486 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,486 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,486 4144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,487 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:10,487 4145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,488 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,488 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,488 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:10,490 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,490 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,490 4148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,491 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:10,491 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,491 4149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,492 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,493 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:10,493 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,493 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,494 4152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,494 4152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:10,495 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,495 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,495 4153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,496 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:10,496 4154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,497 4155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,497 4155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,497 4155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:10,498 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:10,498 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,498 4156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,516 4174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:10,608 4266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:10,611 4269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,612 4270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,621 4279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:10,637 4295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:10,637 4295 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:10,638 4296 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:10,638 4296 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:10,638 4296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,639 4297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,649 4307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:10,691 4349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:10,691 4349 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:10,692 4350 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:10,693 4351 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:10,694 4352 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:10,694 4352 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:10,694 4352 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:10,694 4352 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:10,742 4400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,743 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,767 4425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:40:10,776 4434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:40:10,780 4438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:10,781 4439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:40:10,781 4439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:10,781 4439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:10,781 4439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:40:10,781 4439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:10,781 4439 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:10,782 4440 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:40:10,782 4440 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:40:10,782 4440 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:10,787 4445 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:10,794 4452 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:10,795 4453 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:10,796 4454 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:11,418 5076 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:11,418 5076 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:11,418 5076 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:11,419 5077 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51141
2014-09-30 15:40:11,419 5077 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51141
2014-09-30 15:40:11,419 5077 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:11,419 5077 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 10999
2014-09-30 15:40:11,419 5077 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 10999
2014-09-30 15:40:11,419 5077 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51141 using key 51a723e057ee11c3
2014-09-30 15:40:11,420 5078 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:11,421 5079 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:11,456 5114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:11,558 5216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,558 5216 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:11,558 5216 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:11,558 5216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,559 5217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,560 5218 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:11,561 5219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,561 5219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,562 5220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,562 5220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:11,563 5221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,563 5221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,563 5221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,564 5222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:11,564 5222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,564 5222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,565 5223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,566 5224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:11,566 5224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,566 5224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,567 5225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,567 5225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:11,568 5226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,568 5226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,569 5227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,569 5227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:11,570 5228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,570 5228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,570 5228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,571 5229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:11,572 5230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,572 5230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,573 5231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,573 5231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:11,574 5232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,574 5232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,574 5232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,575 5233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:11,575 5233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,575 5233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,576 5234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,576 5234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:11,576 5234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:11,577 5235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,577 5235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,578 5236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:11,642 5300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:11,645 5303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,646 5304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,648 5306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:11,666 5324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:11,667 5325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,667 5325 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:11,668 5326 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:11,668 5326 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:11,668 5326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,669 5327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:11,722 5380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:11,722 5380 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:11,722 5380 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:11,722 5380 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:11,723 5381 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:11,724 5382 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:11,725 5383 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:11,725 5383 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:11,727 5385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,727 5385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,740 5398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:40:11,744 5402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:40:11,744 5402 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:40:11,744 5402 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:11,744 5402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:11,745 5403 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:40:11,745 5403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:11,748 5406 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:11,752 5410 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:11,754 5412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:11,754 5412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:12,408 6066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:12,408 6066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:12,408 6066 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:12,409 6067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51143
2014-09-30 15:40:12,409 6067 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51143
2014-09-30 15:40:12,409 6067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:12,409 6067 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11003
2014-09-30 15:40:12,409 6067 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11003
2014-09-30 15:40:12,409 6067 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51143 using key 51a723e057ee11c3
2014-09-30 15:40:12,410 6068 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:12,411 6069 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:12,434 6092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:12,527 6185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,527 6185 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:12,528 6186 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:12,528 6186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,528 6186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,529 6187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:12,531 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,531 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,531 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,531 6189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:12,532 6190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,532 6190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,533 6191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,533 6191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:12,534 6192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,534 6192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,535 6193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,535 6193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:12,536 6194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,536 6194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,536 6194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,537 6195 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:12,538 6196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,539 6197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,539 6197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,539 6197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:12,540 6198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,540 6198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,540 6198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,541 6199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:12,541 6199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,542 6200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,542 6200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,543 6201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:12,543 6201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,543 6201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,544 6202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,544 6202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:12,544 6202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,545 6203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,545 6203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,546 6204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:12,546 6204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:12,546 6204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,547 6205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,547 6205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:12,612 6270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:12,614 6272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,614 6272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,615 6273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:12,627 6285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:12,627 6285 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:12,627 6285 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:12,627 6285 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:12,628 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,628 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,628 6286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:12,669 6327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:12,669 6327 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:12,669 6327 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:12,669 6327 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:12,669 6327 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:12,669 6327 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:12,670 6328 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:12,671 6329 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:12,674 6332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,674 6332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,683 6341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:40:12,693 6351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:40:12,695 6353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:40:12,696 6354 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:40:12,697 6355 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:12,697 6355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:12,703 6361 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:12,709 6367 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:12,710 6368 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:12,710 6368 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:13,347 7005 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:13,347 7005 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:13,347 7005 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:13,347 7005 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51145
2014-09-30 15:40:13,348 7006 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51145
2014-09-30 15:40:13,348 7006 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:13,348 7006 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11007
2014-09-30 15:40:13,348 7006 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11007
2014-09-30 15:40:13,348 7006 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51145 using key 51a723e057ee11c3
2014-09-30 15:40:13,349 7007 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:13,350 7008 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:13,369 7027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:13,444 7102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,444 7102 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:13,445 7103 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:13,445 7103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,446 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,446 7104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:13,449 7107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,449 7107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,450 7108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,450 7108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:13,450 7108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,451 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,451 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,451 7109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:13,452 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,452 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,452 7110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,453 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:13,453 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,453 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,453 7111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,454 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:13,455 7113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,456 7114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,456 7114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,456 7114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:13,457 7115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,457 7115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,457 7115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,458 7116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:13,458 7116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,459 7117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,459 7117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,459 7117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:13,460 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,460 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,460 7118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,461 7119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:13,461 7119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,461 7119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,462 7120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,462 7120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:13,463 7121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:13,463 7121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,463 7121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,464 7122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:13,522 7180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:13,523 7181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,523 7181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,524 7182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:13,535 7193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:13,535 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:13,535 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:13,535 7193 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:13,535 7193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,536 7194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,536 7194 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:13,571 7229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:13,571 7229 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:13,572 7230 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:13,574 7232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,575 7233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,583 7241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:40:13,591 7249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:40:13,591 7249 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:40:13,591 7249 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:13,591 7249 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:40:13,591 7249 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:13,591 7249 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:13,592 7250 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:40:13,592 7250 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:40:13,592 7250 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:13,592 7250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:13,593 7251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:13,598 7256 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:13,605 7263 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:13,606 7264 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:13,606 7264 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:14,182 7840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:14,182 7840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:14,182 7840 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:14,183 7841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51147
2014-09-30 15:40:14,183 7841 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51147
2014-09-30 15:40:14,183 7841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:14,183 7841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11011
2014-09-30 15:40:14,183 7841 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11011
2014-09-30 15:40:14,183 7841 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51147 using key 51a723e057ee11c3
2014-09-30 15:40:14,184 7842 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:14,185 7843 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:14,207 7865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:14,278 7936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,278 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:14,278 7936 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:14,278 7936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,279 7937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,279 7937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:14,281 7939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,281 7939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,281 7939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,282 7940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:14,282 7940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,282 7940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,283 7941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,283 7941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:14,283 7941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,284 7942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,284 7942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,284 7942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:14,285 7943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,285 7943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,285 7943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,286 7944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:14,287 7945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,288 7946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,288 7946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,288 7946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:14,289 7947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,289 7947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,290 7948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,290 7948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:14,291 7949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,291 7949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,292 7950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,293 7951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:14,293 7951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,294 7952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,294 7952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,295 7953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:14,295 7953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,295 7953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,296 7954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,296 7954 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:14,297 7955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:14,297 7955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,297 7955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,298 7956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:14,358 8016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:14,360 8018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,360 8018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,362 8020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:14,372 8030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:14,372 8030 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:14,373 8031 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:14,373 8031 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:14,373 8031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,373 8031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,374 8032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:14,408 8066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:14,408 8066 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:14,409 8067 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:14,410 8068 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:14,413 8071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,413 8071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,420 8078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:40:14,422 8080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:40:14,422 8080 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:40:14,423 8081 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:14,423 8081 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:40:14,423 8081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:14,423 8081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:14,426 8084 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:14,430 8088 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:14,432 8090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:14,432 8090 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:15,007 8665 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:15,007 8665 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:15,007 8665 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:15,008 8666 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51149
2014-09-30 15:40:15,008 8666 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51149
2014-09-30 15:40:15,008 8666 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:15,008 8666 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11015
2014-09-30 15:40:15,008 8666 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11015
2014-09-30 15:40:15,008 8666 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51149 using key 51a723e057ee11c3
2014-09-30 15:40:15,009 8667 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:15,009 8667 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:15,025 8683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:15,096 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,096 8754 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:15,096 8754 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:15,096 8754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,097 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,097 8755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:15,099 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,099 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,100 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,100 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:15,100 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,101 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,101 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,101 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:15,102 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,102 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,102 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,103 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:15,103 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,103 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,103 8761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,104 8762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:15,105 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,105 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,105 8763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,106 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:15,106 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,106 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,107 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,107 8765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:15,108 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,108 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,108 8766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,109 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:15,109 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,109 8767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,110 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,110 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:15,110 8768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,111 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,111 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,111 8769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:15,112 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,112 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,112 8770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,113 8771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:15,181 8839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:15,183 8841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,183 8841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,184 8842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:15,196 8854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:15,196 8854 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:15,196 8854 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:15,197 8855 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:15,197 8855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,197 8855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,198 8856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:15,239 8897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:15,239 8897 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:15,239 8897 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:15,239 8897 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:15,239 8897 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:15,239 8897 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:15,240 8898 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:15,241 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:15,241 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:15,241 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:15,241 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:15,241 8899 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:15,243 8901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,244 8902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,251 8909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:40:15,257 8915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:40:15,257 8915 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:40:15,257 8915 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:15,257 8915 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:40:15,258 8916 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:15,258 8916 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:15,258 8916 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:40:15,258 8916 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:40:15,258 8916 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:15,259 8917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,259 8917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,263 8921 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:15,269 8927 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:15,270 8928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:15,270 8928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51151
2014-09-30 15:40:15,839 9497 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51151
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:15,839 9497 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11019
2014-09-30 15:40:15,840 9498 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11019
2014-09-30 15:40:15,840 9498 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51151 using key 51a723e057ee11c3
2014-09-30 15:40:15,840 9498 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:15,841 9499 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:15,860 9518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:15,932 9590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,932 9590 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:15,933 9591 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:15,933 9591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,933 9591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,934 9592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:15,936 9594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,936 9594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,936 9594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,937 9595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:15,937 9595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,937 9595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,937 9595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,938 9596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:15,938 9596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,939 9597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,939 9597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,939 9597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:15,940 9598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,940 9598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,940 9598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,941 9599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:15,942 9600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,942 9600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,942 9600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,943 9601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:15,943 9601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,944 9602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,944 9602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,944 9602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:15,945 9603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,945 9603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,946 9604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,946 9604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:15,947 9605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,947 9605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,947 9605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,948 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:15,948 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,948 9606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,949 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,949 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:15,949 9607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:15,950 9608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:15,950 9608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:15,951 9609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:16,008 9666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:16,009 9667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,010 9668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,011 9669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:16,021 9679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:16,021 9679 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:16,021 9679 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:16,021 9679 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:16,021 9679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,022 9680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,022 9680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:16,057 9715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:16,057 9715 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,058 9716 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,059 9717 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,060 9718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,061 9719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,068 9726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:40:16,074 9732 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:40:16,074 9732 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:40:16,074 9732 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:16,074 9732 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:40:16,075 9733 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:16,075 9733 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:16,075 9733 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:40:16,075 9733 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:40:16,075 9733 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,075 9733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,076 9734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,080 9738 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:40:16,084 9742 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:40:16,085 9743 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:40:16,085 9743 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:40:16,660 10318 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:40:16,661 10319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:40:16,661 10319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:40:16,661 10319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51153
2014-09-30 15:40:16,661 10319 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51153
2014-09-30 15:40:16,661 10319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:40:16,661 10319 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11023
2014-09-30 15:40:16,662 10320 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11023
2014-09-30 15:40:16,662 10320 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51153 using key 51a723e057ee11c3
2014-09-30 15:40:16,662 10320 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:40:16,663 10321 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:40:16,679 10337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:40:16,751 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,751 10409 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:40:16,751 10409 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:40:16,751 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,752 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,753 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:40:16,754 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,755 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,755 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,755 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:40:16,756 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,756 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,756 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,756 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:40:16,757 10415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,757 10415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,757 10415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,758 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:40:16,758 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,758 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,758 10416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,759 10417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:40:16,760 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,760 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,760 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,761 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:40:16,761 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,761 10419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,762 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,762 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:40:16,763 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,763 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,763 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,764 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:40:16,764 10422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,765 10423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,765 10423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,765 10423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:40:16,766 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,766 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,766 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,766 10424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:40:16,767 10425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:40:16,767 10425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,768 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,768 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:40:16,826 10484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:16,827 10485 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,828 10486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,829 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:40:16,839 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:40:16,839 10497 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:40:16,839 10497 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:40:16,839 10497 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:40:16,839 10497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,840 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,840 10498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:40:16,876 10534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:40:16,876 10534 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:16,877 10535 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,878 10536 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:40:16,879 10537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,879 10537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:40:16,885 10543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:40:16,892 10550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:40:16,892 10550 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:40:16,893 10551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:40:16,893 10551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:16,888 2908 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:16,899 2919 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:16,902 2922 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:16,902 2922 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:17,486 3506 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:17,486 3506 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:17,486 3506 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:17,487 3507 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51185
2014-09-30 15:49:17,487 3507 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51185
2014-09-30 15:49:17,487 3507 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:17,487 3507 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11042
2014-09-30 15:49:17,487 3507 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11042
2014-09-30 15:49:17,488 3508 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51185 using key 32a1367215514d3
2014-09-30 15:49:17,489 3509 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:17,490 3510 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:17,640 3660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:17,713 3733 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:17,713 3733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,713 3733 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:17,728 3748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,729 3749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,732 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:17,734 3754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,734 3754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,734 3754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,735 3755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:17,735 3755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,736 3756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,736 3756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,737 3757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:17,737 3757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,737 3757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,738 3758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,738 3758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:17,738 3758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,739 3759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,739 3759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,740 3760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:17,741 3761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,741 3761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,742 3762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,742 3762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:17,743 3763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,743 3763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,743 3763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,744 3764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:17,745 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,745 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,746 3766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,747 3767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:17,747 3767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,747 3767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,748 3768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,748 3768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:17,749 3769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,749 3769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,749 3769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,750 3770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:17,750 3770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:17,751 3771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,751 3771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,771 3791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:17,875 3895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:17,879 3899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,879 3899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,888 3908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:17,906 3926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:17,907 3927 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:17,907 3927 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:17,907 3927 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:17,908 3928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:17,908 3928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:17,925 3945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:17,978 3998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:17,978 3998 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:17,979 3999 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:17,980 4000 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:17,981 4001 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:17,981 4001 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:18,029 4049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:18,029 4049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:18,049 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:49:18,058 4078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:49:18,058 4078 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:49:18,059 4079 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:18,062 4082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:18,063 4083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:18,067 4087 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:18,074 4094 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:18,075 4095 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:18,076 4096 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:18,862 4882 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:18,862 4882 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:18,863 4883 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:18,863 4883 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51187
2014-09-30 15:49:18,863 4883 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51187
2014-09-30 15:49:18,863 4883 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:18,863 4883 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11046
2014-09-30 15:49:18,863 4883 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11046
2014-09-30 15:49:18,864 4884 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51187 using key 32a1367215514d3
2014-09-30 15:49:18,864 4884 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:18,865 4885 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:18,905 4925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:19,012 5032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,013 5033 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:19,013 5033 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:19,013 5033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,014 5034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,014 5034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:19,017 5037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,017 5037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,017 5037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,018 5038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:19,018 5038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,018 5038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,019 5039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,019 5039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:19,020 5040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,020 5040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,021 5041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,021 5041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:19,022 5042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,022 5042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,022 5042 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,023 5043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:19,024 5044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,024 5044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,024 5044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,025 5045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:19,025 5045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,026 5046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,026 5046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,026 5046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:19,027 5047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,028 5048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,028 5048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,029 5049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:19,029 5049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,029 5049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,030 5050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,030 5050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:19,031 5051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,031 5051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,031 5051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,032 5052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:19,032 5052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,032 5052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,032 5052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,033 5053 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:19,100 5120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:19,103 5123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,104 5124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,106 5126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:19,125 5145 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:19,125 5145 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:19,125 5145 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:19,125 5145 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:19,126 5146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,126 5146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,127 5147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:19,171 5191 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:19,171 5191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:19,171 5191 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:19,172 5192 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:19,173 5193 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:19,174 5194 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:19,174 5194 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:19,177 5197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,177 5197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,187 5207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:49:19,191 5211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:49:19,191 5211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,192 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:49:19,192 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:19,192 5212 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:49:19,192 5212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,196 5216 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:19,202 5222 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:19,202 5222 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:19,203 5223 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:19,867 5887 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:19,867 5887 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:19,867 5887 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:19,868 5888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51189
2014-09-30 15:49:19,868 5888 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51189
2014-09-30 15:49:19,868 5888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:19,868 5888 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11050
2014-09-30 15:49:19,868 5888 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11050
2014-09-30 15:49:19,868 5888 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51189 using key 32a1367215514d3
2014-09-30 15:49:19,869 5889 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:19,869 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:19,901 5921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:19,995 6015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,995 6015 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:19,995 6015 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:19,996 6016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,996 6016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:19,997 6017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:19,999 6019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:19,999 6019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:19,999 6019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,000 6020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:20,000 6020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,000 6020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,001 6021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,001 6021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:20,002 6022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,002 6022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,002 6022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,003 6023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:20,004 6024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,004 6024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,004 6024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,005 6025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:20,006 6026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,007 6027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,007 6027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,007 6027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:20,008 6028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,008 6028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,008 6028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,009 6029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:20,009 6029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,010 6030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,010 6030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,010 6030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:20,011 6031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,011 6031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,011 6031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,012 6032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:20,012 6032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,012 6032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,013 6033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,013 6033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:20,013 6033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,014 6034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,014 6034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,014 6034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:20,083 6103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:20,084 6104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,085 6105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,087 6107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:20,098 6118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:20,098 6118 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:20,098 6118 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:20,099 6119 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:20,099 6119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,099 6119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,100 6120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:20,149 6169 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:20,149 6169 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:20,150 6170 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:20,151 6171 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:20,152 6172 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:20,152 6172 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:20,152 6172 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:20,154 6174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,154 6174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,164 6184 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:49:20,171 6191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:49:20,171 6191 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:20,172 6192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,173 6193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,177 6197 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:20,183 6203 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:20,184 6204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:20,184 6204 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:20,812 6832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:20,812 6832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:20,812 6832 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:20,813 6833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51191
2014-09-30 15:49:20,813 6833 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51191
2014-09-30 15:49:20,813 6833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:20,813 6833 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11054
2014-09-30 15:49:20,813 6833 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11054
2014-09-30 15:49:20,813 6833 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51191 using key 32a1367215514d3
2014-09-30 15:49:20,814 6834 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:20,815 6835 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:20,833 6853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:20,911 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,911 6931 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:20,911 6931 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:20,911 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,912 6932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,912 6932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:20,914 6934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,914 6934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,915 6935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,915 6935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:20,915 6935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,916 6936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,916 6936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,916 6936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:20,917 6937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,917 6937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,917 6937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,918 6938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:20,918 6938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,918 6938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,919 6939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,919 6939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:20,920 6940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,921 6941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,921 6941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,921 6941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:20,922 6942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,922 6942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,922 6942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,923 6943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:20,923 6943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,923 6943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,924 6944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,924 6944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:20,925 6945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,925 6945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,925 6945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,926 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:20,926 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,926 6946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,927 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,927 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:20,927 6947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:20,928 6948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:20,928 6948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:20,929 6949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:21,000 7020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:21,002 7022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,003 7023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,004 7024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:21,014 7034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:21,014 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:21,014 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:21,015 7035 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:21,015 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,015 7035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,016 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:21,050 7070 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:21,050 7070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:21,051 7071 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,052 7072 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,054 7074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,054 7074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,062 7082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:49:21,070 7090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:49:21,070 7090 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:49:21,071 7091 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:21,072 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,072 7092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,078 7098 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:21,085 7105 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:21,085 7105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:21,085 7105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:21,669 7689 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:21,670 7690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:21,670 7690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:21,670 7690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51193
2014-09-30 15:49:21,670 7690 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51193
2014-09-30 15:49:21,670 7690 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:21,671 7691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11058
2014-09-30 15:49:21,671 7691 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11058
2014-09-30 15:49:21,671 7691 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51193 using key 32a1367215514d3
2014-09-30 15:49:21,671 7691 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:21,673 7693 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:21,694 7714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:21,769 7789 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,769 7789 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:21,770 7790 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:21,770 7790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,771 7791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,771 7791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:21,773 7793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,774 7794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,774 7794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,774 7794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:21,775 7795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,775 7795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,776 7796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,776 7796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:21,776 7796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,777 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,777 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,777 7797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:21,778 7798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,778 7798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,779 7799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,779 7799 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:21,780 7800 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,781 7801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,781 7801 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,782 7802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:21,782 7802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,783 7803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,783 7803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,783 7803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:21,784 7804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,784 7804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,785 7805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,785 7805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:21,786 7806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,786 7806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,786 7806 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,787 7807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:21,787 7807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,788 7808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,788 7808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,788 7808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:21,789 7809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:21,789 7809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,790 7810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,790 7810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:21,848 7868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:21,850 7870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,850 7870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,851 7871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:21,862 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:21,862 7882 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:21,862 7882 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:21,862 7882 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:21,862 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,863 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,863 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:21,904 7924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:21,904 7924 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:21,904 7924 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:21,904 7924 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:21,904 7924 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:21,905 7925 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,906 7926 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:21,907 7927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,908 7928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,915 7935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:49:21,917 7937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:49:21,917 7937 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:49:21,918 7938 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:21,918 7938 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:49:21,918 7938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:21,918 7938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:21,922 7942 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:21,926 7946 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:21,927 7947 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:21,927 7947 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:22,544 8564 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:22,544 8564 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:22,545 8565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:22,545 8565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51195
2014-09-30 15:49:22,545 8565 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51195
2014-09-30 15:49:22,545 8565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:22,545 8565 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11062
2014-09-30 15:49:22,546 8566 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11062
2014-09-30 15:49:22,546 8566 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51195 using key 32a1367215514d3
2014-09-30 15:49:22,547 8567 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:22,548 8568 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:22,565 8585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:22,638 8658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,638 8658 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:22,639 8659 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:22,639 8659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,639 8659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,640 8660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:22,642 8662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,643 8663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,643 8663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,643 8663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:22,644 8664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,644 8664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,644 8664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,645 8665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:22,645 8665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,645 8665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,646 8666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,646 8666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:22,646 8666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,646 8666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,647 8667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,647 8667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:22,648 8668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,649 8669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,649 8669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,649 8669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:22,650 8670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,650 8670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,650 8670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,651 8671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:22,651 8671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,652 8672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,652 8672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,652 8672 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:22,653 8673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,653 8673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,653 8673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,654 8674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:22,654 8674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,654 8674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,655 8675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,655 8675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:22,655 8675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:22,656 8676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,656 8676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,656 8676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:22,723 8743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:22,724 8744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,725 8745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,726 8746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:22,738 8758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:22,738 8758 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:22,739 8759 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:22,739 8759 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:22,739 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,739 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,740 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:22,783 8803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:22,783 8803 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:22,783 8803 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:22,783 8803 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:22,784 8804 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:22,785 8805 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:22,787 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,787 8807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,794 8814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:49:22,800 8820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:49:22,800 8820 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:49:22,801 8821 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:22,802 8822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:22,802 8822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:22,806 8826 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:22,813 8833 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:22,814 8834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:22,814 8834 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:23,427 9447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:23,427 9447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:23,427 9447 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:23,428 9448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51197
2014-09-30 15:49:23,428 9448 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51197
2014-09-30 15:49:23,428 9448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:23,428 9448 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11066
2014-09-30 15:49:23,428 9448 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11066
2014-09-30 15:49:23,428 9448 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51197 using key 32a1367215514d3
2014-09-30 15:49:23,429 9449 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:23,429 9449 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:23,445 9465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:23,522 9542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,522 9542 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:23,523 9543 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:23,523 9543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,524 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,524 9544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:23,526 9546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,526 9546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,527 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,527 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:23,527 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,527 9547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,528 9548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,528 9548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:23,529 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,529 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,529 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,529 9549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:23,530 9550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,530 9550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,531 9551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,531 9551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:23,532 9552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,533 9553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,533 9553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,533 9553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:23,534 9554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,534 9554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,535 9555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,535 9555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:23,536 9556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,536 9556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,537 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,537 9557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:23,538 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,538 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,538 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,538 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:23,539 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,539 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,539 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,540 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:23,540 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:23,540 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,541 9561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,541 9561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:23,599 9619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:23,600 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,600 9620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,601 9621 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:23,611 9631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:23,611 9631 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:23,611 9631 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:23,612 9632 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:23,612 9632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,612 9632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,613 9633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:23,648 9668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:23,648 9668 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:23,649 9669 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:23,650 9670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,651 9671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,657 9677 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:49:23,663 9683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:49:23,663 9683 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:49:23,663 9683 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:23,663 9683 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:49:23,664 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:23,664 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:23,664 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:49:23,664 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:49:23,664 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:23,664 9684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:23,664 9684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:23,668 9688 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:23,672 9692 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:23,673 9693 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:23,673 9693 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:24,276 10296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51199
2014-09-30 15:49:24,277 10297 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51199
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11070
2014-09-30 15:49:24,277 10297 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11070
2014-09-30 15:49:24,277 10297 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51199 using key 32a1367215514d3
2014-09-30 15:49:24,278 10298 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:24,279 10299 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:24,295 10315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:24,378 10398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,378 10398 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:24,378 10398 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:24,378 10398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,379 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,379 10399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:24,381 10401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,381 10401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,381 10401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,382 10402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:24,382 10402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,382 10402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,383 10403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,383 10403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:24,384 10404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,384 10404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,384 10404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,384 10404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:24,385 10405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,385 10405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,385 10405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,386 10406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:24,387 10407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,387 10407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,387 10407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,387 10407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:24,388 10408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,388 10408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,388 10408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,389 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:24,389 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,389 10409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,390 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,390 10410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:24,391 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,391 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,391 10411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,392 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:24,392 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,392 10412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,393 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,393 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:24,393 10413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:24,394 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,394 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,394 10414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:24,453 10473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:24,454 10474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,454 10474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,455 10475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:24,467 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:24,467 10487 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:24,467 10487 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:24,467 10487 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:24,467 10487 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,468 10488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,468 10488 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:24,508 10528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:24,508 10528 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:24,509 10529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:24,510 10530 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:24,510 10530 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:24,510 10530 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:24,510 10530 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:24,511 10531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,511 10531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,518 10538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:49:24,524 10544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:49:24,525 10545 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:24,525 10545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:24,526 10546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:24,529 10549 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:24,533 10553 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:24,534 10554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:24,534 10554 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:25,150 11170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:25,150 11170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:25,150 11170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:25,150 11170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51201
2014-09-30 15:49:25,151 11171 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51201
2014-09-30 15:49:25,151 11171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:25,151 11171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11074
2014-09-30 15:49:25,151 11171 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11074
2014-09-30 15:49:25,151 11171 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51201 using key 32a1367215514d3
2014-09-30 15:49:25,152 11172 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:25,153 11173 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:25,169 11189 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:25,240 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,240 11260 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:25,240 11260 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:25,240 11260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,241 11261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,242 11262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:25,243 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,243 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,244 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,244 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:25,244 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,245 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,245 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,245 11265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:25,246 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,246 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,246 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,246 11266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:25,247 11267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,247 11267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,248 11268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,248 11268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:25,249 11269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,250 11270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,250 11270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,251 11271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:25,251 11271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,251 11271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,252 11272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,252 11272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:25,253 11273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,253 11273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,253 11273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,254 11274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:25,255 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,255 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,255 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,256 11276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:25,256 11276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,257 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,257 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,258 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:25,258 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:25,259 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,259 11279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,260 11280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:25,318 11338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:25,319 11339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,319 11339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,320 11340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:25,330 11350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:25,330 11350 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:25,331 11351 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:25,331 11351 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:25,331 11351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,331 11351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,332 11352 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:25,367 11387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:25,367 11387 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:25,367 11387 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:25,367 11387 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:25,367 11387 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:25,368 11388 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:25,369 11389 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:25,369 11389 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:25,369 11389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,370 11390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,375 11395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:49:25,377 11397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:49:25,377 11397 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:25,377 11397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:25,378 11398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:25,381 11401 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:49:25,385 11405 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:49:25,386 11406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:49:25,386 11406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:49:26,088 12108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51203
2014-09-30 15:49:26,089 12109 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51203
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11078
2014-09-30 15:49:26,089 12109 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11078
2014-09-30 15:49:26,089 12109 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51203 using key 32a1367215514d3
2014-09-30 15:49:26,090 12110 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:49:26,091 12111 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:49:26,107 12127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:49:26,180 12200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,180 12200 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:49:26,180 12200 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:49:26,180 12200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,181 12201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,181 12201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:49:26,183 12203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,183 12203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,184 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,184 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:49:26,184 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,184 12204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,185 12205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,185 12205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:49:26,185 12205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,185 12205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,186 12206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,186 12206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:49:26,186 12206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,187 12207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,187 12207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,187 12207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:49:26,188 12208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,188 12208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,189 12209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,189 12209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:49:26,190 12210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,190 12210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,190 12210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,190 12210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:49:26,191 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,191 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,191 12211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,192 12212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:49:26,192 12212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,192 12212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,193 12213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,193 12213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:49:26,193 12213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,193 12213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,194 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,194 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:49:26,194 12214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:49:26,195 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,195 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,195 12215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:49:26,258 12278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:26,259 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,259 12279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,260 12280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:49:26,270 12290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:49:26,270 12290 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:49:26,271 12291 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:49:26,271 12291 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:49:26,271 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,271 12291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,272 12292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:49:26,306 12326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:49:26,306 12326 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:49:26,307 12327 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:26,308 12328 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:26,309 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,309 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:49:26,313 12333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:49:26,315 12335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:49:26,315 12335 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:49:26,315 12335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:49:26,315 12335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:27,106 3076 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:27,120 3090 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:27,144 3114 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:27,145 3115 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:27,821 3791 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:27,821 3791 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:27,821 3791 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:27,821 3791 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51223
2014-09-30 15:54:27,822 3792 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51223
2014-09-30 15:54:27,822 3792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:27,822 3792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11090
2014-09-30 15:54:27,822 3792 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11090
2014-09-30 15:54:27,823 3793 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51223 using key e396ad1c989a7f0
2014-09-30 15:54:27,827 3797 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:27,828 3798 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:27,997 3967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:28,069 4039 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:28,069 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,069 4039 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:28,084 4054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,085 4055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,087 4057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:28,089 4059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,090 4060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,090 4060 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,091 4061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:28,091 4061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,091 4061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,092 4062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,092 4062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:28,093 4063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,093 4063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,093 4063 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,094 4064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:28,095 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,095 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,095 4065 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,096 4066 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:28,097 4067 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,098 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,098 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,098 4068 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:28,099 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,099 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,099 4069 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,100 4070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:28,101 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,101 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,101 4071 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,102 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:28,102 4072 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,103 4073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,103 4073 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,104 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:28,104 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,104 4074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,105 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,105 4075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:28,106 4076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:28,106 4076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,106 4076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,125 4095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:28,232 4202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:28,238 4208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,239 4209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,258 4228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:28,274 4244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:28,274 4244 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:28,274 4244 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:28,274 4244 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:28,275 4245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,275 4245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,289 4259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:28,344 4314 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:28,344 4314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:28,344 4314 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:28,344 4314 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:28,345 4315 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:28,346 4316 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:28,347 4317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:28,347 4317 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:28,397 4367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,398 4368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,418 4388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:54:28,427 4397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:54:28,427 4397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:54:28,427 4397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:28,427 4397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:54:28,427 4397 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:28,428 4398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:28,428 4398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:54:28,428 4398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:54:28,428 4398 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:28,431 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:28,431 4401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:28,436 4406 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:28,443 4413 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:28,444 4414 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:28,445 4415 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:29,183 5153 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:29,184 5154 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:29,184 5154 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:29,184 5154 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51225
2014-09-30 15:54:29,184 5154 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51225
2014-09-30 15:54:29,184 5154 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:29,185 5155 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11094
2014-09-30 15:54:29,185 5155 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11094
2014-09-30 15:54:29,185 5155 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51225 using key e396ad1c989a7f0
2014-09-30 15:54:29,185 5155 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:29,186 5156 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:29,222 5192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:29,333 5303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,333 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:29,333 5303 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:29,333 5303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,334 5304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,335 5305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:29,336 5306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,337 5307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,337 5307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,337 5307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:29,338 5308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,338 5308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,338 5308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,339 5309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:29,339 5309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,340 5310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,340 5310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,341 5311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:29,341 5311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,341 5311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,342 5312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,342 5312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:29,343 5313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,344 5314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,344 5314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,344 5314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:29,345 5315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,345 5315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,345 5315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,346 5316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:29,347 5317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,347 5317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,348 5318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,348 5318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:29,349 5319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,349 5319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,349 5319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,350 5320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:29,350 5320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,350 5320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,351 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,351 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:29,351 5321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:29,352 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,352 5322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,353 5323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:29,422 5392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:29,424 5394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,425 5395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,426 5396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:29,445 5415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:29,445 5415 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:29,445 5415 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:29,446 5416 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:29,446 5416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,447 5417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,448 5418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:29,505 5475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:29,505 5475 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:29,506 5476 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:29,507 5477 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:29,508 5478 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:29,508 5478 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:29,511 5481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,511 5481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,521 5491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:54:29,524 5494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:54:29,525 5495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:29,526 5496 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:54:29,526 5496 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:29,526 5496 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:54:29,526 5496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:29,530 5500 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:29,534 5504 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:29,544 5514 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:29,545 5515 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:30,309 6279 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:30,310 6280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:30,310 6280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:30,310 6280 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51227
2014-09-30 15:54:30,310 6280 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51227
2014-09-30 15:54:30,311 6281 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:30,311 6281 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11098
2014-09-30 15:54:30,311 6281 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11098
2014-09-30 15:54:30,311 6281 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51227 using key e396ad1c989a7f0
2014-09-30 15:54:30,312 6282 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:30,314 6284 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:30,339 6309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:30,446 6416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,446 6416 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:30,447 6417 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:30,447 6417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,448 6418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,448 6418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:30,450 6420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,450 6420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,451 6421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,451 6421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:30,452 6422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,452 6422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,453 6423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,453 6423 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:30,454 6424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,454 6424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,454 6424 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,455 6425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:30,455 6425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,456 6426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,456 6426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,456 6426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:30,458 6428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,458 6428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,459 6429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,459 6429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:30,460 6430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,460 6430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,460 6430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,461 6431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:30,461 6431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,462 6432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,462 6432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,462 6432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:30,463 6433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,463 6433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,463 6433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,464 6434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:30,464 6434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,464 6434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,465 6435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,465 6435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:30,466 6436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:30,467 6437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,467 6437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,467 6437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:30,551 6521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:30,553 6523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,554 6524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,555 6525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:30,566 6536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:30,567 6537 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:30,567 6537 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:30,567 6537 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:30,567 6537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,568 6538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,568 6538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:30,619 6589 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:30,619 6589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:30,619 6589 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:30,620 6590 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:30,621 6591 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:30,624 6594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,625 6595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,634 6604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:54:30,642 6612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:54:30,642 6612 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:54:30,642 6612 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:30,642 6612 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:54:30,643 6613 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:30,643 6613 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:30,643 6613 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:54:30,643 6613 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:54:30,643 6613 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:30,643 6613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:30,644 6614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:30,648 6618 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:30,654 6624 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:30,655 6625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:30,655 6625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:31,382 7352 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:31,383 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:31,383 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:31,383 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51229
2014-09-30 15:54:31,383 7353 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51229
2014-09-30 15:54:31,383 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:31,383 7353 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11102
2014-09-30 15:54:31,384 7354 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11102
2014-09-30 15:54:31,384 7354 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51229 using key e396ad1c989a7f0
2014-09-30 15:54:31,384 7354 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:31,385 7355 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:31,404 7374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:31,482 7452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,482 7452 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:31,482 7452 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:31,482 7452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,483 7453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,484 7454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:31,485 7455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,486 7456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,486 7456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,487 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:31,487 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,487 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,488 7458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,488 7458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:31,488 7458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,489 7459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,489 7459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,489 7459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:31,490 7460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,490 7460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,490 7460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,491 7461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:31,492 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,492 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,492 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,493 7463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:31,493 7463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,494 7464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,494 7464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,494 7464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:31,495 7465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,495 7465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,495 7465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,496 7466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:31,496 7466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,497 7467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,497 7467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,497 7467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:31,498 7468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,498 7468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,498 7468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,499 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:31,499 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:31,499 7469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,500 7470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,501 7471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:31,558 7528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:31,560 7530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,560 7530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,562 7532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:31,571 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:31,571 7541 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:31,572 7542 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:31,572 7542 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:31,572 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,572 7542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,573 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:31,608 7578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:31,608 7578 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:31,609 7579 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:31,610 7580 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:31,610 7580 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:31,610 7580 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:31,610 7580 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:31,610 7580 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:31,612 7582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,612 7582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,619 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:54:31,626 7596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:54:31,626 7596 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:54:31,626 7596 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:31,626 7596 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:54:31,626 7596 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:31,626 7596 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:31,627 7597 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:54:31,627 7597 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:54:31,627 7597 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:31,628 7598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:31,628 7598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:31,645 7615 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:31,654 7624 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:31,655 7625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:31,655 7625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:32,314 8284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:32,314 8284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:32,314 8284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:32,314 8284 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51231
2014-09-30 15:54:32,314 8284 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51231
2014-09-30 15:54:32,315 8285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:32,315 8285 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11106
2014-09-30 15:54:32,315 8285 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11106
2014-09-30 15:54:32,315 8285 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51231 using key e396ad1c989a7f0
2014-09-30 15:54:32,315 8285 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:32,316 8286 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:32,336 8306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:32,408 8378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,408 8378 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:32,408 8378 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:32,408 8378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,409 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,409 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:32,411 8381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,412 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,412 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,412 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:32,413 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,413 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,413 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,414 8384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:32,414 8384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,414 8384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,415 8385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,415 8385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:32,415 8385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,416 8386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,416 8386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,416 8386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:32,418 8388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,418 8388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,418 8388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,419 8389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:32,420 8390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,420 8390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,420 8390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,421 8391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:32,421 8391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,421 8391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,422 8392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,422 8392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:32,423 8393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,423 8393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,423 8393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,424 8394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:32,424 8394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,424 8394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,425 8395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,425 8395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:32,426 8396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:32,426 8396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,426 8396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,427 8397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:32,493 8463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:32,494 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,495 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,496 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:32,506 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:32,506 8476 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:32,506 8476 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:32,506 8476 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:32,506 8476 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,507 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,507 8477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:32,542 8512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:32,542 8512 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:32,543 8513 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:32,544 8514 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:32,545 8515 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:32,545 8515 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:32,545 8515 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:32,545 8515 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:32,547 8517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,548 8518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,554 8524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:54:32,557 8527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:54:32,557 8527 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:54:32,557 8527 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:32,557 8527 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:54:32,557 8527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:32,558 8528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:32,561 8531 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:32,565 8535 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:32,566 8536 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:32,566 8536 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:33,283 9253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:33,283 9253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:33,283 9253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:33,283 9253 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51233
2014-09-30 15:54:33,284 9254 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51233
2014-09-30 15:54:33,284 9254 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:33,284 9254 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11110
2014-09-30 15:54:33,284 9254 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11110
2014-09-30 15:54:33,284 9254 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51233 using key e396ad1c989a7f0
2014-09-30 15:54:33,285 9255 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:33,286 9256 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:33,302 9272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:33,373 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,373 9343 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:33,373 9343 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:33,373 9343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,374 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,375 9345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:33,377 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,377 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,377 9347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,378 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:33,378 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,378 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,378 9348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,379 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:33,379 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,379 9349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,380 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,380 9350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:33,381 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,381 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,381 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,381 9351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:33,383 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,383 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,383 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,383 9353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:33,384 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,384 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,384 9354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,385 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:33,385 9355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,386 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,386 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,386 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:33,387 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,387 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,387 9357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,388 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:33,388 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,388 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,388 9358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,389 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:33,389 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:33,389 9359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,390 9360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,390 9360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:33,457 9427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:33,465 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,465 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,467 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:33,478 9448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:33,478 9448 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:33,479 9449 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:33,479 9449 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:33,479 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,479 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,480 9450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:33,521 9491 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:33,521 9491 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:33,522 9492 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:33,523 9493 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:33,523 9493 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:33,523 9493 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:33,523 9493 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:33,525 9495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,526 9496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,533 9503 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:54:33,539 9509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:54:33,539 9509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:54:33,539 9509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:33,539 9509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:54:33,540 9510 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:33,540 9510 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:33,540 9510 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:54:33,540 9510 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:54:33,540 9510 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:33,541 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:33,541 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:33,545 9515 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:33,551 9521 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:33,552 9522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:33,552 9522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:34,231 10201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:34,231 10201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:34,231 10201 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:34,232 10202 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51235
2014-09-30 15:54:34,232 10202 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51235
2014-09-30 15:54:34,232 10202 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:34,232 10202 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11114
2014-09-30 15:54:34,232 10202 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11114
2014-09-30 15:54:34,232 10202 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51235 using key e396ad1c989a7f0
2014-09-30 15:54:34,233 10203 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:34,234 10204 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:34,249 10219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:34,320 10290 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:34,320 10290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,321 10291 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:34,321 10291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,322 10292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,322 10292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:34,325 10295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,325 10295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,325 10295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,326 10296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:34,326 10296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,326 10296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,326 10296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,327 10297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:34,327 10297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,327 10297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,328 10298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,328 10298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:34,328 10298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,329 10299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,329 10299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,329 10299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:34,330 10300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,331 10301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,331 10301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,331 10301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:34,332 10302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,332 10302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,333 10303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,333 10303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:34,334 10304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,334 10304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,335 10305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,335 10305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:34,336 10306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,336 10306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,336 10306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,336 10306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:34,337 10307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,337 10307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,337 10307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,338 10308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:34,338 10308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:34,338 10308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,339 10309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,339 10309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:34,397 10367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:34,398 10368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,399 10369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,400 10370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:34,411 10381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:34,411 10381 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:34,412 10382 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:34,412 10382 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:34,412 10382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,412 10382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,413 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:34,448 10418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:34,448 10418 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:34,448 10418 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:34,449 10419 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:34,450 10420 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:34,450 10420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,451 10421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,457 10427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:54:34,463 10433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:54:34,463 10433 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:54:34,464 10434 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:34,465 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:34,465 10435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:34,469 10439 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:34,473 10443 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:34,474 10444 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:34,474 10444 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:35,167 11137 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:35,168 11138 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:35,168 11138 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:35,168 11138 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51237
2014-09-30 15:54:35,169 11139 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51237
2014-09-30 15:54:35,169 11139 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:35,169 11139 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11118
2014-09-30 15:54:35,169 11139 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11118
2014-09-30 15:54:35,169 11139 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51237 using key e396ad1c989a7f0
2014-09-30 15:54:35,170 11140 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:35,171 11141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:35,187 11157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:35,259 11229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,259 11229 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:35,259 11229 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:35,259 11229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,260 11230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,261 11231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:35,262 11232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,263 11233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,263 11233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,263 11233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:35,264 11234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,264 11234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,264 11234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,265 11235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:35,265 11235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,265 11235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,266 11236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,266 11236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:35,266 11236 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,267 11237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,267 11237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,267 11237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:35,269 11239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,269 11239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,270 11240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,270 11240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:35,271 11241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,271 11241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,272 11242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,272 11242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:35,273 11243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,273 11243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,273 11243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,274 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:35,274 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,274 11244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,275 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,275 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:35,275 11245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,276 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,276 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,276 11246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:35,277 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:35,277 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,277 11247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,278 11248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:35,349 11319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:35,350 11320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,351 11321 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,352 11322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:35,364 11334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:35,364 11334 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:35,364 11334 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:35,364 11334 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:35,364 11334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,365 11335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,365 11335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:35,404 11374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:35,404 11374 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:35,405 11375 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:35,406 11376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,406 11376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,414 11384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:54:35,420 11390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:54:35,420 11390 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:35,421 11391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:35,421 11391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:35,424 11394 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:35,428 11398 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:35,429 11399 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:35,429 11399 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:36,246 12216 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:36,247 12217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:36,247 12217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:36,247 12217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51239
2014-09-30 15:54:36,247 12217 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51239
2014-09-30 15:54:36,247 12217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:36,248 12218 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11122
2014-09-30 15:54:36,248 12218 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11122
2014-09-30 15:54:36,248 12218 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51239 using key e396ad1c989a7f0
2014-09-30 15:54:36,249 12219 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:36,249 12219 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:36,269 12239 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:36,349 12319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,349 12319 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:36,349 12319 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:36,349 12319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,350 12320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,350 12320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:36,352 12322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,352 12322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,352 12322 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,353 12323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:36,353 12323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,353 12323 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,354 12324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,354 12324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:36,354 12324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,354 12324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,355 12325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,355 12325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:36,355 12325 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,356 12326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,356 12326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,356 12326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:36,357 12327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,357 12327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,358 12328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,358 12328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:36,359 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,359 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,359 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,360 12330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:36,360 12330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,360 12330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,361 12331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,361 12331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:36,361 12331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,362 12332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,362 12332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,362 12332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:36,363 12333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,363 12333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,363 12333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,364 12334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:36,364 12334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:36,364 12334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,364 12334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,365 12335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:36,428 12398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:36,429 12399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,429 12399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,430 12400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:36,440 12410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:36,440 12410 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:36,441 12411 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:36,441 12411 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:36,441 12411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,441 12411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,442 12412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:36,482 12452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:36,482 12452 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:36,483 12453 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:36,484 12454 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:36,485 12455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,485 12455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,490 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:54:36,491 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:54:36,491 12461 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:36,492 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:36,492 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:36,496 12466 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:36,500 12470 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:36,501 12471 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:36,502 12472 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:37,219 13189 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51241
2014-09-30 15:54:37,220 13190 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51241
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11126
2014-09-30 15:54:37,220 13190 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11126
2014-09-30 15:54:37,220 13190 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51241 using key e396ad1c989a7f0
2014-09-30 15:54:37,221 13191 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:37,221 13191 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:37,236 13206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:37,307 13277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,307 13277 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:37,307 13277 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:37,308 13278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,308 13278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,309 13279 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:37,310 13280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,310 13280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,311 13281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,311 13281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:37,312 13282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,312 13282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,312 13282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,313 13283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:37,313 13283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,313 13283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,314 13284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,314 13284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:37,314 13284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,315 13285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,315 13285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,316 13286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:37,317 13287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,317 13287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,318 13288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,318 13288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:37,318 13288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,319 13289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,319 13289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,319 13289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:37,320 13290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,320 13290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,320 13290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,321 13291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:37,322 13292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,322 13292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,322 13292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,323 13293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:37,323 13293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,324 13294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,324 13294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,324 13294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:37,325 13295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:37,325 13295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,325 13295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,326 13296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:37,385 13355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:37,386 13356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,387 13357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,388 13358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:37,398 13368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:37,398 13368 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:37,399 13369 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:37,399 13369 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:37,399 13369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,399 13369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,400 13370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:37,435 13405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:37,435 13405 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:37,435 13405 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:37,435 13405 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:37,435 13405 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:37,435 13405 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:37,436 13406 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:37,437 13407 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:37,437 13407 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:37,437 13407 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:37,437 13407 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:37,438 13408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,438 13408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,442 13412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,x),identifier(none,'COLOURS'))),'#PREDICATE','not(x : COLOURS)'),ARes),true.

2014-09-30 15:54:37,443 13413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(x : COLOURS)')),[]))
2014-09-30 15:54:37,443 13413 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ x : COLOURS)
2014-09-30 15:54:37,443 13413 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:37,443 13413 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:54:37,443 13413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:37,444 13414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:37,447 13417 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:37,455 13425 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:37,455 13425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:37,455 13425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:38,137 14107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:38,137 14107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:38,137 14107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:38,137 14107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51243
2014-09-30 15:54:38,137 14107 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51243
2014-09-30 15:54:38,138 14108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:38,138 14108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11130
2014-09-30 15:54:38,138 14108 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11130
2014-09-30 15:54:38,138 14108 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51243 using key e396ad1c989a7f0
2014-09-30 15:54:38,138 14108 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:38,139 14109 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:38,154 14124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:38,226 14196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,226 14196 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:38,226 14196 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:38,226 14196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,227 14197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,228 14198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:38,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,230 14200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:38,231 14201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,231 14201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,231 14201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,232 14202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:38,232 14202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,232 14202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:38,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,233 14203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,234 14204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,234 14204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:38,235 14205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,236 14206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,236 14206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,237 14207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:38,237 14207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,238 14208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,238 14208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,239 14209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:38,239 14209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,240 14210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,240 14210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,241 14211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:38,241 14211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,242 14212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,242 14212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,242 14212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:38,243 14213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,243 14213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,244 14214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,244 14214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:38,245 14215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:38,245 14215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,246 14216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,246 14216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:38,310 14280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:38,311 14281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,311 14281 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,312 14282 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:38,322 14292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:38,322 14292 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:38,323 14293 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:38,323 14293 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:38,323 14293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,323 14293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,323 14293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:38,359 14329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:38,359 14329 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:38,360 14330 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:38,361 14331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,361 14331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,364 14334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,x),identifier(none,'COLOURS')),'#PREDICATE','x : COLOURS'),ARes),true.

2014-09-30 15:54:38,366 14336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),[]),'x : COLOURS')),[]))
2014-09-30 15:54:38,366 14336 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is TRUE
2014-09-30 15:54:38,367 14337 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:54:38,367 14337 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red
2014-09-30 15:54:38,367 14337 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:38,367 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:38,367 14337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:38,370 14340 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:54:38,374 14344 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:54:38,375 14345 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:54:38,376 14346 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:54:39,041 15011 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:54:39,049 15019 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:54:39,050 15020 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:54:39,050 15020 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51245
2014-09-30 15:54:39,050 15020 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51245
2014-09-30 15:54:39,050 15020 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:54:39,050 15020 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11134
2014-09-30 15:54:39,051 15021 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11134
2014-09-30 15:54:39,051 15021 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51245 using key e396ad1c989a7f0
2014-09-30 15:54:39,052 15022 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:54:39,053 15023 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:54:39,068 15038 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:54:39,145 15115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,145 15115 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:54:39,145 15115 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:54:39,145 15115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,146 15116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,146 15116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:54:39,148 15118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,148 15118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,148 15118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,148 15118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:54:39,149 15119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,149 15119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,149 15119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,150 15120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:54:39,150 15120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,150 15120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,150 15120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,151 15121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:54:39,151 15121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,151 15121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,151 15121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,152 15122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:54:39,153 15123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,153 15123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,154 15124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,154 15124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:54:39,154 15124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,155 15125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,155 15125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,155 15125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:54:39,156 15126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,156 15126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,157 15127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,157 15127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:54:39,158 15128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,158 15128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,158 15128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,158 15128 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:54:39,159 15129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,159 15129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,159 15129 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,160 15130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:54:39,160 15130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:54:39,160 15130 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,161 15131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,161 15131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:54:39,220 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:39,220 15190 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,221 15191 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,222 15192 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:54:39,233 15203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:54:39,233 15203 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:54:39,233 15203 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:54:39,234 15204 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:54:39,234 15204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,234 15204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,235 15205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:54:39,274 15244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:54:39,274 15244 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:39,274 15244 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:54:39,274 15244 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:54:39,274 15244 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:39,274 15244 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:54:39,275 15245 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:54:39,276 15246 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:54:39,276 15246 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:54:39,276 15246 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:54:39,276 15246 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:39,276 15246 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:39,276 15246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,276 15246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:54:39,281 15251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:54:39,282 15252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:54:39,282 15252 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:54:39,283 15253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:54:39,283 15253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:29,722 3127 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:29,735 3140 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:29,759 3164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:29,759 3164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:30,327 3732 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:30,327 3732 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:30,327 3732 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:30,328 3733 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51251
2014-09-30 15:58:30,328 3733 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51251
2014-09-30 15:58:30,328 3733 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:30,328 3733 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11143
2014-09-30 15:58:30,328 3733 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11143
2014-09-30 15:58:30,329 3734 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51251 using key e5b7cc5546857631
2014-09-30 15:58:30,330 3735 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:30,331 3736 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:30,510 3915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:30,586 3991 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:30,586 3991 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,587 3992 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:30,610 4015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,611 4016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,613 4018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:30,615 4020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,615 4020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,616 4021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,616 4021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:30,617 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,617 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,617 4022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,618 4023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:30,618 4023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,619 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,619 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,619 4024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:30,620 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,620 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,620 4025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,621 4026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:30,622 4027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,622 4027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,623 4028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,623 4028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:30,624 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,624 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,624 4029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,625 4030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:30,626 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,626 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,626 4031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,627 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:30,628 4033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,628 4033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,629 4034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,629 4034 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:30,630 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,630 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,630 4035 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,631 4036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:30,632 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:30,632 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,632 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,647 4052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:30,728 4133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:30,733 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,733 4138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,745 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:30,756 4161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:30,756 4161 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:30,757 4162 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:30,757 4162 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:30,758 4163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,758 4163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,771 4176 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:30,808 4213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:30,808 4213 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:30,809 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:30,858 4263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,859 4264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,885 4290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:58:30,893 4298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:58:30,893 4298 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:58:30,894 4299 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:58:30,895 4300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:30,896 4301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:30,897 4302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:30,901 4306 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:30,910 4315 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:30,912 4317 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:30,912 4317 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:31,475 4880 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:31,475 4880 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:31,475 4880 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:31,475 4880 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51253
2014-09-30 15:58:31,476 4881 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51253
2014-09-30 15:58:31,476 4881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:31,476 4881 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11147
2014-09-30 15:58:31,476 4881 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11147
2014-09-30 15:58:31,476 4881 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51253 using key e5b7cc5546857631
2014-09-30 15:58:31,477 4882 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:31,478 4883 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:31,511 4916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:31,593 4998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,593 4998 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:31,593 4998 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:31,593 4998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,594 4999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,594 4999 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:31,596 5001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,596 5001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,597 5002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,597 5002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:31,598 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,598 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,598 5003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,599 5004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:31,599 5004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,599 5004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,600 5005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,600 5005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:31,601 5006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,601 5006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,601 5006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,602 5007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:31,603 5008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,603 5008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,603 5008 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,604 5009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:31,604 5009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,605 5010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,605 5010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,606 5011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:31,606 5011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,607 5012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,607 5012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,608 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:31,608 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,608 5013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,609 5014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,609 5014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:31,609 5014 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,610 5015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,610 5015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,611 5016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:31,611 5016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:31,611 5016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,612 5017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,613 5018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:31,672 5077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:31,674 5079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,674 5079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,675 5080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:31,687 5092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:31,687 5092 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:31,687 5092 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:31,687 5092 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:31,688 5093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,688 5093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,689 5094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:31,730 5135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:31,730 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:31,731 5136 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:31,731 5136 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:31,731 5136 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:31,731 5136 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:31,732 5137 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:31,733 5138 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:31,736 5141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,736 5141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,745 5150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:58:31,747 5152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:58:31,747 5152 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:58:31,748 5153 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:31,748 5153 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:58:31,748 5153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:31,749 5154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:31,752 5157 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:31,756 5161 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:31,757 5162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:31,757 5162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:32,362 5767 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:32,363 5768 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:32,363 5768 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:32,363 5768 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51255
2014-09-30 15:58:32,363 5768 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51255
2014-09-30 15:58:32,363 5768 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:32,364 5769 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11151
2014-09-30 15:58:32,364 5769 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11151
2014-09-30 15:58:32,364 5769 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51255 using key e5b7cc5546857631
2014-09-30 15:58:32,364 5769 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:32,365 5770 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:32,389 5794 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:32,462 5867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,462 5867 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:32,463 5868 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:32,463 5868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,464 5869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,464 5869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:32,466 5871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,466 5871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,466 5871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,467 5872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:32,467 5872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,468 5873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,468 5873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,469 5874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:32,469 5874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,470 5875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,470 5875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,471 5876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:32,471 5876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,471 5876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,472 5877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,472 5877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:32,474 5879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,474 5879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,474 5879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,475 5880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:32,475 5880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,475 5880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,476 5881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,476 5881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:32,477 5882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,477 5882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,477 5882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,478 5883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:32,478 5883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,478 5883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,479 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,479 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:32,479 5884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,480 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,480 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,480 5885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:32,481 5886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:32,481 5886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,481 5886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,482 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:32,539 5944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:32,541 5946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,541 5946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,542 5947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:32,552 5957 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:32,552 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:32,553 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:32,553 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:32,553 5958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,553 5958 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,554 5959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:32,589 5994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:32,589 5994 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:32,590 5995 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:32,592 5997 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,593 5998 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,600 6005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:58:32,605 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:58:32,605 6010 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:58:32,605 6010 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:58:32,606 6011 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:32,606 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:32,607 6012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:32,611 6016 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:32,615 6020 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:32,616 6021 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:32,616 6021 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:33,198 6603 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51257
2014-09-30 15:58:33,199 6604 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51257
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11155
2014-09-30 15:58:33,199 6604 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11155
2014-09-30 15:58:33,199 6604 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51257 using key e5b7cc5546857631
2014-09-30 15:58:33,200 6605 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:33,201 6606 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:33,219 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:33,291 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,291 6696 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:33,291 6696 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:33,291 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,292 6697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,292 6697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:33,294 6699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,294 6699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,294 6699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,295 6700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:33,295 6700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,295 6700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,296 6701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,296 6701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:33,297 6702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,297 6702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,297 6702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,297 6702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:33,298 6703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,298 6703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,298 6703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,299 6704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:33,300 6705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,300 6705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,301 6706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,301 6706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:33,302 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,302 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,302 6707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,303 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:33,303 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,303 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,304 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,304 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:33,305 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,305 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,305 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,305 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:33,306 6711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,306 6711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,306 6711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,307 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:33,307 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:33,307 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,308 6713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,308 6713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:33,365 6770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:33,367 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,367 6772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,369 6774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:33,379 6784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:33,379 6784 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:33,379 6784 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:33,379 6784 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:33,380 6785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,380 6785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,381 6786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:33,415 6820 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:33,415 6820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:33,416 6821 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:33,417 6822 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:33,419 6824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,419 6824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,426 6831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:58:33,434 6839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:33,434 6839 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:58:33,435 6840 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:58:33,435 6840 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:33,436 6841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:33,436 6841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:33,453 6858 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:33,460 6865 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:33,462 6867 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:33,462 6867 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:34,054 7459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:34,054 7459 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:34,055 7460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:34,055 7460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51259
2014-09-30 15:58:34,055 7460 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51259
2014-09-30 15:58:34,055 7460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:34,055 7460 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11159
2014-09-30 15:58:34,055 7460 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11159
2014-09-30 15:58:34,055 7460 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51259 using key e5b7cc5546857631
2014-09-30 15:58:34,056 7461 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:34,058 7463 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:34,079 7484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:34,150 7555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,150 7555 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:34,151 7556 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:34,151 7556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,152 7557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,152 7557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:34,154 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,154 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,155 7560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,155 7560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:34,156 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,156 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,156 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,157 7562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:34,157 7562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,157 7562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,158 7563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,158 7563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:34,158 7563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,158 7563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,159 7564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,159 7564 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:34,160 7565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,161 7566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,161 7566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,162 7567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:34,163 7568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,163 7568 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,164 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,164 7569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:34,165 7570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,165 7570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,166 7571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,167 7572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:34,167 7572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,168 7573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,168 7573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,168 7573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:34,169 7574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,169 7574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,169 7574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,170 7575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:34,170 7575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,170 7575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,171 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,171 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:34,230 7635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:34,231 7636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,231 7636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,233 7638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:34,244 7649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:34,244 7649 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:34,244 7649 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:34,244 7649 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:34,245 7650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,245 7650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,246 7651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:34,281 7686 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:34,281 7686 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:34,282 7687 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:34,284 7689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,285 7690 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,292 7697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:58:34,295 7700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:58:34,295 7700 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:58:34,295 7700 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:34,295 7700 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:58:34,295 7700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,295 7700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,299 7704 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:34,303 7708 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:34,305 7710 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:34,305 7710 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:34,870 8275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:34,870 8275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:34,870 8275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:34,870 8275 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51261
2014-09-30 15:58:34,871 8276 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51261
2014-09-30 15:58:34,871 8276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:34,871 8276 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11163
2014-09-30 15:58:34,871 8276 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11163
2014-09-30 15:58:34,871 8276 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51261 using key e5b7cc5546857631
2014-09-30 15:58:34,872 8277 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:34,872 8277 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:34,890 8295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:34,961 8366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,961 8366 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:34,961 8366 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:34,962 8367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,962 8367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,963 8368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:34,965 8370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,965 8370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,965 8370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,965 8370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:34,966 8371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,966 8371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,966 8371 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,967 8372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:34,967 8372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,967 8372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,968 8373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,968 8373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:34,968 8373 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,969 8374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,969 8374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,969 8374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:34,971 8376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,971 8376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,972 8377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,972 8377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:34,973 8378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,973 8378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,973 8378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,974 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:34,974 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,974 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,975 8380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,975 8380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:34,976 8381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,976 8381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,976 8381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,976 8381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:34,977 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,977 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,977 8382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,978 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:34,978 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:34,978 8383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:34,979 8384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:34,979 8384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:35,044 8449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:35,046 8451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,046 8451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,048 8453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:35,059 8464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:35,059 8464 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:35,060 8465 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:35,060 8465 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:35,060 8465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,061 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,061 8466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:35,102 8507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:35,102 8507 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:35,103 8508 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,104 8509 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,107 8512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,107 8512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,114 8519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:58:35,121 8526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:58:35,121 8526 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:58:35,121 8526 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:58:35,122 8527 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,123 8528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,123 8528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,127 8532 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:35,132 8537 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:35,133 8538 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:35,134 8539 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:35,702 9107 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:35,703 9108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:35,703 9108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:35,703 9108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51263
2014-09-30 15:58:35,703 9108 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51263
2014-09-30 15:58:35,703 9108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:35,703 9108 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11167
2014-09-30 15:58:35,703 9108 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11167
2014-09-30 15:58:35,704 9109 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51263 using key e5b7cc5546857631
2014-09-30 15:58:35,704 9109 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:35,705 9110 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:35,721 9126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:35,792 9197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,792 9197 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:35,792 9197 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:35,793 9198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,793 9198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,794 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:35,796 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,796 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,796 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,796 9201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:35,797 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,797 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,797 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,798 9203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:35,798 9203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,798 9203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,799 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,799 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:35,799 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,799 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,800 9205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,800 9205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:35,801 9206 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,802 9207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,802 9207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,802 9207 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:35,803 9208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,803 9208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,803 9208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,804 9209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:35,804 9209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,805 9210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,805 9210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,806 9211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:35,806 9211 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,807 9212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,807 9212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,807 9212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:35,808 9213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,808 9213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,808 9213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,808 9213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:35,809 9214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:35,809 9214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,809 9214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,810 9215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:35,868 9273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:35,869 9274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,869 9274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,870 9275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:35,883 9288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:35,883 9288 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:35,883 9288 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:35,883 9288 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:35,883 9288 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,884 9289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,884 9289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:35,919 9324 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,919 9324 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:35,919 9324 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:35,919 9324 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,919 9324 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,919 9324 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,920 9325 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:35,921 9326 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,922 9327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,929 9334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:58:35,936 9341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:58:35,936 9341 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:35,937 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:35,937 9342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:35,940 9345 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:35,945 9350 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:35,946 9351 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:35,946 9351 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:36,515 9920 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51265
2014-09-30 15:58:36,516 9921 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51265
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11171
2014-09-30 15:58:36,516 9921 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11171
2014-09-30 15:58:36,516 9921 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51265 using key e5b7cc5546857631
2014-09-30 15:58:36,517 9922 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:36,518 9923 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:36,534 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:36,610 10015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,610 10015 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:36,611 10016 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:36,611 10016 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,612 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,612 10017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:36,614 10019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,614 10019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,615 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,615 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:36,615 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,615 10020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,616 10021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,616 10021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:36,616 10021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,617 10022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,617 10022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,617 10022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:36,618 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,618 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,618 10023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,619 10024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:36,620 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,620 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,620 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,620 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:36,621 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,621 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,621 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,622 10027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:36,622 10027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,623 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,623 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,623 10028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:36,624 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,624 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,624 10029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,625 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:36,625 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,625 10030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,626 10031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,626 10031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:36,627 10032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:36,627 10032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,627 10032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,628 10033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:36,686 10091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:36,687 10092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,688 10093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,689 10094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:36,700 10105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:36,700 10105 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:36,700 10105 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:36,700 10105 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:36,700 10105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,701 10106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,701 10106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:36,736 10141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:36,736 10141 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:36,737 10142 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:36,738 10143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,738 10143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,744 10149 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:58:36,751 10156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:58:36,751 10156 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:58:36,752 10157 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:36,752 10157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:36,753 10158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:36,756 10161 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:36,760 10165 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:36,761 10166 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:36,762 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51267
2014-09-30 15:58:37,334 10739 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51267
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:37,334 10739 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11175
2014-09-30 15:58:37,334 10739 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11175
2014-09-30 15:58:37,335 10740 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51267 using key e5b7cc5546857631
2014-09-30 15:58:37,335 10740 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:37,336 10741 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:37,355 10760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:37,426 10831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,426 10831 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:37,426 10831 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:37,426 10831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,427 10832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,428 10833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:37,429 10834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,430 10835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,430 10835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,430 10835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:37,431 10836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,431 10836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,431 10836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,431 10836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:37,432 10837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,432 10837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,433 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,433 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:37,433 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,433 10838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,434 10839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,434 10839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:37,435 10840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,436 10841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,436 10841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,436 10841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:37,437 10842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,437 10842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,437 10842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,438 10843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:37,438 10843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,439 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,439 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,439 10844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:37,440 10845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,440 10845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,441 10846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,441 10846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:37,442 10847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,442 10847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,443 10848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,443 10848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:37,444 10849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:37,444 10849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,445 10850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,445 10850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:37,510 10915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:37,511 10916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,511 10916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,512 10917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:37,522 10927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:37,522 10927 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:37,523 10928 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:37,523 10928 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:37,523 10928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,523 10928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,524 10929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:37,563 10968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:37,564 10969 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:37,565 10970 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:37,566 10971 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:37,567 10972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,567 10972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,572 10977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:58:37,573 10978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:58:37,573 10978 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:37,574 10979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:37,574 10979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:37,577 10982 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:37,582 10987 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:37,584 10989 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:37,584 10989 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:38,205 11610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:38,205 11610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:38,205 11610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:38,206 11611 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51269
2014-09-30 15:58:38,206 11611 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51269
2014-09-30 15:58:38,206 11611 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:38,206 11611 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11179
2014-09-30 15:58:38,206 11611 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11179
2014-09-30 15:58:38,206 11611 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51269 using key e5b7cc5546857631
2014-09-30 15:58:38,207 11612 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:38,208 11613 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:38,222 11627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:38,293 11698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,293 11698 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:38,294 11699 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:38,294 11699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,294 11699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,295 11700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:38,297 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,297 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,297 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,298 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:38,298 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,298 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,298 11703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,299 11704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:38,299 11704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,299 11704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,299 11704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,300 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:38,300 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,300 11705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,301 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,301 11706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:38,303 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,303 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,303 11708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,304 11709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:38,304 11709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,304 11709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,305 11710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,305 11710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:38,306 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,306 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,306 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,306 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:38,307 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,307 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,307 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,308 11713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:38,308 11713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,308 11713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,309 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,309 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:38,309 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:38,309 11714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,310 11715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,310 11715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:38,368 11773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:38,369 11774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,369 11774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,370 11775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:38,381 11786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:38,382 11787 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:38,382 11787 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:38,382 11787 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:38,382 11787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,382 11787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,383 11788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:38,418 11823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:38,418 11823 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:38,418 11823 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:38,418 11823 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:38,418 11823 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:38,418 11823 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:38,419 11824 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:38,420 11825 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:38,420 11825 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:38,420 11825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,421 11826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,424 11829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,x),identifier(none,'COLOURS'))),'#PREDICATE','not(x : COLOURS)'),ARes),true.

2014-09-30 15:58:38,425 11830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(x : COLOURS)')),[]))
2014-09-30 15:58:38,425 11830 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ x : COLOURS)
2014-09-30 15:58:38,426 11831 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:38,426 11831 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:58:38,426 11831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:38,426 11831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:38,430 11835 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:38,435 11840 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:38,436 11841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:38,436 11841 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51271
2014-09-30 15:58:39,019 12424 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51271
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:39,019 12424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11183
2014-09-30 15:58:39,020 12425 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11183
2014-09-30 15:58:39,020 12425 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51271 using key e5b7cc5546857631
2014-09-30 15:58:39,020 12425 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:39,021 12426 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:39,036 12441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:39,112 12517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,112 12517 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:39,113 12518 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:39,113 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,113 12518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,114 12519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:39,115 12520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,116 12521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,116 12521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,116 12521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:39,117 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,117 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,117 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,117 12522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:39,118 12523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,118 12523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,119 12524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,119 12524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:39,119 12524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,120 12525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,120 12525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,120 12525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:39,121 12526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,121 12526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,122 12527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,122 12527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:39,123 12528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,123 12528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,123 12528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,123 12528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:39,124 12529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,124 12529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,125 12530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,125 12530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:39,125 12530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,126 12531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,126 12531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,126 12531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:39,127 12532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,127 12532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,127 12532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,127 12532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:39,128 12533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,128 12533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,128 12533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,129 12534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:39,186 12591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:39,187 12592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,187 12592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,188 12593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:39,201 12606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:39,201 12606 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:39,201 12606 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:39,201 12606 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:39,202 12607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,202 12607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,203 12608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:39,240 12645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:39,240 12645 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:39,240 12645 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:39,240 12645 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:39,240 12645 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:39,241 12646 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:39,242 12647 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:39,242 12647 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:39,242 12647 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:39,242 12647 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:39,242 12647 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:39,243 12648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,243 12648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,247 12652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,x),identifier(none,'COLOURS')),'#PREDICATE','x : COLOURS'),ARes),true.

2014-09-30 15:58:39,248 12653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),[]),'x : COLOURS')),[]))
2014-09-30 15:58:39,248 12653 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is TRUE
2014-09-30 15:58:39,249 12654 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:58:39,249 12654 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red
2014-09-30 15:58:39,249 12654 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:39,249 12654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,249 12654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,252 12657 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:58:39,256 12661 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:58:39,257 12662 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:58:39,258 12663 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:58:39,834 13239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:58:39,834 13239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:58:39,834 13239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:58:39,834 13239 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51273
2014-09-30 15:58:39,834 13239 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51273
2014-09-30 15:58:39,835 13240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:58:39,835 13240 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11187
2014-09-30 15:58:39,835 13240 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11187
2014-09-30 15:58:39,835 13240 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51273 using key e5b7cc5546857631
2014-09-30 15:58:39,835 13240 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:58:39,836 13241 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:58:39,851 13256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:58:39,925 13330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,925 13330 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:58:39,925 13330 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:58:39,925 13330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,926 13331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,926 13331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:58:39,928 13333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,928 13333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,929 13334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,929 13334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:58:39,929 13334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,930 13335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,930 13335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,930 13335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:58:39,931 13336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,931 13336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,931 13336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,931 13336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:58:39,932 13337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,932 13337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,933 13338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,933 13338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:58:39,934 13339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,935 13340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,935 13340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,935 13340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:58:39,936 13341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,936 13341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,936 13341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,937 13342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:58:39,937 13342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,938 13343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,938 13343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,938 13343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:58:39,939 13344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,939 13344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,939 13344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,940 13345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:58:39,940 13345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,940 13345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,941 13346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,941 13346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:58:39,942 13347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:58:39,942 13347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:39,942 13347 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:39,943 13348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:58:40,006 13411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:40,007 13412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:40,008 13413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:40,009 13414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:58:40,020 13425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:58:40,020 13425 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:58:40,020 13425 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:58:40,020 13425 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:58:40,020 13425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:40,021 13426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:40,021 13426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:58:40,072 13477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:58:40,072 13477 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:58:40,073 13478 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:58:40,074 13479 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:58:40,074 13479 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:58:40,074 13479 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:40,074 13479 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:40,075 13480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:40,075 13480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:58:40,079 13484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:58:40,081 13486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:58:40,081 13486 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:58:40,081 13486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:58:40,081 13486 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:24,872 2609 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:24,885 2622 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:24,888 2625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:24,888 2625 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:25,445 3182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:25,445 3182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:25,446 3183 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:25,446 3183 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51276
2014-09-30 15:59:25,446 3183 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51276
2014-09-30 15:59:25,446 3183 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:25,446 3183 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11193
2014-09-30 15:59:25,446 3183 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11193
2014-09-30 15:59:25,447 3184 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51276 using key cfced739d3ed2188
2014-09-30 15:59:25,448 3185 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:25,449 3186 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:25,616 3353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:25,698 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:25,698 3435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,698 3435 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:25,715 3452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,716 3453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,718 3455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:25,720 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,720 3457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,721 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,721 3458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:25,722 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,722 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,722 3459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,723 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:25,723 3460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,724 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,724 3461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,725 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:25,725 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,725 3462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,726 3463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,727 3464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:25,728 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,728 3465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,729 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,729 3466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:25,730 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,730 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,730 3467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,731 3468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:25,732 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,732 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,732 3469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,733 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:25,734 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,734 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,734 3471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,735 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:25,735 3472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,736 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,736 3473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,737 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:25,737 3474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:25,738 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,738 3475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,756 3493 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:25,845 3582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:25,850 3587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,850 3587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,863 3600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:25,874 3611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:25,874 3611 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:25,874 3611 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:25,874 3611 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:25,875 3612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:25,875 3612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:25,891 3628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:25,948 3685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:25,948 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:25,948 3685 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:25,949 3686 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:25,950 3687 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:26,009 3746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:26,010 3747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:26,035 3772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:59:26,044 3781 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:59:26,044 3781 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:59:26,046 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:26,049 3786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:26,050 3787 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:26,056 3793 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:26,061 3798 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:26,062 3799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:26,063 3800 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:26,911 4648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:26,911 4648 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:26,912 4649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:26,912 4649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51288
2014-09-30 15:59:26,912 4649 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51288
2014-09-30 15:59:26,912 4649 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:26,913 4650 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11197
2014-09-30 15:59:26,913 4650 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11197
2014-09-30 15:59:26,913 4650 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51288 using key cfced739d3ed2188
2014-09-30 15:59:26,914 4651 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:26,917 4654 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:26,968 4705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:27,112 4849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,112 4849 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:27,112 4849 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:27,112 4849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,113 4850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,114 4851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:27,116 4853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,116 4853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,116 4853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,117 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:27,117 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,117 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,118 4855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,118 4855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:27,119 4856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,119 4856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,120 4857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,120 4857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:27,121 4858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,121 4858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,122 4859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,122 4859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:27,124 4861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,125 4862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,125 4862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,126 4863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:27,126 4863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,126 4863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,127 4864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,127 4864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:27,128 4865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,129 4866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,129 4866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,130 4867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:27,131 4868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,131 4868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,131 4868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,132 4869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:27,133 4870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,133 4870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,134 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,134 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:27,135 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:27,135 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,136 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,137 4874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:27,206 4943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:27,208 4945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,209 4946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,211 4948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:27,229 4966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:27,229 4966 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:27,229 4966 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:27,230 4967 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:27,230 4967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,231 4968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,232 4969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:27,285 5022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:27,285 5022 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:27,285 5022 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:27,285 5022 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:27,285 5022 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:27,286 5023 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:27,287 5024 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:27,289 5026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,290 5027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,299 5036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 15:59:27,302 5039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 15:59:27,302 5039 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:59:27,302 5039 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:27,303 5040 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:59:27,303 5040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:27,303 5040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:27,307 5044 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:27,312 5049 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:27,313 5050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:27,313 5050 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:27,949 5686 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:27,950 5687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:27,950 5687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:27,950 5687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51292
2014-09-30 15:59:27,950 5687 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51292
2014-09-30 15:59:27,950 5687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:27,950 5687 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11201
2014-09-30 15:59:27,951 5688 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11201
2014-09-30 15:59:27,951 5688 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51292 using key cfced739d3ed2188
2014-09-30 15:59:27,951 5688 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:27,952 5689 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:27,983 5720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:28,076 5813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,076 5813 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:28,076 5813 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:28,076 5813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,077 5814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,077 5814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:28,079 5816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,079 5816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,080 5817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,080 5817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:28,080 5817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,080 5817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,081 5818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,081 5818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:28,082 5819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,082 5819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,083 5820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,083 5820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:28,084 5821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,084 5821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,085 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,085 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:28,087 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,087 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,087 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,088 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:28,088 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,088 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,089 5826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,089 5826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:28,090 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,090 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,090 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,091 5828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:28,091 5828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,091 5828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,092 5829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,092 5829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:28,092 5829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,093 5830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,093 5830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,093 5830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:28,094 5831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:28,094 5831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,094 5831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,095 5832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:28,163 5900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:28,165 5902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,165 5902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,166 5903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:28,178 5915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:28,178 5915 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:28,178 5915 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:28,178 5915 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:28,178 5915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,179 5916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,179 5916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:28,219 5956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:28,219 5956 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:28,220 5957 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:28,221 5958 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:28,222 5959 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:28,224 5961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,225 5962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,232 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:59:28,240 5977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:59:28,240 5977 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:59:28,240 5977 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:28,240 5977 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:59:28,240 5977 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:28,240 5977 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:28,241 5978 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:59:28,241 5978 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:59:28,241 5978 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:28,242 5979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:28,242 5979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:28,246 5983 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:28,252 5989 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:28,252 5989 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:28,253 5990 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:28,901 6638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:28,902 6639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:28,902 6639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:28,902 6639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51294
2014-09-30 15:59:28,902 6639 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51294
2014-09-30 15:59:28,902 6639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:28,903 6640 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11205
2014-09-30 15:59:28,903 6640 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11205
2014-09-30 15:59:28,903 6640 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51294 using key cfced739d3ed2188
2014-09-30 15:59:28,903 6640 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:28,904 6641 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:28,924 6661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:29,003 6740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,003 6740 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:29,004 6741 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:29,004 6741 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,005 6742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,005 6742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:29,007 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,007 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,007 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,008 6745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:29,008 6745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,008 6745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,009 6746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,009 6746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:29,010 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,010 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,010 6747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,011 6748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:29,011 6748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,012 6749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,012 6749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,012 6749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:29,014 6751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,014 6751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,014 6751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,015 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:29,015 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,015 6752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,016 6753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,016 6753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:29,017 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,017 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,017 6754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,018 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:29,018 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,018 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,019 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,019 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:29,019 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,020 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,020 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,020 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:29,021 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,021 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,021 6758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,022 6759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:29,087 6824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:29,089 6826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,089 6826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,090 6827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:29,100 6837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:29,100 6837 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:29,100 6837 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:29,100 6837 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:29,101 6838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,101 6838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,102 6839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:29,140 6877 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:29,140 6877 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:29,141 6878 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,142 6879 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,145 6882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,146 6883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,154 6891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 15:59:29,162 6899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 15:59:29,162 6899 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:59:29,163 6900 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:29,164 6901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,164 6901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,171 6908 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:29,177 6914 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:29,178 6915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:29,178 6915 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:29,754 7491 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:29,754 7491 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:29,755 7492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:29,755 7492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51296
2014-09-30 15:59:29,755 7492 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51296
2014-09-30 15:59:29,755 7492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:29,755 7492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11209
2014-09-30 15:59:29,755 7492 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11209
2014-09-30 15:59:29,756 7493 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51296 using key cfced739d3ed2188
2014-09-30 15:59:29,757 7494 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:29,758 7495 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:29,780 7517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:29,850 7587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,851 7588 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:29,851 7588 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:29,851 7588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,852 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,852 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:29,854 7591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,854 7591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,854 7591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,855 7592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:29,855 7592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,855 7592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,856 7593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,856 7593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:29,856 7593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,857 7594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,857 7594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,857 7594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:29,858 7595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,858 7595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,858 7595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,859 7596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:29,860 7597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,860 7597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,861 7598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,861 7598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:29,862 7599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,862 7599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,862 7599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,863 7600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:29,863 7600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,864 7601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,864 7601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,865 7602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:29,866 7603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,866 7603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,866 7603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,867 7604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:29,867 7604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,867 7604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,868 7605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,868 7605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:29,868 7605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:29,869 7606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,869 7606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,870 7607 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:29,928 7665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:29,930 7667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,930 7667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,931 7668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:29,942 7679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:29,942 7679 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:29,943 7680 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:29,943 7680 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:29,943 7680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,943 7680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,944 7681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:29,979 7716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:29,980 7717 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,981 7718 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:29,983 7720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,984 7721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,991 7728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:59:29,993 7730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:59:29,993 7730 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 15:59:29,993 7730 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:29,993 7730 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 15:59:29,994 7731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:29,994 7731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:29,997 7734 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:30,002 7739 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:30,003 7740 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:30,003 7740 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:30,577 8314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:30,577 8314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:30,577 8314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:30,577 8314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51298
2014-09-30 15:59:30,578 8315 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51298
2014-09-30 15:59:30,578 8315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:30,578 8315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11213
2014-09-30 15:59:30,578 8315 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11213
2014-09-30 15:59:30,578 8315 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51298 using key cfced739d3ed2188
2014-09-30 15:59:30,579 8316 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:30,580 8317 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:30,597 8334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:30,669 8406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,669 8406 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:30,669 8406 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:30,669 8406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,670 8407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,670 8407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:30,672 8409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,672 8409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,672 8409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,673 8410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:30,673 8410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,673 8410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,674 8411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,674 8411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:30,674 8411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,675 8412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,675 8412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,675 8412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:30,676 8413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,676 8413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,676 8413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,677 8414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:30,678 8415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,678 8415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,678 8415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,679 8416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:30,679 8416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,679 8416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,679 8416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,680 8417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:30,680 8417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,681 8418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,681 8418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,681 8418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:30,682 8419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,682 8419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,682 8419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,683 8420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:30,683 8420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,683 8420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,684 8421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,684 8421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:30,684 8421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:30,685 8422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,685 8422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,685 8422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:30,786 8523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:30,788 8525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,789 8526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,791 8528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:30,812 8549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:30,812 8549 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:30,812 8549 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:30,812 8549 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:30,813 8550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,813 8550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,814 8551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:30,880 8617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:30,880 8617 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:30,881 8618 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:30,882 8619 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:30,882 8619 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:30,882 8619 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:30,882 8619 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:30,882 8619 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:30,885 8622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,885 8622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,895 8632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:59:30,904 8641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:59:30,904 8641 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:59:30,904 8641 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:30,904 8641 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:59:30,905 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:30,905 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:30,905 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:59:30,905 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:59:30,905 8642 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:30,906 8643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:30,906 8643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:30,912 8649 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:30,922 8659 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:30,923 8660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:30,923 8660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:31,590 9327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:31,590 9327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:31,591 9328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:31,591 9328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51300
2014-09-30 15:59:31,591 9328 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51300
2014-09-30 15:59:31,591 9328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:31,591 9328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11217
2014-09-30 15:59:31,591 9328 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11217
2014-09-30 15:59:31,591 9328 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51300 using key cfced739d3ed2188
2014-09-30 15:59:31,592 9329 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:31,593 9330 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:31,609 9346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:31,692 9429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,692 9429 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:31,692 9429 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:31,692 9429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,693 9430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,694 9431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:31,695 9432 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,696 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,696 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,696 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:31,697 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,697 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,697 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,698 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:31,698 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,698 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,699 9436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,699 9436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:31,699 9436 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,700 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,700 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,700 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:31,702 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,702 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,702 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,702 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:31,703 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,703 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,703 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,704 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:31,704 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,705 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,705 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,705 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:31,706 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,706 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,706 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,707 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:31,707 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,707 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,708 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,708 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:31,709 9446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:31,709 9446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,709 9446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,710 9447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:31,769 9506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:31,770 9507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,770 9507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,771 9508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:31,783 9520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:31,783 9520 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:31,783 9520 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:31,783 9520 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:31,783 9520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,783 9520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,784 9521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:31,821 9558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:31,821 9558 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:31,822 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:31,823 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,823 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,829 9566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 15:59:31,836 9573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 15:59:31,836 9573 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:31,837 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:31,837 9574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:31,840 9577 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:31,844 9581 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:31,845 9582 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:31,846 9583 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:32,424 10161 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:32,425 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:32,425 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:32,425 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51302
2014-09-30 15:59:32,425 10162 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51302
2014-09-30 15:59:32,425 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:32,425 10162 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11221
2014-09-30 15:59:32,426 10163 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11221
2014-09-30 15:59:32,426 10163 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51302 using key cfced739d3ed2188
2014-09-30 15:59:32,426 10163 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:32,427 10164 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:32,444 10181 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:32,520 10257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,520 10257 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:32,520 10257 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:32,521 10258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,521 10258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,522 10259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:32,524 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,524 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,524 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,525 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:32,525 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,525 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,526 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,526 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:32,526 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,527 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,527 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,527 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:32,528 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,528 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,528 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,528 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:32,529 10266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,530 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,530 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,530 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:32,531 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,531 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,531 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,531 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:32,532 10269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,532 10269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,533 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,533 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:32,533 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,534 10271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,534 10271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,534 10271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:32,535 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,535 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,535 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,536 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:32,536 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:32,536 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,537 10274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,537 10274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:32,595 10332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:32,596 10333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,597 10334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,598 10335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:32,608 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:32,608 10345 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:32,608 10345 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:32,608 10345 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:32,609 10346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,609 10346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,609 10346 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:32,644 10381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:32,644 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:32,644 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:32,645 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:32,646 10383 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:32,646 10383 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:32,646 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,647 10384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,653 10390 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 15:59:32,658 10395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 15:59:32,658 10395 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 15:59:32,658 10395 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 15:59:32,659 10396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:32,659 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:32,659 10396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:32,663 10400 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:32,668 10405 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:32,669 10406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:32,669 10406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:33,243 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:33,243 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:33,244 10981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:33,244 10981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51304
2014-09-30 15:59:33,244 10981 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51304
2014-09-30 15:59:33,244 10981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:33,244 10981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11225
2014-09-30 15:59:33,244 10981 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11225
2014-09-30 15:59:33,244 10981 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51304 using key cfced739d3ed2188
2014-09-30 15:59:33,245 10982 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:33,246 10983 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:33,264 11001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:33,337 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,337 11074 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:33,337 11074 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:33,337 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,338 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,338 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:33,340 11077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,340 11077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,341 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,341 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:33,341 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,341 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,342 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,342 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:33,343 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,343 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,343 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,344 11081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:33,344 11081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,345 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,345 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,346 11083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:33,347 11084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,348 11085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,348 11085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,349 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:33,349 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,349 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,350 11087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,350 11087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:33,351 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,351 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,352 11089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,352 11089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:33,353 11090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,353 11090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,354 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,354 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:33,355 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,355 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,356 11093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,356 11093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:33,357 11094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:33,357 11094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,357 11094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,358 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:33,416 11153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:33,417 11154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,418 11155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,419 11156 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:33,429 11166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:33,429 11166 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:33,430 11167 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:33,430 11167 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:33,430 11167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,430 11167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,431 11168 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:33,466 11203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:33,466 11203 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:33,467 11204 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:33,468 11205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,468 11205 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,473 11210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:59:33,475 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:59:33,475 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:33,475 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:33,475 11212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:33,479 11216 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:33,483 11220 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:33,484 11221 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:33,484 11221 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:34,069 11806 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:34,070 11807 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:34,070 11807 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:34,070 11807 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51306
2014-09-30 15:59:34,071 11808 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51306
2014-09-30 15:59:34,071 11808 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:34,071 11808 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11229
2014-09-30 15:59:34,071 11808 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11229
2014-09-30 15:59:34,071 11808 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51306 using key cfced739d3ed2188
2014-09-30 15:59:34,071 11808 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:34,072 11809 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:34,087 11824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:34,159 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,159 11896 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:34,159 11896 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:34,159 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,160 11897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,160 11897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:34,162 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,162 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,163 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,163 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:34,164 11901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,164 11901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,164 11901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,165 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:34,165 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,165 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,166 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,166 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:34,166 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,167 11904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,167 11904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,167 11904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:34,169 11906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,169 11906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,170 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,170 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:34,171 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,171 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,171 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,171 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:34,172 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,172 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,172 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,173 11910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:34,173 11910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,174 11911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,174 11911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,175 11912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:34,175 11912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,175 11912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,176 11913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,176 11913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:34,177 11914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,177 11914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,178 11915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,178 11915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:34,239 11976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:34,240 11977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,240 11977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,241 11978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:34,251 11988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:34,251 11988 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:34,251 11988 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:34,251 11988 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:34,251 11988 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,252 11989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,252 11989 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:34,287 12024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:34,287 12024 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:34,288 12025 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:34,289 12026 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:34,290 12027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,291 12028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,294 12031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,x),identifier(none,'COLOURS'))),'#PREDICATE','not(x : COLOURS)'),ARes),true.

2014-09-30 15:59:34,295 12032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(x : COLOURS)')),[]))
2014-09-30 15:59:34,295 12032 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ x : COLOURS)
2014-09-30 15:59:34,295 12032 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:34,296 12033 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 15:59:34,296 12033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,296 12033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,300 12037 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:34,306 12043 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:34,307 12044 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:34,307 12044 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:34,884 12621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:34,884 12621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:34,884 12621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:34,884 12621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51308
2014-09-30 15:59:34,885 12622 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51308
2014-09-30 15:59:34,885 12622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:34,885 12622 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11233
2014-09-30 15:59:34,885 12622 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11233
2014-09-30 15:59:34,885 12622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51308 using key cfced739d3ed2188
2014-09-30 15:59:34,885 12622 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:34,886 12623 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:34,900 12637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:34,973 12710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,973 12710 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:34,973 12710 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:34,973 12710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,974 12711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,974 12711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:34,976 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,976 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,976 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,977 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:34,977 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,977 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,978 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,978 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:34,978 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,978 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,979 12716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,979 12716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:34,980 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,980 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,980 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,981 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:34,982 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,982 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,982 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,983 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:34,983 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,983 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,984 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,984 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:34,984 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,985 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,985 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,985 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:34,986 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,986 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,986 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,987 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:34,987 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,987 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,987 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,988 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:34,988 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:34,988 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:34,989 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:34,989 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:35,047 12784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:35,048 12785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,048 12785 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,049 12786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:35,059 12796 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:35,059 12796 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:35,060 12797 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:35,060 12797 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:35,060 12797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,060 12797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,061 12798 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:35,095 12832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:35,095 12832 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:35,096 12833 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,097 12834 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,098 12835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,099 12836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,102 12839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,x),identifier(none,'COLOURS')),'#PREDICATE','x : COLOURS'),ARes),true.

2014-09-30 15:59:35,104 12841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),[]),'x : COLOURS')),[]))
2014-09-30 15:59:35,104 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is TRUE
2014-09-30 15:59:35,104 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 15:59:35,104 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red
2014-09-30 15:59:35,104 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:35,104 12841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,105 12842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,108 12845 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 15:59:35,112 12849 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 15:59:35,113 12850 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 15:59:35,113 12850 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 15:59:35,704 13441 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 15:59:35,705 13442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 15:59:35,705 13442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 15:59:35,705 13442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51310
2014-09-30 15:59:35,705 13442 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51310
2014-09-30 15:59:35,705 13442 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 15:59:35,706 13443 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11237
2014-09-30 15:59:35,706 13443 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11237
2014-09-30 15:59:35,706 13443 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51310 using key cfced739d3ed2188
2014-09-30 15:59:35,706 13443 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 15:59:35,707 13444 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 15:59:35,722 13459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 15:59:35,798 13535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,798 13535 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 15:59:35,799 13536 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 15:59:35,799 13536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,800 13537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,800 13537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 15:59:35,802 13539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,802 13539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,803 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,803 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 15:59:35,803 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,803 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,804 13541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,804 13541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 15:59:35,805 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,805 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,805 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,806 13543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 15:59:35,806 13543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,806 13543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,807 13544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,807 13544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 15:59:35,808 13545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,808 13545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,809 13546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,809 13546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 15:59:35,809 13546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,810 13547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,810 13547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,810 13547 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 15:59:35,811 13548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,811 13548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,811 13548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,812 13549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 15:59:35,812 13549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,812 13549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,813 13550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,813 13550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 15:59:35,814 13551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,814 13551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,814 13551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,815 13552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 15:59:35,815 13552 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 15:59:35,816 13553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,816 13553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,817 13554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 15:59:35,875 13612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:35,876 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,876 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,877 13614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 15:59:35,889 13626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 15:59:35,889 13626 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 15:59:35,889 13626 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 15:59:35,889 13626 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 15:59:35,889 13626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,890 13627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,890 13627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 15:59:35,930 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 15:59:35,930 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 15:59:35,931 13668 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,932 13669 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,932 13669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,932 13669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 15:59:35,937 13674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 15:59:35,938 13675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 15:59:35,938 13675 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 15:59:35,938 13675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 15:59:35,939 13676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:38,850 2807 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:38,862 2819 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:38,866 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:38,866 2823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:39,431 3388 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:39,432 3389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:39,432 3389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:39,432 3389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51313
2014-09-30 16:00:39,432 3389 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51313
2014-09-30 16:00:39,432 3389 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:39,433 3390 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11244
2014-09-30 16:00:39,433 3390 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11244
2014-09-30 16:00:39,434 3391 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51313 using key 46a346ac44fd9e48
2014-09-30 16:00:39,434 3391 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:39,435 3392 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:39,591 3548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:39,662 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:39,662 3619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,662 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:39,678 3635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,679 3636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,681 3638 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:39,683 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,683 3640 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,684 3641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,684 3641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:39,685 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,685 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,685 3642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,686 3643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:39,687 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,687 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,687 3644 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,688 3645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:39,688 3645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,688 3645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,689 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,689 3646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:39,691 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,691 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,691 3648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,692 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:39,692 3649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,693 3650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,693 3650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,694 3651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:39,694 3651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,695 3652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,695 3652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,696 3653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:39,696 3653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,697 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,697 3654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,698 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:39,698 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,698 3655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,699 3656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,699 3656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:39,700 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:39,700 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,700 3657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,714 3671 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:39,808 3765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:39,813 3770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,814 3771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,827 3784 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:39,845 3802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:39,847 3804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,847 3804 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:39,847 3804 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:39,847 3804 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:39,848 3805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,862 3819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:39,912 3869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:39,912 3869 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:39,912 3869 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:39,913 3870 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:39,914 3871 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:39,915 3872 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:39,975 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:39,975 3932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:39,995 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 16:00:40,005 3962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 16:00:40,005 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:00:40,005 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:40,005 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:00:40,005 3962 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:40,006 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:40,006 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:00:40,006 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:00:40,006 3963 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:40,008 3965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,009 3966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,014 3971 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:40,020 3977 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:40,021 3978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:40,021 3978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:40,643 4600 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:40,643 4600 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:40,644 4601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:40,644 4601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51315
2014-09-30 16:00:40,644 4601 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51315
2014-09-30 16:00:40,644 4601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:40,644 4601 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11248
2014-09-30 16:00:40,644 4601 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11248
2014-09-30 16:00:40,644 4601 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51315 using key 46a346ac44fd9e48
2014-09-30 16:00:40,645 4602 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:40,646 4603 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:40,685 4642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:40,781 4738 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,781 4738 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:40,782 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:40,782 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,783 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,783 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:40,785 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,785 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,785 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,786 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:40,786 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,787 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,787 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,787 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:40,788 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,788 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,789 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,789 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:40,790 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,790 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,790 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,791 4748 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:40,792 4749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,793 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,793 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,793 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:40,794 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,794 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,794 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,795 4752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:40,796 4753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,796 4753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,796 4753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,797 4754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:40,798 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,798 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,798 4755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,799 4756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:40,799 4756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,799 4756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,799 4756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,800 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:40,800 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:40,800 4757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,801 4758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,801 4758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:40,871 4828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:40,874 4831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,874 4831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,876 4833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:40,895 4852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:40,895 4852 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:40,896 4853 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:40,896 4853 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:40,896 4853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,897 4854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,898 4855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:40,942 4899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:40,942 4899 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:40,943 4900 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:40,944 4901 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:40,945 4902 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:40,945 4902 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:40,948 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,948 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,958 4915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 16:00:40,960 4917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 16:00:40,960 4917 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 16:00:40,960 4917 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:40,961 4918 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 16:00:40,961 4918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:40,961 4918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:40,965 4922 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:40,970 4927 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:40,971 4928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:40,971 4928 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:41,612 5569 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:41,612 5569 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:41,613 5570 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:41,613 5570 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51317
2014-09-30 16:00:41,613 5570 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51317
2014-09-30 16:00:41,613 5570 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:41,613 5570 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11252
2014-09-30 16:00:41,613 5570 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11252
2014-09-30 16:00:41,613 5570 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51317 using key 46a346ac44fd9e48
2014-09-30 16:00:41,614 5571 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:41,615 5572 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:41,638 5595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:41,742 5699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,742 5699 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:41,742 5699 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:41,743 5700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,743 5700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,744 5701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:41,746 5703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,746 5703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,746 5703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,747 5704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:41,747 5704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,747 5704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,748 5705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,748 5705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:41,749 5706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,749 5706 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,750 5707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,750 5707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:41,751 5708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,751 5708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,752 5709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,752 5709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:41,754 5711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,754 5711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,754 5711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,755 5712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:41,755 5712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,755 5712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,756 5713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,756 5713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:41,757 5714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,757 5714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,757 5714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,758 5715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:41,758 5715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,758 5715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,759 5716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,759 5716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:41,759 5716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,760 5717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,760 5717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,760 5717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:41,761 5718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:41,761 5718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,761 5718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,762 5719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:41,836 5793 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:41,838 5795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,838 5795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,840 5797 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:41,856 5813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:41,856 5813 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:41,856 5813 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:41,856 5813 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:41,856 5813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,857 5814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,857 5814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:41,897 5854 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:41,897 5854 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:41,898 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:41,899 5856 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:41,900 5857 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:41,900 5857 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:41,902 5859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,902 5859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,910 5867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 16:00:41,916 5873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 16:00:41,916 5873 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:00:41,917 5874 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:41,918 5875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:41,918 5875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:41,923 5880 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:41,928 5885 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:41,929 5886 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:41,929 5886 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:42,567 6524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:42,567 6524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:42,567 6524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:42,567 6524 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51319
2014-09-30 16:00:42,568 6525 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51319
2014-09-30 16:00:42,568 6525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:42,568 6525 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11256
2014-09-30 16:00:42,568 6525 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11256
2014-09-30 16:00:42,568 6525 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51319 using key 46a346ac44fd9e48
2014-09-30 16:00:42,569 6526 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:42,569 6526 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:42,589 6546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:42,661 6618 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,661 6618 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:42,662 6619 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:42,662 6619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,662 6619 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,663 6620 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:42,665 6622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,665 6622 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,666 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,666 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:42,666 6623 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,667 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,667 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,667 6624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:42,668 6625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,668 6625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,668 6625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,669 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:42,669 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,669 6626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,670 6627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,670 6627 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:42,671 6628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,672 6629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,672 6629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,672 6629 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:42,673 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,673 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,673 6630 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,674 6631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:42,674 6631 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,675 6632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,675 6632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,675 6632 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:42,676 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,676 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,676 6633 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,677 6634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:42,677 6634 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,678 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,678 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,678 6635 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:42,679 6636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:42,679 6636 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,680 6637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,680 6637 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:42,737 6694 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:42,739 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,739 6696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,741 6698 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:42,751 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:42,751 6708 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:42,751 6708 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:42,751 6708 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:42,751 6708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,752 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,752 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:42,787 6744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:42,787 6744 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:42,788 6745 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:42,789 6746 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:42,790 6747 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:42,792 6749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,792 6749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,799 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 16:00:42,806 6763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 16:00:42,806 6763 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:00:42,807 6764 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:42,808 6765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:42,808 6765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:42,815 6772 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:42,822 6779 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:42,823 6780 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:42,823 6780 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:43,392 7349 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:43,392 7349 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:43,393 7350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:43,393 7350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51321
2014-09-30 16:00:43,393 7350 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51321
2014-09-30 16:00:43,393 7350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:43,393 7350 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11260
2014-09-30 16:00:43,393 7350 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11260
2014-09-30 16:00:43,393 7350 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51321 using key 46a346ac44fd9e48
2014-09-30 16:00:43,394 7351 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:43,395 7352 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:43,415 7372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:43,488 7445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,488 7445 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:43,489 7446 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:43,489 7446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,490 7447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,490 7447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:43,492 7449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,492 7449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,492 7449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,493 7450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:43,493 7450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,493 7450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,494 7451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,494 7451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:43,494 7451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,495 7452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,495 7452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,495 7452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:43,496 7453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,496 7453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,496 7453 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,497 7454 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:43,498 7455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,498 7455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,498 7455 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,499 7456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:43,499 7456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,500 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,500 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,500 7457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:43,501 7458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,501 7458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,502 7459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,502 7459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:43,503 7460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,503 7460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,504 7461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,504 7461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:43,505 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,505 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,505 7462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,506 7463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:43,506 7463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:43,506 7463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,507 7464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,507 7464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:43,569 7526 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:43,571 7528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,571 7528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,572 7529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:43,582 7539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:43,582 7539 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:43,583 7540 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:43,583 7540 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:43,583 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,583 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,584 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:43,619 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:43,619 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:43,620 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:43,622 7579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,623 7580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,629 7586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 16:00:43,631 7588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 16:00:43,631 7588 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 16:00:43,632 7589 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:43,632 7589 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 16:00:43,632 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:43,632 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:43,636 7593 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:43,640 7597 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:43,641 7598 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:43,641 7598 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:44,213 8170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:44,213 8170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:44,213 8170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:44,213 8170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51323
2014-09-30 16:00:44,214 8171 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51323
2014-09-30 16:00:44,214 8171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:44,214 8171 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11264
2014-09-30 16:00:44,214 8171 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11264
2014-09-30 16:00:44,214 8171 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51323 using key 46a346ac44fd9e48
2014-09-30 16:00:44,214 8171 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:44,215 8172 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:44,231 8188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:44,302 8259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,302 8259 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:44,302 8259 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:44,302 8259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,303 8260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,303 8260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:44,305 8262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,305 8262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,306 8263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,306 8263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:44,306 8263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,307 8264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,307 8264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,307 8264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:44,308 8265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,308 8265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,308 8265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,309 8266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:44,309 8266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,309 8266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,310 8267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,310 8267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:44,311 8268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,311 8268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,312 8269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,312 8269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:44,312 8269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,313 8270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,313 8270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,313 8270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:44,314 8271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,314 8271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,315 8272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,315 8272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:44,315 8272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,316 8273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,316 8273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,316 8273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:44,317 8274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,317 8274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,317 8274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,318 8275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:44,318 8275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:44,318 8275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,318 8275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,319 8276 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:44,385 8342 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:44,386 8343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,387 8344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,388 8345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:44,400 8357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:44,400 8357 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:44,400 8357 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:44,400 8357 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:44,400 8357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,401 8358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,401 8358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:44,442 8399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:44,442 8399 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:44,442 8399 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:44,442 8399 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:44,442 8399 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:44,442 8399 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:44,443 8400 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:44,444 8401 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:44,446 8403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,447 8404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,454 8411 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 16:00:44,461 8418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:00:44,461 8418 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:00:44,462 8419 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:44,462 8419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:44,463 8420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:44,466 8423 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:44,472 8429 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:44,473 8430 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:44,474 8431 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:45,061 9018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:45,061 9018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:45,061 9018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:45,061 9018 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51325
2014-09-30 16:00:45,062 9019 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51325
2014-09-30 16:00:45,062 9019 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:45,062 9019 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11268
2014-09-30 16:00:45,062 9019 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11268
2014-09-30 16:00:45,062 9019 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51325 using key 46a346ac44fd9e48
2014-09-30 16:00:45,063 9020 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:45,064 9021 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:45,080 9037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:45,151 9108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,151 9108 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:45,151 9108 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:45,151 9108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,152 9109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,153 9110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:45,155 9112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,155 9112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,155 9112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,155 9112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:45,156 9113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,156 9113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,156 9113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,157 9114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:45,157 9114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,158 9115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,158 9115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,158 9115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:45,159 9116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,159 9116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,159 9116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,160 9117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:45,161 9118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,161 9118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,162 9119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,162 9119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:45,162 9119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,163 9120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,163 9120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,164 9121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:45,164 9121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,165 9122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,165 9122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,165 9122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:45,166 9123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,166 9123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,166 9123 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,167 9124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:45,167 9124 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,168 9125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,168 9125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,168 9125 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:45,169 9126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,169 9126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,169 9126 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,170 9127 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:45,228 9185 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:45,229 9186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,230 9187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,231 9188 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:45,242 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:45,242 9199 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:45,242 9199 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:45,242 9199 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:45,242 9199 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,243 9200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,243 9200 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:45,278 9235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:45,278 9235 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:45,279 9236 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:45,280 9237 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:45,280 9237 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:45,280 9237 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:45,280 9237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,281 9238 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,288 9245 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 16:00:45,294 9251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 16:00:45,294 9251 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 16:00:45,295 9252 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:45,295 9252 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,296 9253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,299 9256 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:45,304 9261 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:45,305 9262 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:45,305 9262 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51327
2014-09-30 16:00:45,889 9846 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51327
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:45,889 9846 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11272
2014-09-30 16:00:45,890 9847 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11272
2014-09-30 16:00:45,890 9847 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51327 using key 46a346ac44fd9e48
2014-09-30 16:00:45,890 9847 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:45,891 9848 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:45,907 9864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:45,978 9935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,978 9935 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:45,979 9936 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:45,979 9936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,980 9937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,980 9937 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:45,981 9938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,982 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,982 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,982 9939 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:45,983 9940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,983 9940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,983 9940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,984 9941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:45,984 9941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,984 9941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,985 9942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,985 9942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:45,985 9942 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,986 9943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,986 9943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,986 9943 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:45,987 9944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,988 9945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,988 9945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,988 9945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:45,989 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,989 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,989 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,989 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:45,990 9947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,990 9947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,991 9948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,991 9948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:45,992 9949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,992 9949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,992 9949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,992 9949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:45,993 9950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,993 9950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,993 9950 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,994 9951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:45,994 9951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:45,994 9951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:45,995 9952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:45,995 9952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:46,053 10010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:46,055 10012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,055 10012 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,056 10013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:46,067 10024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:46,067 10024 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:46,068 10025 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:46,068 10025 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:46,068 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,068 10025 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,069 10026 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:46,104 10061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:46,104 10061 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:46,105 10062 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,106 10063 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,107 10064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,107 10064 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,113 10070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 16:00:46,120 10077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 16:00:46,120 10077 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:00:46,120 10077 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:46,120 10077 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:00:46,120 10077 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:00:46,120 10077 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:00:46,121 10078 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:00:46,121 10078 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:00:46,121 10078 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:46,121 10078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,121 10078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,124 10081 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:46,129 10086 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:46,130 10087 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:46,130 10087 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:46,696 10653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:46,696 10653 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:46,697 10654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:46,697 10654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51329
2014-09-30 16:00:46,697 10654 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51329
2014-09-30 16:00:46,697 10654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:46,697 10654 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11276
2014-09-30 16:00:46,697 10654 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11276
2014-09-30 16:00:46,697 10654 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51329 using key 46a346ac44fd9e48
2014-09-30 16:00:46,698 10655 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:46,699 10656 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:46,718 10675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:46,789 10746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,789 10746 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:46,789 10746 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:46,789 10746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,790 10747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,790 10747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:46,792 10749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,792 10749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,793 10750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,793 10750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:46,793 10750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,794 10751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,794 10751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,794 10751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:46,795 10752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,795 10752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,795 10752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,796 10753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:46,796 10753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,796 10753 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,797 10754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,797 10754 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:46,799 10756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,799 10756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,799 10756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,800 10757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:46,800 10757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,800 10757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,801 10758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,801 10758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:46,802 10759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,802 10759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,802 10759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,803 10760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:46,803 10760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,803 10760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,804 10761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,804 10761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:46,805 10762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,805 10762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,805 10762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,806 10763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:46,806 10763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:46,807 10764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,807 10764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,808 10765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:46,875 10832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:46,876 10833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,877 10834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,878 10835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:46,888 10845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:46,888 10845 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:46,888 10845 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:46,888 10845 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:46,889 10846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,889 10846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,889 10846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:46,924 10881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:46,924 10881 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,925 10882 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,926 10883 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,927 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,927 10884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,932 10889 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 16:00:46,933 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 16:00:46,933 10890 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:46,933 10890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:46,934 10891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:46,937 10894 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:46,941 10898 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:46,942 10899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:46,942 10899 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:47,536 11493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:47,536 11493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:47,537 11494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:47,537 11494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51331
2014-09-30 16:00:47,537 11494 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51331
2014-09-30 16:00:47,537 11494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:47,537 11494 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11280
2014-09-30 16:00:47,537 11494 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11280
2014-09-30 16:00:47,537 11494 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51331 using key 46a346ac44fd9e48
2014-09-30 16:00:47,538 11495 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:47,539 11496 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:47,555 11512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:47,628 11585 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,629 11586 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:47,629 11586 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:47,629 11586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,630 11587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,630 11587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:47,632 11589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,632 11589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,632 11589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,633 11590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:47,633 11590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,633 11590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,634 11591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,634 11591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:47,634 11591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,634 11591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,635 11592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,635 11592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:47,636 11593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,636 11593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,636 11593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,637 11594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:47,638 11595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,638 11595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,638 11595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,639 11596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:47,639 11596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,639 11596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,640 11597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,640 11597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:47,641 11598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,641 11598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,641 11598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,641 11598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:47,642 11599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,642 11599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,642 11599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,643 11600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:47,643 11600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,643 11600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,643 11600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,644 11601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:47,644 11601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:47,644 11601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,644 11601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,645 11602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:47,703 11660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:47,704 11661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,704 11661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,705 11662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:47,716 11673 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:47,716 11673 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:47,716 11673 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:47,716 11673 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:47,717 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,717 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,717 11674 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:47,752 11709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:47,752 11709 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:47,752 11709 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:47,752 11709 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:47,753 11710 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:47,754 11711 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,755 11712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,758 11715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,x),identifier(none,'COLOURS'))),'#PREDICATE','not(x : COLOURS)'),ARes),true.

2014-09-30 16:00:47,759 11716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(x : COLOURS)')),[]))
2014-09-30 16:00:47,759 11716 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ x : COLOURS)
2014-09-30 16:00:47,759 11716 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:47,759 11716 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 16:00:47,759 11716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:47,760 11717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:47,763 11720 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:47,769 11726 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:47,770 11727 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:47,771 11728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:48,354 12311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:48,354 12311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:48,354 12311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:48,354 12311 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51333
2014-09-30 16:00:48,355 12312 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51333
2014-09-30 16:00:48,355 12312 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:48,355 12312 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11284
2014-09-30 16:00:48,355 12312 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11284
2014-09-30 16:00:48,355 12312 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51333 using key 46a346ac44fd9e48
2014-09-30 16:00:48,356 12313 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:48,357 12314 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:48,372 12329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:48,445 12402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,445 12402 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:48,446 12403 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:48,446 12403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,447 12404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,447 12404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:48,449 12406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,449 12406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,449 12406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,449 12406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:48,450 12407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,450 12407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,450 12407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,451 12408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:48,451 12408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,451 12408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,452 12409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,452 12409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:48,452 12409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,453 12410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,453 12410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,453 12410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:48,455 12412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,455 12412 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,456 12413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,456 12413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:48,456 12413 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,457 12414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,457 12414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,458 12415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:48,458 12415 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,459 12416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,459 12416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,459 12416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:48,460 12417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,461 12418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,461 12418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,461 12418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:48,462 12419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,462 12419 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,463 12420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,463 12420 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:48,464 12421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:48,464 12421 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,465 12422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,465 12422 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:48,524 12481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:48,525 12482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,526 12483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,527 12484 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:48,537 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:48,537 12494 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:48,537 12494 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:48,537 12494 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:48,537 12494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,538 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,538 12495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:48,574 12531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:48,574 12531 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:48,575 12532 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:48,576 12533 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:48,576 12533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,577 12534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,581 12538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,x),identifier(none,'COLOURS')),'#PREDICATE','x : COLOURS'),ARes),true.

2014-09-30 16:00:48,583 12540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),[]),'x : COLOURS')),[]))
2014-09-30 16:00:48,583 12540 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is TRUE
2014-09-30 16:00:48,583 12540 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:00:48,583 12540 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red
2014-09-30 16:00:48,583 12540 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:48,584 12541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:48,584 12541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:48,587 12544 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:00:48,592 12549 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:00:48,593 12550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:00:48,593 12550 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:00:49,169 13126 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:00:49,169 13126 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:00:49,169 13126 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:00:49,169 13126 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51335
2014-09-30 16:00:49,170 13127 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51335
2014-09-30 16:00:49,170 13127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:00:49,170 13127 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11288
2014-09-30 16:00:49,170 13127 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11288
2014-09-30 16:00:49,170 13127 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51335 using key 46a346ac44fd9e48
2014-09-30 16:00:49,171 13128 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:00:49,172 13129 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:00:49,186 13143 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:00:49,258 13215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,259 13216 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:00:49,259 13216 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:00:49,259 13216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,260 13217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,260 13217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:00:49,262 13219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,262 13219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,262 13219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,263 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:00:49,263 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,263 13220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,264 13221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,264 13221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:00:49,264 13221 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,265 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,265 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,265 13222 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:00:49,266 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,266 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,266 13223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,267 13224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:00:49,268 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,268 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,268 13225 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,269 13226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:00:49,269 13226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,269 13226 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,270 13227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,270 13227 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:00:49,271 13228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,271 13228 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,272 13229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,272 13229 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:00:49,273 13230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,273 13230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,273 13230 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,274 13231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:00:49,274 13231 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,275 13232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,275 13232 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,276 13233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:00:49,276 13233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:00:49,276 13233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,277 13234 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,278 13235 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:00:49,335 13292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:49,336 13293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,337 13294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,338 13295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:00:49,350 13307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:00:49,350 13307 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:00:49,350 13307 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:00:49,350 13307 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:00:49,350 13307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,351 13308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,351 13308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:00:49,391 13348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:00:49,391 13348 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:49,392 13349 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:49,393 13350 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:49,393 13350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,394 13351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:00:49,400 13357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 16:00:49,401 13358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 16:00:49,401 13358 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:00:49,402 13359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:00:49,402 13359 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:46,633 3006 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:46,646 3019 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:46,650 3023 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:46,650 3023 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:47,200 3573 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:47,201 3574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:47,201 3574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:47,201 3574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51340
2014-09-30 16:01:47,201 3574 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51340
2014-09-30 16:01:47,201 3574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:47,201 3574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11294
2014-09-30 16:01:47,201 3574 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11294
2014-09-30 16:01:47,202 3575 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51340 using key c14adfc82c02c4da
2014-09-30 16:01:47,203 3576 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:47,204 3577 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:47,366 3739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:47,438 3811 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:47,438 3811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,438 3811 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:47,454 3827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,455 3828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,458 3831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:47,459 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,460 3833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,460 3833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,460 3833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:47,461 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,461 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,461 3834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,462 3835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:47,463 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,463 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,463 3836 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,464 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:47,464 3837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,465 3838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,465 3838 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,466 3839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:47,467 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,467 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,467 3840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,468 3841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:47,468 3841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,469 3842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,469 3842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,470 3843 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:47,471 3844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,471 3844 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,472 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,473 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:47,473 3846 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,474 3847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,474 3847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,475 3848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:47,475 3848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,475 3848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,475 3848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,476 3849 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:47,477 3850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:47,477 3850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,477 3850 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,495 3868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:47,595 3968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:47,599 3972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,599 3972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,608 3981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:47,621 3994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:47,622 3995 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,623 3996 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:47,623 3996 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:47,623 3996 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:47,623 3996 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,636 4009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_6,formula_4,formula_10,formula_3,formula_1,formula_7,formula_2,formula_8,formula_5,formula_9],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:47,676 4049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:47,676 4049 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:47,676 4049 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:47,676 4049 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:47,676 4049 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:47,677 4050 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:47,678 4051 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:47,736 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,737 4110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,764 4137 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,x),identifier(none,'COLOURS'))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 16:01:47,773 4146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 16:01:47,773 4146 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:01:47,774 4147 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:47,777 4150 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:47,778 4151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:47,783 4156 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:47,790 4163 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:47,791 4164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:47,791 4164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:48,454 4827 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:48,454 4827 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:48,455 4828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:48,455 4828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51342
2014-09-30 16:01:48,455 4828 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51342
2014-09-30 16:01:48,455 4828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:48,455 4828 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11298
2014-09-30 16:01:48,455 4828 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11298
2014-09-30 16:01:48,456 4829 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51342 using key c14adfc82c02c4da
2014-09-30 16:01:48,456 4829 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:48,457 4830 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:48,500 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:48,594 4967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,594 4967 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:48,595 4968 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:48,595 4968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,596 4969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,596 4969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:48,598 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,598 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,598 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,599 4972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:48,599 4972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,599 4972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,600 4973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,600 4973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:48,601 4974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,601 4974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,602 4975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,602 4975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:48,603 4976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,603 4976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,603 4976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,604 4977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_18,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:48,605 4978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,605 4978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,605 4978 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,606 4979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_19,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:48,606 4979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,607 4980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,607 4980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,607 4980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_20,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:48,608 4981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,609 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,609 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,610 4983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:48,610 4983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,610 4983 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,611 4984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,611 4984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:48,612 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,612 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,612 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,613 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_23,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:48,613 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:48,613 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,613 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,614 4987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:48,679 5052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:48,681 5054 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,682 5055 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,684 5057 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:48,702 5075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:48,702 5075 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:48,703 5076 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:48,703 5076 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:48,703 5076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,704 5077 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,705 5078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_19,formula_17,formula_23,formula_16,formula_14,formula_20,formula_15,formula_21,formula_18,formula_22],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:48,760 5133 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:48,760 5133 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:48,760 5133 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:48,761 5134 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:48,762 5135 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:48,763 5136 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:48,766 5139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,766 5139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,775 5148 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,x),identifier(none,'COLOURS')))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,x),identifier(none,col1))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,x),identifier(none,col1))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))'),ARes),true.

2014-09-30 16:01:48,779 5152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x : COLOURS) & ((1=1 & x /: col1) <=> not(1=2 & x /: col1)))')),[]))
2014-09-30 16:01:48,779 5152 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 16:01:48,780 5153 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:48,780 5153 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 16:01:48,780 5153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:48,780 5153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:48,785 5158 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:48,789 5162 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:48,790 5163 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:48,791 5164 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:49,405 5778 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:49,406 5779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:49,406 5779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:49,406 5779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51344
2014-09-30 16:01:49,406 5779 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51344
2014-09-30 16:01:49,406 5779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:49,406 5779 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11302
2014-09-30 16:01:49,406 5779 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11302
2014-09-30 16:01:49,407 5780 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51344 using key c14adfc82c02c4da
2014-09-30 16:01:49,407 5780 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:49,408 5781 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:49,436 5809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:49,533 5906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,533 5906 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:49,534 5907 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:49,534 5907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,534 5907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,535 5908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:49,537 5910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,537 5910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,537 5910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,537 5910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:49,538 5911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,538 5911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,538 5911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,539 5912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_29,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:49,540 5913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,540 5913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,540 5913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,541 5914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_30,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:49,542 5915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,542 5915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,542 5915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,543 5916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:49,544 5917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,544 5917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,545 5918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,545 5918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:49,546 5919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,546 5919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,546 5919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,547 5920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_33,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:49,547 5920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,547 5920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,548 5921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,548 5921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_34,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:49,549 5922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,549 5922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,549 5922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,550 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_35,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:49,550 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,550 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,550 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,551 5924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:49,551 5924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:49,551 5924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,552 5925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,552 5925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:49,637 6010 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:49,640 6013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,640 6013 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,642 6015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:49,656 6029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:49,656 6029 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:49,656 6029 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:49,657 6030 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:49,657 6030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,657 6030 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,658 6031 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_30,formula_36,formula_29,formula_27,formula_33,formula_28,formula_34,formula_31,formula_35],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:49,697 6070 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:49,697 6070 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:49,698 6071 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:49,699 6072 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:49,700 6073 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:49,700 6073 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:49,700 6073 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:49,702 6075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,703 6076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,714 6087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),not_member(none,identifier(none,x),identifier(none,col1))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 16:01:49,720 6093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 16:01:49,720 6093 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:01:49,720 6093 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:49,720 6093 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:01:49,720 6093 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:49,720 6093 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:49,721 6094 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:01:49,721 6094 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:01:49,721 6094 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:49,721 6094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:49,722 6095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:49,726 6099 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:49,730 6103 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:49,732 6105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:49,732 6105 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:50,442 6815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:50,442 6815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:50,442 6815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:50,442 6815 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51346
2014-09-30 16:01:50,443 6816 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51346
2014-09-30 16:01:50,443 6816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:50,443 6816 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11306
2014-09-30 16:01:50,443 6816 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11306
2014-09-30 16:01:50,443 6816 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51346 using key c14adfc82c02c4da
2014-09-30 16:01:50,444 6817 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:50,444 6817 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:50,464 6837 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:50,540 6913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,540 6913 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:50,540 6913 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:50,540 6913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,541 6914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,541 6914 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:50,543 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,543 6916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,544 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,544 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:50,544 6917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,545 6918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,545 6918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,546 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:50,546 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,546 6919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,547 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,547 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_43,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:50,547 6920 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,548 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,548 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,548 6921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_44,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:50,550 6923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,550 6923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,551 6924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,551 6924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_45,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:50,552 6925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,552 6925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,552 6925 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,553 6926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:50,553 6926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,554 6927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,554 6927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,554 6927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:50,555 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,555 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,555 6928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,556 6929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_48,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:50,556 6929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,556 6929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,557 6930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,557 6930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:50,558 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:50,558 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,558 6931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,559 6932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:50,619 6992 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:50,620 6993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,620 6993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,621 6994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:50,632 7005 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:50,632 7005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:50,632 7005 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:50,632 7005 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:50,632 7005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,633 7006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,633 7006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_45,formula_43,formula_49,formula_42,formula_40,formula_46,formula_41,formula_47,formula_44,formula_48],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:50,668 7041 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:50,668 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:50,668 7041 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:50,669 7042 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:50,670 7043 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:50,670 7043 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:50,672 7045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,672 7045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,679 7052 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,not_member(none,identifier(none,x),identifier(none,col1)))),equivalence(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,x),identifier(none,'COLOURS')),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))'),ARes),true.

2014-09-30 16:01:50,686 7059 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x,col,b,col1,col2 is TRUE
2014-09-30 16:01:50,686 7059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,'.'(fd(1,'COLOURS'),[]),'{red}'),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(x /: col1) & ((x : COLOURS & 1=1) <=> not(x : COLOURS & 1=2)))')),[]))
2014-09-30 16:01:50,686 7059 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:50,686 7059 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red &
2014-09-30 16:01:50,687 7060 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:50,687 7060 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:50,687 7060 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {red} &
2014-09-30 16:01:50,687 7060 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:01:50,687 7060 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:50,688 7061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:50,688 7061 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:50,693 7066 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:50,700 7073 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:50,701 7074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:50,701 7074 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:51,286 7659 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:51,286 7659 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:51,287 7660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:51,287 7660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51348
2014-09-30 16:01:51,287 7660 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51348
2014-09-30 16:01:51,287 7660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:51,287 7660 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11310
2014-09-30 16:01:51,287 7660 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11310
2014-09-30 16:01:51,287 7660 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51348 using key c14adfc82c02c4da
2014-09-30 16:01:51,288 7661 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:51,289 7662 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:51,312 7685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:51,383 7756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,383 7756 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:51,384 7757 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:51,384 7757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,384 7757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,385 7758 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_53,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:51,387 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,387 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,387 7760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,388 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_54,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:51,388 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,388 7761 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,389 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,389 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_55,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:51,389 7762 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,390 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,390 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,390 7763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:51,391 7764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,391 7764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,391 7764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,392 7765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:51,393 7766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,393 7766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,393 7766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,394 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_58,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:51,394 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,394 7767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,395 7768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,395 7768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_59,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:51,396 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,396 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,396 7769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,397 7770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_60,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:51,398 7771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,398 7771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,398 7771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,399 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:51,399 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,399 7772 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,400 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,400 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:51,400 7773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:51,401 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,401 7774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,402 7775 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:51,459 7832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:51,461 7834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,461 7834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,462 7835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:51,474 7847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:51,474 7847 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:51,474 7847 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:51,474 7847 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:51,474 7847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,475 7848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,475 7848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_58,formula_56,formula_62,formula_55,formula_53,formula_59,formula_54,formula_60,formula_57,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:51,510 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:51,510 7883 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:51,510 7883 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:51,510 7883 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:51,510 7883 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:51,510 7883 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:51,511 7884 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:51,512 7885 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:51,512 7885 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:51,512 7885 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:51,512 7885 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:51,512 7885 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:51,514 7887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,515 7888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,522 7895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,member(none,identifier(none,v),bool_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 16:01:51,524 7897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 16:01:51,524 7897 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: (TRUE=FALSE)
2014-09-30 16:01:51,524 7897 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:51,524 7897 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v is FALSE
2014-09-30 16:01:51,525 7898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:51,525 7898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:51,529 7902 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:51,533 7906 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:51,534 7907 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:51,534 7907 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:52,119 8492 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51350
2014-09-30 16:01:52,120 8493 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51350
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11314
2014-09-30 16:01:52,120 8493 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11314
2014-09-30 16:01:52,120 8493 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51350 using key c14adfc82c02c4da
2014-09-30 16:01:52,121 8494 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:52,122 8495 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:52,139 8512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:52,209 8582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,210 8583 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:52,210 8583 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:52,210 8583 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,211 8584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,211 8584 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_66,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:52,213 8586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,213 8586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,213 8586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,214 8587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_67,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:52,214 8587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,214 8587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,215 8588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,215 8588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_68,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:52,215 8588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,216 8589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,216 8589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,216 8589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_69,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:52,217 8590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,217 8590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,217 8590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,218 8591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_70,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:52,219 8592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,219 8592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,220 8593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,220 8593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_71,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:52,220 8593 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,221 8594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,221 8594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,221 8594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_72,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:52,222 8595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,222 8595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,222 8595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,223 8596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:52,223 8596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,224 8597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,224 8597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,224 8597 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:52,225 8598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,225 8598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,225 8598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,226 8599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:52,226 8599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:52,226 8599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,226 8599 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,227 8600 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:52,292 8665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:52,294 8667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,294 8667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,296 8669 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:52,307 8680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:52,307 8680 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:52,307 8680 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:52,307 8680 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:52,308 8681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,308 8681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,309 8682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_71,formula_69,formula_75,formula_68,formula_66,formula_72,formula_67,formula_73,formula_70,formula_74],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:52,349 8722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:52,349 8722 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:52,350 8723 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:52,351 8724 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:52,352 8725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:52,352 8725 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:52,354 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,354 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,361 8734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 16:01:52,367 8740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 16:01:52,367 8740 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:01:52,368 8741 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:52,369 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:52,369 8742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:52,373 8746 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:52,379 8752 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:52,380 8753 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:52,381 8754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:52,964 9337 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:52,964 9337 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:52,965 9338 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:52,965 9338 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51352
2014-09-30 16:01:52,965 9338 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51352
2014-09-30 16:01:52,965 9338 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:52,965 9338 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11318
2014-09-30 16:01:52,965 9338 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11318
2014-09-30 16:01:52,965 9338 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51352 using key c14adfc82c02c4da
2014-09-30 16:01:52,966 9339 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:52,967 9340 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:52,983 9356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:53,060 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,060 9433 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:53,060 9433 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:53,060 9433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,061 9434 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,062 9435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_79,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:53,064 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,064 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,064 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,064 9437 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_80,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:53,065 9438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,065 9438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,065 9438 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,066 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_81,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:53,066 9439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,067 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,067 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,067 9440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_82,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:53,068 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,068 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,068 9441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,069 9442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_83,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:53,070 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,070 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,071 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,071 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_84,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:53,071 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,072 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,072 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,072 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:53,073 9446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,073 9446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,074 9447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,074 9447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:53,075 9448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,075 9448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,075 9448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,075 9448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:53,076 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,076 9449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,077 9450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,077 9450 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:53,078 9451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,078 9451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,078 9451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,079 9452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:53,136 9509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:53,137 9510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,138 9511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,139 9512 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:53,150 9523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:53,150 9523 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:53,150 9523 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:53,150 9523 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:53,150 9523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,150 9523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,151 9524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_84,formula_82,formula_88,formula_81,formula_79,formula_85,formula_80,formula_86,formula_83,formula_87],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:53,186 9559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:53,186 9559 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:53,187 9560 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:53,188 9561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:53,188 9561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:53,188 9561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:53,188 9561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:53,188 9561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:53,189 9562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,189 9562 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,196 9569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),negation(none,implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2))))),equivalence(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,member(none,identifier(none,v),bool_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))'),ARes),true.

2014-09-30 16:01:53,204 9577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,'.'(fd(1,'COLOURS'),[]),'{red}'),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & not(((v = TRUE) => (col1 = col2))) & ((v : BOOL & 1=1) <=> not(v : BOOL & 1=2)))')),[]))
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {red}
2014-09-30 16:01:53,204 9577 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:53,205 9578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,205 9578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,208 9581 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:53,213 9586 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:53,214 9587 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:53,214 9587 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:53,793 10166 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:53,794 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:53,794 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:53,794 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51354
2014-09-30 16:01:53,794 10167 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51354
2014-09-30 16:01:53,794 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:53,794 10167 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11322
2014-09-30 16:01:53,795 10168 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11322
2014-09-30 16:01:53,795 10168 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51354 using key c14adfc82c02c4da
2014-09-30 16:01:53,795 10168 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:53,796 10169 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:53,814 10187 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:53,884 10257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,884 10257 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:53,885 10258 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:53,885 10258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,886 10259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,886 10259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_92,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:53,888 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,888 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,888 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,888 10261 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_93,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:53,889 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,889 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,889 10262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,890 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_94,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:53,890 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,890 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,891 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,891 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_95,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:53,891 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,891 10264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,892 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,892 10265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_96,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:53,893 10266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,893 10266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,894 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,894 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:53,894 10267 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,895 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,895 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,895 10268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:53,896 10269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,896 10269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,896 10269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,897 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:53,897 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,897 10270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,898 10271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,898 10271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:53,899 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,899 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,899 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,899 10272 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_101,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:53,900 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:53,900 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,900 10273 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,901 10274 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:53,959 10332 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:53,960 10333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,960 10333 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,961 10334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:53,971 10344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:53,971 10344 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:53,971 10344 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:53,971 10344 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:53,971 10344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:53,972 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:53,972 10345 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_97,formula_95,formula_101,formula_94,formula_92,formula_98,formula_93,formula_99,formula_96,formula_100],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:54,007 10380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:54,007 10380 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,008 10381 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,009 10382 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,010 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,010 10383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,016 10389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,col),identifier(none,b),identifier(none,col1),identifier(none,col2)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),member(none,identifier(none,v),bool_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),implication(none,equal(none,identifier(none,v),boolean_true(none)),equal(none,identifier(none,col1),identifier(none,col2)))))))),'#PREDICATE','#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))'),ARes),true.

2014-09-30 16:01:54,023 10396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(v,pred_true,'TRUE'),'.'(bind(col,fd(1,'COLOURS'),red),'.'(bind(b,pred_true,'TRUE'),'.'(bind(col1,[],{}),'.'(bind(col2,[],{}),[]))))),'#col,b,col1,col2.((col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS) & (v : BOOL) & ((1=1 & ((v = TRUE) => (col1 = col2))) <=> not(1=2 & ((v = TRUE) => (col1 = col2)))))')),[]))
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over v,col,b,col1,col2 is TRUE
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        v = TRUE &
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col = red &
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        b = TRUE &
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col1 = {} &
2014-09-30 16:01:54,023 10396 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        col2 = {}
2014-09-30 16:01:54,024 10397 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:54,024 10397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,024 10397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,028 10401 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:54,032 10405 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:54,033 10406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:54,033 10406 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:54,606 10979 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:54,607 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:54,607 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:54,607 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51356
2014-09-30 16:01:54,607 10980 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51356
2014-09-30 16:01:54,607 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:54,607 10980 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11326
2014-09-30 16:01:54,608 10981 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11326
2014-09-30 16:01:54,608 10981 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51356 using key c14adfc82c02c4da
2014-09-30 16:01:54,608 10981 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:54,609 10982 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:54,629 11002 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:54,701 11074 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,701 11074 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:54,701 11074 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:54,702 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,702 11075 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,703 11076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_105,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:54,705 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,705 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,705 11078 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,706 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_106,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:54,706 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,706 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,706 11079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,707 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_107,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:54,707 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,707 11080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,708 11081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,708 11081 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_108,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:54,709 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,709 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,709 11082 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,710 11083 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:54,711 11084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,711 11084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,711 11084 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,712 11085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:54,712 11085 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,713 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,713 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,713 11086 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:54,714 11087 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,715 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,715 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,715 11088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:54,716 11089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,716 11089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,716 11089 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,717 11090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_113,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:54,717 11090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,717 11090 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,718 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,718 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_114,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:54,718 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:54,719 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,719 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,720 11093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:54,778 11151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:54,779 11152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,779 11152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,780 11153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:54,791 11164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:54,791 11164 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:54,791 11164 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:54,791 11164 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:54,791 11164 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,792 11165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,792 11165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_110,formula_108,formula_114,formula_107,formula_105,formula_111,formula_106,formula_112,formula_109,formula_113],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:54,837 11210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:54,837 11210 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:54,837 11210 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:54,838 11211 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,839 11212 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,840 11213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,840 11213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,844 11217 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 16:01:54,846 11219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 16:01:54,846 11219 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:54,846 11219 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:54,847 11220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:54,851 11224 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:54,855 11228 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:54,856 11229 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:54,856 11229 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:55,426 11799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:55,426 11799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:55,426 11799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:55,426 11799 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51358
2014-09-30 16:01:55,427 11800 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51358
2014-09-30 16:01:55,427 11800 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:55,427 11800 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11330
2014-09-30 16:01:55,427 11800 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11330
2014-09-30 16:01:55,427 11800 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51358 using key c14adfc82c02c4da
2014-09-30 16:01:55,428 11801 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:55,429 11802 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:55,445 11818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:55,519 11892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,519 11892 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:55,519 11892 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:55,519 11892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,520 11893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,520 11893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_118,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:55,522 11895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,523 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,523 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,523 11896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_119,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:55,524 11897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,524 11897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,524 11897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,525 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_120,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:55,525 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,525 11898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,526 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,526 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:55,526 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,526 11899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,527 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,527 11900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:55,528 11901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,528 11901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,529 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,529 11902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:55,530 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,530 11903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,531 11904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,531 11904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:55,532 11905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,532 11905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,533 11906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,533 11906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_125,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:55,533 11906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,534 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,534 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,534 11907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_126,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:55,535 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,535 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,535 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,535 11908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_127,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:55,536 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:55,536 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,536 11909 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,537 11910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:55,600 11973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:55,601 11974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,601 11974 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,602 11975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:55,612 11985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:55,612 11985 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:55,613 11986 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:55,613 11986 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:55,613 11986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,613 11986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,614 11987 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_121,formula_127,formula_120,formula_118,formula_124,formula_119,formula_125,formula_122,formula_126],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:55,649 12022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:55,649 12022 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:55,650 12023 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:55,651 12024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,651 12024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,654 12027 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,x),identifier(none,'COLOURS'))),'#PREDICATE','not(x : COLOURS)'),ARes),true.

2014-09-30 16:01:55,655 12028 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(x : COLOURS)')),[]))
2014-09-30 16:01:55,656 12029 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ x : COLOURS)
2014-09-30 16:01:55,656 12029 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:55,656 12029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:55,656 12029 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is FALSE
2014-09-30 16:01:55,656 12029 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:55,659 12032 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:55,666 12039 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:55,667 12040 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:55,667 12040 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:56,253 12626 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:56,253 12626 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:56,253 12626 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:56,253 12626 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51360
2014-09-30 16:01:56,254 12627 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51360
2014-09-30 16:01:56,254 12627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:56,254 12627 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11334
2014-09-30 16:01:56,254 12627 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11334
2014-09-30 16:01:56,254 12627 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51360 using key c14adfc82c02c4da
2014-09-30 16:01:56,255 12628 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:56,255 12628 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:56,269 12642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:56,340 12713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,340 12713 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:56,341 12714 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:56,341 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,341 12714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,342 12715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_131,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:56,344 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,344 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,344 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,344 12717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_132,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:56,345 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,345 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,345 12718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,346 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:56,346 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,346 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,347 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,347 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:56,347 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,347 12720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,348 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,348 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:56,349 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,349 12722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,350 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,350 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:56,351 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,351 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,351 12724 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,352 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_137,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:56,352 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,352 12725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,353 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,353 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_138,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:56,353 12726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,354 12727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,354 12727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,354 12727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_139,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:56,355 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,355 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,355 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,355 12728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_140,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:56,356 12729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:56,356 12729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,356 12729 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,357 12730 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:56,417 12790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:56,417 12790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,418 12791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,419 12792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:56,429 12802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:56,429 12802 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:56,429 12802 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:56,429 12802 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:56,430 12803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,430 12803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,431 12804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_136,formula_134,formula_140,formula_133,formula_131,formula_137,formula_132,formula_138,formula_135,formula_139],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:56,466 12839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:56,466 12839 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:56,466 12839 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:56,466 12839 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:56,467 12840 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:56,468 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:56,468 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:56,468 12841 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:56,468 12841 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,469 12842 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,472 12845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,x),identifier(none,'COLOURS')),'#PREDICATE','x : COLOURS'),ARes),true.

2014-09-30 16:01:56,474 12847 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(x,fd(1,'COLOURS'),red),[]),'x : COLOURS')),[]))
2014-09-30 16:01:56,474 12847 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over x is TRUE
2014-09-30 16:01:56,475 12848 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:01:56,475 12848 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        x = red
2014-09-30 16:01:56,475 12848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:56,475 12848 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:56,475 12848 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:56,478 12851 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:01:56,483 12856 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:01:56,484 12857 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:01:56,484 12857 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:01:57,061 13434 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:01:57,062 13435 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:01:57,062 13435 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:01:57,062 13435 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51362
2014-09-30 16:01:57,062 13435 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51362
2014-09-30 16:01:57,062 13435 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:01:57,062 13435 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11338
2014-09-30 16:01:57,062 13435 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11338
2014-09-30 16:01:57,063 13436 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51362 using key c14adfc82c02c4da
2014-09-30 16:01:57,063 13436 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:01:57,065 13438 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:01:57,079 13452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Any.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Any',['/Users/ernestocid/Temp/MCDC/Any.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Any',[]),[sets(4,[enumerated_set(5,'COLOURS',[identifier(6,red),identifier(7,green),identifier(8,blue)])]),variables(9,[identifier(10,col1),identifier(11,col2),identifier(12,b),identifier(13,col)]),invariant(14,conjunct(15,conjunct(16,conjunct(17,conjunct(18,conjunct(19,member(20,identifier(21,col1),pow_subset(22,identifier(23,'COLOURS'))),member(24,identifier(25,col2),pow_subset(26,identifier(27,'COLOURS')))),forall(28,[identifier(29,cc)],implication(30,member(31,identifier(32,cc),identifier(33,col1)),not_member(34,identifier(35,cc),identifier(36,col2))))),forall(37,[identifier(38,cc2)],implication(39,member(40,identifier(41,cc2),identifier(42,col2)),not_member(43,identifier(44,cc2),identifier(45,col1))))),member(46,identifier(47,b),bool_set(48))),member(49,identifier(50,col),identifier(51,'COLOURS')))),initialisation(52,parallel(53,[becomes_element_of(54,[identifier(55,col1)],pow_subset(56,identifier(57,'COLOURS'))),assign(58,[identifier(59,col2)],[set_extension(60,[identifier(61,green)])]),assign(62,[identifier(63,b)],[boolean_true(64)]),becomes_element_of(65,[identifier(66,col)],identifier(67,'COLOURS'))])),operations(68,[operation(69,identifier(69,add),[],[],any(70,[identifier(71,x)],conjunct(72,member(73,identifier(74,x),identifier(75,'COLOURS')),not_member(76,identifier(77,x),identifier(78,col1))),assign(79,[identifier(80,col1)],[union(81,identifier(82,col1),set_extension(83,[identifier(84,x)]))]))),operation(85,identifier(85,setb),[],[],any(86,[identifier(87,v)],conjunct(88,member(89,identifier(90,v),bool_set(91)),implication(92,equal(93,identifier(94,v),boolean_true(95)),equal(96,identifier(97,col1),identifier(98,col2)))),assign(99,[identifier(100,b)],[identifier(101,v)]))),operation(102,identifier(102,swap),[],[],block(103,parallel(104,[assign(105,[identifier(106,col1)],[identifier(107,col2)]),assign(108,[identifier(109,col2)],[identifier(110,col1)])]))),operation(111,identifier(111,'RemoveElement'),[],[identifier(112,x)],precondition(113,member(114,identifier(115,x),identifier(116,'COLOURS')),parallel(117,[assign(118,[identifier(119,col1)],[minus_or_set_subtract(120,identifier(121,col1),set_extension(122,[identifier(123,x)]))]),assign(124,[identifier(125,col2)],[minus_or_set_subtract(126,identifier(127,col2),set_extension(128,[identifier(129,x)]))])]))),operation(130,identifier(130,'Col12'),[identifier(131,cc)],[],block(132,assign(133,[identifier(134,cc)],[comprehension_set(135,[identifier(136,xx)],conjunct(137,member(138,identifier(139,xx),pow_subset(140,identifier(141,'COLOURS'))),disjunct(142,equal(143,identifier(144,xx),identifier(145,col1)),equal(146,identifier(147,xx),identifier(148,col2)))))])))])]))]),start_animation,true.

2014-09-30 16:01:57,151 13524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,151 13524 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:01:57,151 13524 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Any,[/Users/ernestocid/Temp/MCDC/Any.mch])
2014-09-30 16:01:57,151 13524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,152 13525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,152 13525 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_144,eval(identifier(none,col1),'#EXPRESSION',col1)),true.

2014-09-30 16:01:57,154 13527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,154 13527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,155 13528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,155 13528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,col2),'#EXPRESSION',col2)),true.

2014-09-30 16:01:57,155 13528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,156 13529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,156 13529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,156 13529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,b),'#EXPRESSION',b)),true.

2014-09-30 16:01:57,157 13530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,157 13530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,157 13530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,158 13531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(identifier(none,col),'#EXPRESSION',col)),true.

2014-09-30 16:01:57,158 13531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,158 13531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,158 13531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,159 13532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col1:POW(COLOURS)')),true.

2014-09-30 16:01:57,160 13533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,161 13534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,161 13534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,161 13534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_149,eval(member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS'))),'#PREDICATE','col2:POW(COLOURS)')),true.

2014-09-30 16:01:57,162 13535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,162 13535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,162 13535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,163 13536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_150,eval(forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2)))),'#PREDICATE','!cc.(cc:col1 => cc/:col2)')),true.

2014-09-30 16:01:57,163 13536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,164 13537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,164 13537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,164 13537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_151,eval(forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1)))),'#PREDICATE','!cc2.(cc2:col2 => cc2/:col1)')),true.

2014-09-30 16:01:57,165 13538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,166 13539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,166 13539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,166 13539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_152,eval(member(none,identifier(none,b),bool_set(none)),'#PREDICATE','b:BOOL')),true.

2014-09-30 16:01:57,167 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,167 13540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,168 13541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,168 13541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_153,eval(member(none,identifier(none,col),identifier(none,'COLOURS')),'#PREDICATE','col:COLOURS')),true.

2014-09-30 16:01:57,169 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:01:57,169 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,169 13542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,170 13543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:01:57,228 13601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:57,229 13602 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,230 13603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,231 13604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:01:57,242 13615 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:01:57,243 13616 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:01:57,243 13616 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:01:57,243 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,243 13616 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:01:57,243 13616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,244 13617 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_149,formula_147,formula_153,formula_146,formula_144,formula_150,formula_145,formula_151,formula_148,formula_152],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:01:57,284 13657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,3),'.'(op(5,0,4),'.'(op(6,0,5),'.'(op(7,0,6),'.'(op(8,0,7),'.'(op(9,0,0),'.'(op(10,0,8),'.'(op(11,0,0),'.'(op(12,0,0),[])))))))))),'.'(=('BResults','.'(result('TRUE',[],'col2:POW(COLOURS)'),'.'(result(v(red,fd(1,'COLOURS')),[],col),'.'(result('TRUE',[],'col:COLOURS'),'.'(result(v('TRUE',pred_true),[],b),'.'(result(v({},[]),[],col1),'.'(result('TRUE',[],'!cc.(cc:col1 => cc/:col2)'),'.'(result(v('{green}',avl_set(node(fd(2,'COLOURS'),true,0,empty,empty))),[],col2),'.'(result('TRUE',[],'!cc2.(cc2:col2 => cc2/:col1)'),'.'(result('TRUE',[],'col1:POW(COLOURS)'),'.'(result('TRUE',[],'b:BOOL'),[]))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - red
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - TRUE
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:57,284 13657 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: cc : col1
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc is TRUE
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {green}
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: not(cc2 /: col1)
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Universally Quantified Predicate over cc2 is TRUE
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:57,285 13658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:57,286 13659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,286 13659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:01:57,292 13665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,col1),pow_subset(none,identifier(none,'COLOURS'))),member(none,identifier(none,col2),pow_subset(none,identifier(none,'COLOURS')))),forall(none,[identifier(none,cc)],implication(none,member(none,identifier(none,cc),identifier(none,col1)),not_member(none,identifier(none,cc),identifier(none,col2))))),forall(none,[identifier(none,cc2)],implication(none,member(none,identifier(none,cc2),identifier(none,col2)),not_member(none,identifier(none,cc2),identifier(none,col1))))),member(none,identifier(none,b),bool_set(none))),member(none,identifier(none,col),identifier(none,'COLOURS'))),'#PREDICATE','col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS'),ARes),true.

2014-09-30 16:01:57,294 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'col1 : POW(COLOURS) & col2 : POW(COLOURS) & !(cc).((cc : col1) => (cc /: col2)) & !(cc2).((cc2 : col2) => (cc2 /: col1)) & b : BOOL & col : COLOURS')),[]))
2014-09-30 16:01:57,294 13667 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:01:57,294 13667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:01:57,295 13668 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:31,512 2934 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:31,523 2945 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:31,526 2948 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:31,527 2949 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:32,099 3521 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:32,100 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:32,100 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:32,100 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51368
2014-09-30 16:03:32,100 3522 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51368
2014-09-30 16:03:32,100 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:32,100 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11350
2014-09-30 16:03:32,100 3522 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11350
2014-09-30 16:03:32,101 3523 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51368 using key 54bf204662307811
2014-09-30 16:03:32,102 3524 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:32,103 3525 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:32,265 3687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:32,361 3783 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:32,361 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:32,361 3783 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:32,381 3803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,382 3804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,385 3807 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:32,387 3809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:32,387 3809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,388 3810 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,389 3811 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:32,390 3812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:32,390 3812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,391 3813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,405 3827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_2,formula_1],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:32,480 3902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:32,485 3907 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,486 3908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,495 3917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:32,507 3929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:32,507 3929 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:32,507 3929 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:32,508 3930 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:32,508 3930 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,509 3931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,522 3944 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_2,formula_1],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:32,547 3969 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:32,548 3970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:32,549 3971 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:32,558 3980 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:32,558 3980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:32,558 3980 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:32,559 3981 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:32,559 3981 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:32,559 3981 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:32,559 3981 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:32,578 4000 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,579 4001 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,610 4032 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,yy),identifier(none,'ID'))),'#PREDICATE','not(yy : ID)'),ARes),true.

2014-09-30 16:03:32,617 4039 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(yy : ID)')),[]))
2014-09-30 16:03:32,617 4039 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ yy : ID)
2014-09-30 16:03:32,617 4039 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:03:32,617 4039 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is FALSE
2014-09-30 16:03:32,618 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:32,618 4040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:32,622 4044 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:32,626 4048 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:32,627 4049 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:32,627 4049 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:33,216 4638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:33,216 4638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:33,216 4638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:33,216 4638 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51370
2014-09-30 16:03:33,217 4639 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51370
2014-09-30 16:03:33,217 4639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:33,217 4639 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11354
2014-09-30 16:03:33,217 4639 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11354
2014-09-30 16:03:33,217 4639 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51370 using key 54bf204662307811
2014-09-30 16:03:33,218 4640 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:33,219 4641 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:33,237 4659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:33,317 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:33,317 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:33,317 4739 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:33,317 4739 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,318 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,318 4740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:33,320 4742 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:33,321 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,321 4743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,322 4744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:33,323 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:33,323 4745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,324 4746 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,325 4747 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_7,formula_6],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:33,396 4818 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:33,398 4820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,398 4820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,400 4822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:33,411 4833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:33,411 4833 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:33,412 4834 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:33,412 4834 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:33,412 4834 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,413 4835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,413 4835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_7,formula_6],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:33,434 4856 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:33,434 4856 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:33,435 4857 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:33,436 4858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:33,436 4858 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:33,436 4858 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:33,436 4858 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:33,436 4858 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:33,437 4859 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:33,437 4859 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:33,440 4862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,441 4863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,447 4869 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),member(none,identifier(none,yy),identifier(none,xx))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:03:33,458 4880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:03:33,458 4880 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:03:33,459 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:03:33,459 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:03:33,459 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:03:33,459 4881 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:33,461 4883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:33,462 4884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:33,466 4888 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:33,472 4894 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:33,473 4895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:33,473 4895 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:34,060 5482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:34,060 5482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:34,060 5482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:34,060 5482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51372
2014-09-30 16:03:34,060 5482 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51372
2014-09-30 16:03:34,060 5482 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:34,061 5483 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11358
2014-09-30 16:03:34,061 5483 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11358
2014-09-30 16:03:34,061 5483 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51372 using key 54bf204662307811
2014-09-30 16:03:34,061 5483 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:34,062 5484 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:34,077 5499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:34,150 5572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,150 5572 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:34,151 5573 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:34,151 5573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,152 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,152 5574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:34,154 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,154 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,154 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,155 5577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:34,156 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,156 5578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,157 5579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,157 5579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_12,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:34,226 5648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:34,228 5650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,228 5650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,229 5651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:34,239 5661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:34,239 5661 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:34,240 5662 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:34,240 5662 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:34,240 5662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,241 5663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,241 5663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_12,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:34,261 5683 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:34,262 5684 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:34,263 5685 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:34,263 5685 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:34,266 5688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,266 5688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,271 5693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,not_equal(none,identifier(none,xx),empty_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))'),ARes),true.

2014-09-30 16:03:34,278 5700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))')),[]))
2014-09-30 16:03:34,278 5700 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: yy : xx
2014-09-30 16:03:34,279 5701 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:03:34,279 5701 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is FALSE
2014-09-30 16:03:34,279 5701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,280 5702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,283 5705 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:34,287 5709 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:34,289 5711 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:34,289 5711 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:34,883 6305 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:34,883 6305 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:34,884 6306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:34,884 6306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51374
2014-09-30 16:03:34,884 6306 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51374
2014-09-30 16:03:34,884 6306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:34,884 6306 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11362
2014-09-30 16:03:34,884 6306 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11362
2014-09-30 16:03:34,884 6306 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51374 using key 54bf204662307811
2014-09-30 16:03:34,885 6307 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:34,886 6308 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:34,898 6320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:34,969 6391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,969 6391 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:34,969 6391 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:34,969 6391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,970 6392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,971 6393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:34,973 6395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,973 6395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,973 6395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,974 6396 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:34,975 6397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:34,975 6397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:34,976 6398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:34,977 6399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:35,046 6468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:35,048 6470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,048 6470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,049 6471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:35,059 6481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:35,059 6481 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:35,060 6482 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:35,060 6482 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:35,060 6482 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,061 6483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,061 6483 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:35,081 6503 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,082 6504 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,083 6505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:35,083 6505 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:35,084 6506 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:35,085 6507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,085 6507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,089 6511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,member(none,identifier(none,yy),identifier(none,xx)))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:03:35,098 6520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(2,'ID'),bb),[])),'#xx,yy.((xx <: ID) & (yy : ID) & not(yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:03:35,098 6520 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:03:35,099 6521 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:03:35,099 6521 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:03:35,099 6521 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb
2014-09-30 16:03:35,099 6521 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,100 6522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,100 6522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,104 6526 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:35,108 6530 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:35,109 6531 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:35,109 6531 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:35,695 7117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:35,695 7117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:35,695 7117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:35,695 7117 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51376
2014-09-30 16:03:35,696 7118 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51376
2014-09-30 16:03:35,696 7118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:35,696 7118 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11366
2014-09-30 16:03:35,696 7118 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11366
2014-09-30 16:03:35,696 7118 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51376 using key 54bf204662307811
2014-09-30 16:03:35,697 7119 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:35,697 7119 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:35,709 7131 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:35,786 7208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:35,786 7208 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:35,787 7209 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:35,787 7209 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,788 7210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,788 7210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:35,790 7212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:35,790 7212 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,791 7213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,791 7213 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:35,792 7214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:35,793 7215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,793 7215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,793 7215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_21],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:35,862 7284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:35,864 7286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,864 7286 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,865 7287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:35,881 7303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:35,881 7303 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:35,882 7304 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:35,882 7304 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:35,882 7304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,882 7304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,883 7305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_21],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:35,905 7327 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,906 7328 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,906 7328 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,906 7328 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,906 7328 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,906 7328 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:35,907 7329 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:35,908 7330 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:35,908 7330 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:35,908 7330 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:35,912 7334 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,912 7334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:35,912 7334 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:35,912 7334 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,912 7334 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:35,913 7335 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:35,913 7335 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:35,914 7336 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,915 7337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,918 7340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),not_equal(none,identifier(none,xx),empty_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))'),ARes),true.

2014-09-30 16:03:35,926 7348 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))')),[]))
2014-09-30 16:03:35,926 7348 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:03:35,926 7348 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:03:35,926 7348 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:03:35,926 7348 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:03:35,926 7348 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:35,927 7349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:35,928 7350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:35,932 7354 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:03:35,940 7362 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:03:35,941 7363 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:03:35,941 7363 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:03:36,537 7959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:03:36,538 7960 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:03:36,538 7960 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:03:36,538 7960 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51378
2014-09-30 16:03:36,538 7960 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51378
2014-09-30 16:03:36,538 7960 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:03:36,538 7960 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11370
2014-09-30 16:03:36,539 7961 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11370
2014-09-30 16:03:36,539 7961 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51378 using key 54bf204662307811
2014-09-30 16:03:36,539 7961 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:03:36,540 7962 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:03:36,550 7972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/AssertStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('AssertStmt',['/Users/ernestocid/Temp/MCDC/AssertStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'AssertStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc),identifier(9,dd)])]),variables(10,[identifier(11,xx)]),invariant(12,subset(13,identifier(14,xx),identifier(15,'ID'))),initialisation(16,any(17,[identifier(18,zz)],conjunct(19,subset(20,identifier(21,zz),identifier(22,'ID')),greater(23,card(24,identifier(25,zz)),integer(26,0))),assign(27,[identifier(28,xx)],[identifier(29,zz)]))),operations(30,[operation(31,identifier(31,op),[],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),assertion(37,conjunct(38,not_equal(39,identifier(40,xx),empty_set(41)),member(42,identifier(43,yy),identifier(44,xx))),skip(45))))])]))]),start_animation,true.

2014-09-30 16:03:36,621 8043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:36,621 8043 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:03:36,622 8044 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),AssertStmt,[/Users/ernestocid/Temp/MCDC/AssertStmt.mch])
2014-09-30 16:03:36,622 8044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,622 8044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,623 8045 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:03:36,625 8047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:36,625 8047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,625 8047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,626 8048 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:03:36,627 8049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:03:36,627 8049 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,628 8050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,628 8050 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_27,formula_26],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:03:36,697 8119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),'.'(op(3,root,3),[]))))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',true),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:03:36,699 8121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,699 8121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,700 8122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:03:36,712 8134 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:03:36,712 8134 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:03:36,712 8134 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:03:36,712 8134 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:03:36,713 8135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,713 8135 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,714 8136 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_27,formula_26],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:03:36,735 8157 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:36,736 8158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(4,0,0),[])),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa}',avl_set(node(fd(1,'ID'),true,0,empty,empty))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors','.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=bb )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=cc )\nEVENT/OPERATION: op\n  State ID:0, State: ( xx={aa} )'),'.'(error('*unknown*','op: ASSERT violated: : xx /= {} & yy : xx','An ASSERT error occurred.\nReason:  ASSERT violated: \nDetails: xx /= {} & yy : xx\nContext: \n  Local State: ( yy=dd )\nEVENT/OPERATION: op\n  State ID:0, State: (xx={aa} )'),[])))),[])))))))))
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:36,736 8158 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! An abort error occurred !
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! assert_error
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! ASSERT violated: 
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! xx /= {} & yy : xx
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ! context_state(0,0)
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:03:36,737 8159 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa}
2014-09-30 16:03:36,738 8160 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,739 8161 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:03:36,741 8163 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,yy),identifier(none,'ID')),'#PREDICATE','yy : ID'),ARes),true.

2014-09-30 16:03:36,744 8166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,fd(1,'ID'),aa),[]),'yy : ID')),[]))
2014-09-30 16:03:36,744 8166 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is TRUE
2014-09-30 16:03:36,744 8166 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:03:36,744 8166 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:03:36,744 8166 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:03:36,744 8166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:03:36,745 8167 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:54,136 2907 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:54,149 2920 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:54,152 2923 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:54,153 2924 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:04:54,751 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:04:54,751 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:04:54,751 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:04:54,751 3522 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51381
2014-09-30 16:04:54,751 3522 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51381
2014-09-30 16:04:54,752 3523 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:04:54,752 3523 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11387
2014-09-30 16:04:54,752 3523 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11387
2014-09-30 16:04:54,753 3524 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51381 using key 6fa91931b9baf860
2014-09-30 16:04:54,754 3525 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:04:54,755 3526 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:04:54,922 3693 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:04:55,037 3808 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:04:55,037 3808 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:55,037 3808 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:04:55,053 3824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,053 3824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,056 3827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:04:55,058 3829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:55,058 3829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,059 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,059 3830 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:04:55,061 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:55,061 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,061 3832 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,074 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_2,formula_1],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:04:55,112 3883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:55,115 3886 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,116 3887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,129 3900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:04:55,141 3912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:04:55,141 3912 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:04:55,141 3912 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:04:55,141 3912 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:04:55,142 3913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,142 3913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,153 3924 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_2,formula_1],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:04:55,169 3940 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:55,169 3940 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:55,170 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:04:55,170 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:55,170 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:55,170 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:04:55,170 3941 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:04:55,194 3965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,194 3965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,204 3975 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx : ID'),ARes),true.

2014-09-30 16:04:55,205 3976 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE',[],'xx : ID')),[]))
2014-09-30 16:04:55,206 3977 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:55,233 4004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:55,236 4007 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:55,253 4024 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:55,262 4033 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:55,263 4034 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:55,263 4034 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:04:55,965 4736 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:04:55,966 4737 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:04:55,966 4737 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:04:55,966 4737 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51383
2014-09-30 16:04:55,967 4738 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51383
2014-09-30 16:04:55,967 4738 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:04:55,967 4738 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11391
2014-09-30 16:04:55,968 4739 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11391
2014-09-30 16:04:55,968 4739 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51383 using key 6fa91931b9baf860
2014-09-30 16:04:55,969 4740 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:04:55,970 4741 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:04:55,995 4766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:04:56,095 4866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:56,096 4867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,096 4867 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:04:56,096 4867 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:04:56,097 4868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,097 4868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:04:56,099 4870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:56,099 4870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,100 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,100 4871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:04:56,101 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:56,101 4872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,102 4873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,103 4874 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_7,formula_6],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:04:56,142 4913 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:56,144 4915 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,145 4916 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,147 4918 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:04:56,160 4931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:04:56,161 4932 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:04:56,161 4932 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:04:56,161 4932 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:04:56,162 4933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,162 4933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,163 4934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_7,formula_6],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:04:56,184 4955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:04:56,184 4955 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:04:56,188 4959 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,189 4960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,194 4965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,yy),identifier(none,'ID'))),'#PREDICATE','not(yy : ID)'),ARes),true.

2014-09-30 16:04:56,200 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(yy : ID)')),[]))
2014-09-30 16:04:56,200 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ yy : ID)
2014-09-30 16:04:56,200 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:04:56,200 4971 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is FALSE
2014-09-30 16:04:56,200 4971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:56,201 4972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:56,205 4976 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:56,209 4980 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:56,210 4981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:56,210 4981 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:04:57,082 5853 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:04:57,082 5853 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:04:57,082 5853 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:04:57,083 5854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51385
2014-09-30 16:04:57,083 5854 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51385
2014-09-30 16:04:57,083 5854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:04:57,083 5854 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11395
2014-09-30 16:04:57,083 5854 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11395
2014-09-30 16:04:57,083 5854 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51385 using key 6fa91931b9baf860
2014-09-30 16:04:57,084 5855 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:04:57,084 5855 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:04:57,102 5873 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:04:57,193 5964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:57,193 5964 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:04:57,193 5964 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:04:57,194 5965 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,195 5966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,195 5966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:04:57,198 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:57,198 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,198 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,199 5970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:04:57,200 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:57,200 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,200 5971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,201 5972 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_12,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:04:57,235 6006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:57,238 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,238 6009 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,240 6011 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:04:57,251 6022 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:04:57,251 6022 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:04:57,252 6023 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:04:57,252 6023 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:04:57,252 6023 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,253 6024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,253 6024 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_12,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:57,269 6040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:04:57,269 6040 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:04:57,272 6043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,273 6044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,280 6051 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,member(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,equal(none,identifier(none,yy),identifier(none,aa))))),'#PREDICATE','#xx,yy.((xx : ID) & (yy : ID) & (not(yy = aa)))'),ARes),true.

2014-09-30 16:04:57,305 6076 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,fd(1,'ID'),aa),'.'(bind(yy,fd(2,'ID'),bb),[])),'#xx,yy.((xx : ID) & (yy : ID) & (not(yy = aa)))')),[]))
2014-09-30 16:04:57,305 6076 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:04:57,306 6077 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:04:57,306 6077 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = aa &
2014-09-30 16:04:57,306 6077 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb
2014-09-30 16:04:57,306 6077 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:57,308 6079 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:57,309 6080 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:57,313 6084 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:57,318 6089 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:57,329 6100 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:57,330 6101 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:04:58,100 6871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:04:58,100 6871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:04:58,100 6871 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:04:58,101 6872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51387
2014-09-30 16:04:58,101 6872 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51387
2014-09-30 16:04:58,101 6872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:04:58,101 6872 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11399
2014-09-30 16:04:58,101 6872 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11399
2014-09-30 16:04:58,101 6872 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51387 using key 6fa91931b9baf860
2014-09-30 16:04:58,102 6873 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:04:58,103 6874 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:04:58,117 6888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:04:58,191 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:58,191 6962 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:04:58,191 6962 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:04:58,191 6962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,192 6963 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,193 6964 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:04:58,195 6966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:58,195 6966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,195 6966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,196 6967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:04:58,197 6968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:58,197 6968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,198 6969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,199 6970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:04:58,232 7003 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:58,233 7004 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,234 7005 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,235 7006 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:04:58,246 7017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:04:58,246 7017 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:04:58,246 7017 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:04:58,246 7017 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:04:58,247 7018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,247 7018 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,248 7019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:04:58,262 7033 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:58,262 7033 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:58,263 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:04:58,263 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:58,263 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:58,263 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:04:58,263 7034 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:04:58,265 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,265 7036 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,270 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,member(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,equal(none,identifier(none,yy),identifier(none,bb))))),'#PREDICATE','#xx,yy.((xx : ID) & (yy : ID) & (not(yy = bb)))'),ARes),true.

2014-09-30 16:04:58,287 7058 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,fd(1,'ID'),aa),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx : ID) & (yy : ID) & (not(yy = bb)))')),[]))
2014-09-30 16:04:58,287 7058 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:04:58,287 7058 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:04:58,287 7058 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = aa &
2014-09-30 16:04:58,288 7059 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:04:58,288 7059 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:58,288 7059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:58,288 7059 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:58,292 7063 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:58,297 7068 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:58,310 7081 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:58,311 7082 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:04:59,017 7788 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:04:59,018 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:04:59,018 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:04:59,018 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51389
2014-09-30 16:04:59,018 7789 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51389
2014-09-30 16:04:59,018 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:04:59,018 7789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11403
2014-09-30 16:04:59,018 7789 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11403
2014-09-30 16:04:59,019 7790 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51389 using key 6fa91931b9baf860
2014-09-30 16:04:59,019 7790 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:04:59,020 7791 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:04:59,034 7805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:04:59,107 7878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:59,107 7878 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:04:59,108 7879 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:04:59,108 7879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,109 7880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,109 7880 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:04:59,111 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:59,111 7882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,112 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,112 7883 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:04:59,113 7884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:04:59,113 7884 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,114 7885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,114 7885 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_21],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:04:59,146 7917 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:59,148 7919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,148 7919 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,150 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:04:59,161 7932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:04:59,161 7932 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:04:59,162 7933 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:04:59,162 7933 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:04:59,162 7933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,162 7933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,163 7934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_21],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:04:59,178 7949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:04:59,178 7949 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:59,179 7950 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:04:59,179 7950 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:59,179 7950 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:04:59,179 7950 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:04:59,179 7950 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:04:59,180 7951 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,181 7952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,184 7955 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,member(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),equal(none,identifier(none,yy),identifier(none,aa)))),'#PREDICATE','#xx,yy.((xx : ID) & (yy : ID) & (yy = aa))'),ARes),true.

2014-09-30 16:04:59,198 7969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,fd(1,'ID'),aa),'.'(bind(xx,fd(1,'ID'),aa),[])),'#xx,yy.((xx : ID) & (yy : ID) & (yy = aa))')),[]))
2014-09-30 16:04:59,198 7969 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:04:59,199 7970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:04:59,199 7970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa &
2014-09-30 16:04:59,199 7970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = aa
2014-09-30 16:04:59,199 7970 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:04:59,199 7970 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:04:59,200 7971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:04:59,203 7974 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:04:59,207 7978 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:04:59,208 7979 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:04:59,208 7979 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51391
2014-09-30 16:05:00,000 8771 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51391
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:05:00,000 8771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11407
2014-09-30 16:05:00,001 8772 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11407
2014-09-30 16:05:00,001 8772 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51391 using key 6fa91931b9baf860
2014-09-30 16:05:00,001 8772 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:05:00,003 8774 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:05:00,015 8786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:05:00,088 8859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,088 8859 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:05:00,088 8859 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:05:00,088 8859 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,089 8860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,089 8860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:05:00,091 8862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,091 8862 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,092 8863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,092 8863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:05:00,094 8865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,094 8865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,094 8865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,095 8866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_27,formula_26],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:05:00,126 8897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:05:00,127 8898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,128 8899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,129 8900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:05:00,139 8910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:05:00,139 8910 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:05:00,139 8910 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:05:00,139 8910 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:05:00,140 8911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,140 8911 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,141 8912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_27,formula_26],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:05:00,155 8926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:05:00,155 8926 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:00,155 8926 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:05:00,155 8926 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:00,155 8926 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:05:00,156 8927 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:05:00,156 8927 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:05:00,157 8928 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,158 8929 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,161 8932 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,member(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),equal(none,identifier(none,yy),identifier(none,bb)))),'#PREDICATE','#xx,yy.((xx : ID) & (yy : ID) & (yy = bb))'),ARes),true.

2014-09-30 16:05:00,176 8947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,fd(2,'ID'),bb),'.'(bind(xx,fd(1,'ID'),aa),[])),'#xx,yy.((xx : ID) & (yy : ID) & (yy = bb))')),[]))
2014-09-30 16:05:00,176 8947 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:05:00,176 8947 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:05:00,176 8947 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb &
2014-09-30 16:05:00,176 8947 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = aa
2014-09-30 16:05:00,176 8947 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:00,177 8948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,177 8948 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,181 8952 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:05:00,186 8957 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:05:00,187 8958 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:05:00,188 8959 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:05:00,910 9681 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:05:00,910 9681 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:05:00,911 9682 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:05:00,911 9682 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51393
2014-09-30 16:05:00,911 9682 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51393
2014-09-30 16:05:00,911 9682 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:05:00,911 9682 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11411
2014-09-30 16:05:00,911 9682 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11411
2014-09-30 16:05:00,912 9683 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51393 using key 6fa91931b9baf860
2014-09-30 16:05:00,912 9683 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:05:00,913 9684 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:05:00,925 9696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/CaseStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('CaseStmt',['/Users/ernestocid/Temp/MCDC/CaseStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'CaseStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,member(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,assign(16,[identifier(17,xx)],[identifier(18,aa)])),operations(19,[operation(20,identifier(20,'Get'),[identifier(21,r)],[],block(22,assign(23,[identifier(24,r)],[identifier(25,xx)]))),operation(26,identifier(26,'Set'),[identifier(27,cs)],[identifier(28,yy)],precondition(29,member(30,identifier(31,yy),identifier(32,'ID')),case(33,identifier(34,yy),[identifier(35,aa)],assign(36,[identifier(37,xx),identifier(38,cs)],[identifier(39,cc),integer(40,1)]),[case_or(41,[identifier(42,bb)],assign(43,[identifier(44,xx),identifier(45,cs)],[identifier(46,aa),integer(47,2)]))],assign(48,[identifier(49,xx),identifier(50,cs)],[identifier(51,bb),integer(52,3)]))))])]))]),start_animation,true.

2014-09-30 16:05:00,992 9763 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,992 9763 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:05:00,993 9764 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),CaseStmt,[/Users/ernestocid/Temp/MCDC/CaseStmt.mch])
2014-09-30 16:05:00,993 9764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,994 9765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,994 9765 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:05:00,996 9767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,996 9767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,997 9768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:00,997 9768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(member(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx:ID')),true.

2014-09-30 16:05:00,998 9769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:05:00,999 9770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:00,999 9770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:01,000 9771 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_31],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:05:01,031 9802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:05:01,032 9803 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:01,033 9804 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:01,034 9805 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:05:01,045 9816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:05:01,045 9816 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:05:01,045 9816 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:05:01,045 9816 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:05:01,045 9816 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:01,046 9817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:01,046 9817 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_31],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:05:01,060 9831 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,0),'.'(op(4,0,2),[]))))),'.'(=('BResults','.'(result('TRUE',[],'xx:ID'),'.'(result(v(aa,fd(1,'ID')),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:05:01,060 9831 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - aa
2014-09-30 16:05:01,062 9833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:01,062 9833 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:05:01,064 9835 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,yy),identifier(none,'ID')),'#PREDICATE','yy : ID'),ARes),true.

2014-09-30 16:05:01,068 9839 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,fd(1,'ID'),aa),[]),'yy : ID')),[]))
2014-09-30 16:05:01,068 9839 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is TRUE
2014-09-30 16:05:01,069 9840 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:05:01,069 9840 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:05:01,069 9840 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:05:01,069 9840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:05:01,069 9840 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:21,092 3182 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:21,107 3197 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:21,129 3219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:21,129 3219 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:21,842 3932 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:21,842 3932 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:21,842 3932 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:21,842 3932 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51411
2014-09-30 16:06:21,842 3932 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51411
2014-09-30 16:06:21,843 3933 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:21,843 3933 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11419
2014-09-30 16:06:21,843 3933 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11419
2014-09-30 16:06:21,844 3934 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51411 using key 91519bbcc659cce6
2014-09-30 16:06:21,844 3934 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:21,845 3935 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:22,013 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:22,092 4182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:22,092 4182 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:22,093 4183 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:22,113 4203 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:22,114 4204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:22,130 4220 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:22,147 4237 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:22,150 4240 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:22,151 4241 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:22,161 4251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:22,175 4265 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:22,175 4265 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:22,175 4265 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:22,175 4265 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:22,176 4266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:22,176 4266 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:22,190 4280 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:22,280 4370 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:22,280 4370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:22,281 4371 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:22,281 4371 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:22,284 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:22,284 4374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:22,301 4391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),negation(none,greater_equal(none,identifier(none,averageGrade),integer(none,4))))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (not(averageGrade >= 4)))'),ARes),true.

2014-09-30 16:06:22,324 4414 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (not(averageGrade >= 4)))')),[]))
2014-09-30 16:06:22,324 4414 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:22,325 4415 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:22,325 4415 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-30 16:06:22,325 4415 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:22,343 4433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:22,343 4433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:22,348 4438 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:22,353 4443 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:22,354 4444 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:22,354 4444 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:23,237 5327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:23,237 5327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:23,237 5327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:23,237 5327 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51413
2014-09-30 16:06:23,237 5327 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51413
2014-09-30 16:06:23,238 5328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:23,238 5328 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11423
2014-09-30 16:06:23,238 5328 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11423
2014-09-30 16:06:23,238 5328 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51413 using key 91519bbcc659cce6
2014-09-30 16:06:23,238 5328 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:23,239 5329 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:23,288 5378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:23,374 5464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:23,374 5464 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:23,374 5464 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:23,375 5465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:23,375 5465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:23,376 5466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:23,388 5478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:23,389 5479 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:23,390 5480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:23,391 5481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:23,404 5494 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:23,404 5494 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:23,404 5494 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:23,404 5494 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:23,405 5495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:23,405 5495 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:23,406 5496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:23,486 5576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:23,486 5576 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:23,487 5577 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:23,487 5577 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:23,490 5580 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:23,491 5581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:23,499 5589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),negation(none,less(none,identifier(none,averageGrade),integer(none,4)))),equivalence(none,conjunct(none,greater_equal(none,identifier(none,averageGrade),integer(none,2)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,greater_equal(none,identifier(none,averageGrade),integer(none,2)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & not(averageGrade < 4) & ((averageGrade >= 2 & 1=1) <=> not(averageGrade >= 2 & 1=2)))'),ARes),true.

2014-09-30 16:06:23,513 5603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(4),'4'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & not(averageGrade < 4) & ((averageGrade >= 2 & 1=1) <=> not(averageGrade >= 2 & 1=2)))')),[]))
2014-09-30 16:06:23,513 5603 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:23,513 5603 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:23,514 5604 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 4
2014-09-30 16:06:23,514 5604 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:23,515 5605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:23,515 5605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:23,518 5608 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:23,523 5613 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:23,524 5614 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:23,525 5615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:24,333 6423 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:24,334 6424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:24,334 6424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:24,334 6424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51415
2014-09-30 16:06:24,334 6424 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51415
2014-09-30 16:06:24,334 6424 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:24,335 6425 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11427
2014-09-30 16:06:24,335 6425 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11427
2014-09-30 16:06:24,335 6425 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51415 using key 91519bbcc659cce6
2014-09-30 16:06:24,335 6425 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:24,336 6426 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:24,352 6442 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:24,465 6555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:24,465 6555 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:24,465 6555 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:24,466 6556 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:24,467 6557 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:24,468 6558 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:24,483 6573 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:24,485 6575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:24,486 6576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:24,488 6578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:24,504 6594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:24,504 6594 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:24,504 6594 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:24,504 6594 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:24,505 6595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:24,505 6595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:24,506 6596 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:24,585 6675 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:24,585 6675 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:24,585 6675 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:24,586 6676 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:24,588 6678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:24,588 6678 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:24,593 6683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none)))),'#PREDICATE','not(averageGrade : 0..5 & averageGrade : INT)'),ARes),true.

2014-09-30 16:06:24,619 6709 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(6),'6'),[]),'not(averageGrade : 0..5 & averageGrade : INT)')),[]))
2014-09-30 16:06:24,620 6710 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:24,621 6711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ### Warning: enumerating averageGrade : INTEGER : 6:sup ---> 6:20
2014-09-30 16:06:24,621 6711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:24,621 6711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:24,621 6711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 6
2014-09-30 16:06:24,621 6711 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:24,622 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:24,628 6718 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:24,633 6723 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:24,634 6724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:24,634 6724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:25,380 7470 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:25,380 7470 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:25,380 7470 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:25,380 7470 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51417
2014-09-30 16:06:25,381 7471 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51417
2014-09-30 16:06:25,381 7471 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:25,381 7471 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11431
2014-09-30 16:06:25,381 7471 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11431
2014-09-30 16:06:25,381 7471 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51417 using key 91519bbcc659cce6
2014-09-30 16:06:25,382 7472 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:25,382 7472 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:25,399 7489 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:25,469 7559 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:25,469 7559 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:25,470 7560 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:25,470 7560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:25,471 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:25,471 7561 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:25,485 7575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:25,486 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:25,487 7577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:25,488 7578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:25,499 7589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:25,499 7589 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:25,500 7590 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:25,500 7590 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:25,500 7590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:25,501 7591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:25,501 7591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:25,574 7664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:25,574 7664 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:25,575 7665 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:25,575 7665 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:25,576 7666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:25,577 7667 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:25,580 7670 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),greater_equal(none,identifier(none,averageGrade),integer(none,4)))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade >= 4))'),ARes),true.

2014-09-30 16:06:25,592 7682 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(4),'4'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade >= 4))')),[]))
2014-09-30 16:06:25,592 7682 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:25,592 7682 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:25,592 7682 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 4
2014-09-30 16:06:25,592 7682 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:25,593 7683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:25,593 7683 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:25,596 7686 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:25,601 7691 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:25,601 7691 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:25,602 7692 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:26,322 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:26,322 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:26,322 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:26,322 8412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51419
2014-09-30 16:06:26,323 8413 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51419
2014-09-30 16:06:26,323 8413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:26,323 8413 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11435
2014-09-30 16:06:26,323 8413 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11435
2014-09-30 16:06:26,323 8413 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51419 using key 91519bbcc659cce6
2014-09-30 16:06:26,324 8414 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:26,324 8414 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:26,335 8425 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:26,406 8496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:26,406 8496 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:26,406 8496 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:26,406 8496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:26,407 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:26,407 8497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:26,418 8508 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:26,419 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:26,419 8509 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:26,421 8511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:26,432 8522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:26,432 8522 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:26,432 8522 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:26,433 8523 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:26,433 8523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:26,433 8523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:26,434 8524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:26,502 8592 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:26,502 8592 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:26,503 8593 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:26,503 8593 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:26,504 8594 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:26,505 8595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:26,508 8598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-30 16:06:26,518 8608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-30 16:06:26,518 8608 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:26,518 8608 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:26,518 8608 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-30 16:06:26,519 8609 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:26,519 8609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:26,519 8609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:26,523 8613 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:26,530 8620 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:26,531 8621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:26,531 8621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:27,232 9322 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:27,240 9330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:27,240 9330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:27,240 9330 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51421
2014-09-30 16:06:27,241 9331 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51421
2014-09-30 16:06:27,241 9331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:27,241 9331 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11439
2014-09-30 16:06:27,241 9331 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11439
2014-09-30 16:06:27,241 9331 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51421 using key 91519bbcc659cce6
2014-09-30 16:06:27,242 9332 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:27,244 9334 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:27,254 9344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:27,326 9416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:27,326 9416 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:27,326 9416 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:27,326 9416 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:27,327 9417 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:27,328 9418 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:27,338 9428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:27,339 9429 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:27,340 9430 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:27,341 9431 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:27,353 9443 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:27,353 9443 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:27,353 9443 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:27,353 9443 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:27,354 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:27,354 9444 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:27,355 9445 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:27,423 9513 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:27,423 9513 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:27,423 9513 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:27,423 9513 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:27,425 9515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:27,425 9515 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:27,430 9520 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),greater_equal(none,identifier(none,averageGrade),integer(none,2))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less(none,identifier(none,averageGrade),integer(none,4))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less(none,identifier(none,averageGrade),integer(none,4))))))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade >= 2) & ((1=1 & averageGrade < 4) <=> not(1=2 & averageGrade < 4)))'),ARes),true.

2014-09-30 16:06:27,442 9532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(2),'2'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade >= 2) & ((1=1 & averageGrade < 4) <=> not(1=2 & averageGrade < 4)))')),[]))
2014-09-30 16:06:27,442 9532 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:27,442 9532 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:27,442 9532 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 2
2014-09-30 16:06:27,442 9532 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:27,443 9533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:27,443 9533 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:27,447 9537 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:27,454 9544 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:27,455 9545 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:27,455 9545 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:28,160 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:28,160 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:28,160 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:28,160 10250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51423
2014-09-30 16:06:28,161 10251 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51423
2014-09-30 16:06:28,161 10251 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:28,161 10251 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11443
2014-09-30 16:06:28,161 10251 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11443
2014-09-30 16:06:28,161 10251 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51423 using key 91519bbcc659cce6
2014-09-30 16:06:28,162 10252 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:28,163 10253 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:28,173 10263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:28,239 10329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:28,239 10329 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:28,239 10329 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:28,239 10329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:28,240 10330 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:28,241 10331 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:28,251 10341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:28,253 10343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:28,253 10343 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:28,254 10344 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:28,266 10356 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:28,266 10356 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:28,266 10356 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:28,266 10356 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:28,267 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:28,267 10357 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:28,268 10358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:28,336 10426 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:28,336 10426 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:28,336 10426 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:28,336 10426 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:28,338 10428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:28,338 10428 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:28,343 10433 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),less(none,identifier(none,averageGrade),integer(none,4))),equivalence(none,conjunct(none,greater_equal(none,identifier(none,averageGrade),integer(none,2)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,greater_equal(none,identifier(none,averageGrade),integer(none,2)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade < 4) & ((averageGrade >= 2 & 1=1) <=> not(averageGrade >= 2 & 1=2)))'),ARes),true.

2014-09-30 16:06:28,356 10446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(2),'2'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & (averageGrade < 4) & ((averageGrade >= 2 & 1=1) <=> not(averageGrade >= 2 & 1=2)))')),[]))
2014-09-30 16:06:28,356 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:28,356 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:28,356 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 2
2014-09-30 16:06:28,356 10446 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:28,357 10447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:28,357 10447 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:28,361 10451 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:06:28,365 10455 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:06:28,367 10457 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:06:28,367 10457 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:06:29,091 11181 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:06:29,091 11181 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:06:29,092 11182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:06:29,092 11182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51425
2014-09-30 16:06:29,092 11182 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51425
2014-09-30 16:06:29,092 11182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:06:29,092 11182 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11447
2014-09-30 16:06:29,092 11182 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11447
2014-09-30 16:06:29,092 11182 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51425 using key 91519bbcc659cce6
2014-09-30 16:06:29,093 11183 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:06:29,094 11184 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:06:29,103 11193 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-30 16:06:29,172 11262 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:06:29,172 11262 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:06:29,173 11263 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/Temp/MCDC/PassFinalOrFailIFELSIFELSE.mch])
2014-09-30 16:06:29,173 11263 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:29,174 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:29,174 11264 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:06:29,185 11275 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:29,187 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:29,187 11277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:29,188 11278 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:06:29,199 11289 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:06:29,199 11289 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:06:29,199 11289 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:06:29,199 11289 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:06:29,200 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:29,200 11290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:29,201 11291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:06:29,282 11372 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:06:29,282 11372 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:29,283 11373 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:06:29,283 11373 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:29,284 11374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:29,285 11375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:06:29,290 11380 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,averageGrade)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),negation(none,greater_equal(none,identifier(none,averageGrade),integer(none,2)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),less(none,identifier(none,averageGrade),integer(none,4))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),less(none,identifier(none,averageGrade),integer(none,4))))))),'#PREDICATE','#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & not(averageGrade >= 2) & ((1=1 & averageGrade < 4) <=> not(1=2 & averageGrade < 4)))'),ARes),true.

2014-09-30 16:06:29,302 11392 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-30 16:06:29,302 11392 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'#averageGrade.((averageGrade : 0..5 & averageGrade : INT) & not(averageGrade >= 2) & ((1=1 & averageGrade < 4) <=> not(1=2 & averageGrade < 4)))')),[]))
2014-09-30 16:06:29,303 11393 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:06:29,303 11393 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-30 16:06:29,303 11393 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:06:29,303 11393 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:06:29,304 11394 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:07,884 2696 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:07,899 2711 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:07,915 2727 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:07,916 2728 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:08,483 3295 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:08,484 3296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:08,484 3296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:08,484 3296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51432
2014-09-30 16:08:08,484 3296 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51432
2014-09-30 16:08:08,484 3296 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:08,485 3297 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11457
2014-09-30 16:08:08,485 3297 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11457
2014-09-30 16:08:08,486 3298 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51432 using key d79b0faf9d7a2258
2014-09-30 16:08:08,486 3298 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:08,488 3300 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:08,658 3470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:08,741 3553 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:08,741 3553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:08,741 3553 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:08,757 3569 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,758 3570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,760 3572 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:08,762 3574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:08,762 3574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,763 3575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,763 3575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:08,765 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:08,765 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,765 3577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,783 3595 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_2,formula_1],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:08,849 3661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:08,853 3665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,853 3665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,864 3676 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:08,876 3688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:08,876 3688 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:08,876 3688 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:08,876 3688 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:08,877 3689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,877 3689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,890 3702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_2,formula_1],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:08,922 3734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:08,922 3734 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:08,922 3734 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:08,922 3734 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:08,923 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:08,923 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:08,923 3735 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:08,939 3751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,940 3752 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,974 3786 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(negation(none,member(none,identifier(none,yy),identifier(none,'ID'))),'#PREDICATE','not(yy : ID)'),ARes),true.

2014-09-30 16:08:08,979 3791 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'not(yy : ID)')),[]))
2014-09-30 16:08:08,979 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: /* falsity */ not(/* truth */ yy : ID)
2014-09-30 16:08:08,979 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:08:08,979 3791 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is FALSE
2014-09-30 16:08:08,980 3792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:08,980 3792 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:08,984 3796 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:08,989 3801 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:08,990 3802 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:08,990 3802 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:09,558 4370 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:09,559 4371 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:09,559 4371 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:09,559 4371 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51434
2014-09-30 16:08:09,560 4372 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51434
2014-09-30 16:08:09,560 4372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:09,560 4372 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11461
2014-09-30 16:08:09,560 4372 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11461
2014-09-30 16:08:09,560 4372 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51434 using key d79b0faf9d7a2258
2014-09-30 16:08:09,561 4373 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:09,562 4374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:09,583 4395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:09,661 4473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:09,662 4474 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:09,662 4474 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:09,662 4474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,663 4475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,663 4475 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:09,665 4477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:09,665 4477 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,666 4478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,666 4478 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:09,668 4480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:09,668 4480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,668 4480 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,669 4481 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_7,formula_6],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:09,723 4535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:09,725 4537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,726 4538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,727 4539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:09,737 4549 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:09,737 4549 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:09,737 4549 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:09,737 4549 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:09,738 4550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,738 4550 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,739 4551 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_7,formula_6],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:09,770 4582 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:09,770 4582 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:09,771 4583 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:09,771 4583 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:09,771 4583 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:09,771 4583 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:09,771 4583 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:09,774 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,774 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,779 4591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,equal(none,identifier(none,xx),empty_set(none))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (not(xx = {})))'),ARes),true.

2014-09-30 16:08:09,786 4598 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (not(xx = {})))')),[]))
2014-09-30 16:08:09,786 4598 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:09,787 4599 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:09,787 4599 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:09,787 4599 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:09,787 4599 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:09,789 4601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:09,789 4601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:09,792 4604 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:09,796 4608 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:09,797 4609 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:09,798 4610 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:10,438 5250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:10,438 5250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:10,438 5250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:10,438 5250 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51436
2014-09-30 16:08:10,439 5251 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51436
2014-09-30 16:08:10,439 5251 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:10,439 5251 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11465
2014-09-30 16:08:10,439 5251 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11465
2014-09-30 16:08:10,439 5251 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51436 using key d79b0faf9d7a2258
2014-09-30 16:08:10,440 5252 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:10,441 5253 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:10,465 5277 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:10,564 5376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:10,564 5376 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:10,565 5377 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:10,565 5377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,566 5378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,567 5379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:10,569 5381 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:10,570 5382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,570 5382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,571 5383 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:10,572 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:10,572 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,573 5385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,574 5386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_12,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:10,634 5446 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:10,636 5448 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,637 5449 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,639 5451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:10,659 5471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:10,659 5471 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:10,659 5471 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:10,659 5471 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:10,660 5472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,660 5472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,661 5473 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_12,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:10,706 5518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:10,706 5518 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:10,709 5521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,709 5521 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,715 5527 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),member(none,identifier(none,yy),identifier(none,xx))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:08:10,725 5537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:08:10,725 5537 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:10,726 5538 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:10,726 5538 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:10,726 5538 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:10,726 5538 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:10,726 5538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:10,727 5539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:10,731 5543 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:10,735 5547 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:10,736 5548 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:10,737 5549 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:11,336 6148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:11,336 6148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:11,336 6148 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:11,337 6149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51438
2014-09-30 16:08:11,337 6149 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51438
2014-09-30 16:08:11,337 6149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:11,337 6149 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11469
2014-09-30 16:08:11,337 6149 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11469
2014-09-30 16:08:11,337 6149 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51438 using key d79b0faf9d7a2258
2014-09-30 16:08:11,338 6150 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:11,339 6151 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:11,359 6171 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:11,430 6242 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:11,430 6242 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:11,431 6243 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:11,431 6243 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,432 6244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,432 6244 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:11,434 6246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:11,434 6246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,434 6246 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,435 6247 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_17,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:11,436 6248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:11,436 6248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,437 6249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,437 6249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_17,formula_16],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:11,492 6304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:11,494 6306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,494 6306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,495 6307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:11,506 6318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:11,506 6318 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:11,507 6319 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:11,507 6319 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:11,507 6319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,507 6319 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,508 6320 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_17,formula_16],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:11,539 6351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:11,539 6351 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:11,540 6352 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:11,540 6352 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:11,540 6352 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:11,540 6352 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:11,540 6352 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:11,541 6353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,542 6354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,546 6358 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,not_member(none,identifier(none,yy),identifier(none,xx)))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(yy /: xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:08:11,555 6367 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & not(yy /: xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:08:11,555 6367 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:11,556 6368 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:11,556 6368 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:11,556 6368 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:11,556 6368 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:11,556 6368 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:11,557 6369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:11,560 6372 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:11,564 6376 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:11,565 6377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:11,566 6378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:12,142 6954 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:12,142 6954 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:12,142 6954 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:12,142 6954 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51440
2014-09-30 16:08:12,142 6954 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51440
2014-09-30 16:08:12,143 6955 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:12,143 6955 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11474
2014-09-30 16:08:12,143 6955 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11474
2014-09-30 16:08:12,143 6955 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51440 using key d79b0faf9d7a2258
2014-09-30 16:08:12,143 6955 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:12,144 6956 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:12,157 6969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:12,228 7040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:12,228 7040 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:12,228 7040 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:12,228 7040 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,229 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,229 7041 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_21,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:12,231 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:12,231 7043 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,232 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,232 7044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_22,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:12,234 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:12,234 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,234 7046 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,235 7047 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_22,formula_21],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:12,287 7099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:12,288 7100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,289 7101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,290 7102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:12,300 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:12,300 7112 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:12,300 7112 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:12,300 7112 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:12,300 7112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,301 7113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,301 7113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_22,formula_21],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:12,332 7144 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:12,332 7144 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:12,333 7145 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:12,333 7145 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:12,333 7145 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:12,333 7145 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:12,333 7145 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:12,334 7146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,335 7147 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,339 7151 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,not_equal(none,identifier(none,xx),empty_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))'),ARes),true.

2014-09-30 16:08:12,345 7157 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))')),[]))
2014-09-30 16:08:12,345 7157 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: yy : xx
2014-09-30 16:08:12,345 7157 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:08:12,346 7158 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is FALSE
2014-09-30 16:08:12,346 7158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:12,346 7158 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:12,349 7161 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:12,357 7169 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:12,358 7170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:12,358 7170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:12,953 7765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:12,953 7765 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:12,954 7766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:12,954 7766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51442
2014-09-30 16:08:12,954 7766 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51442
2014-09-30 16:08:12,954 7766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:12,954 7766 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11478
2014-09-30 16:08:12,954 7766 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11478
2014-09-30 16:08:12,954 7766 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51442 using key d79b0faf9d7a2258
2014-09-30 16:08:12,955 7767 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:12,955 7767 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:12,967 7779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:13,039 7851 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,039 7851 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:13,040 7852 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:13,040 7852 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,041 7853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,041 7853 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:13,043 7855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,043 7855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,043 7855 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,044 7856 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:13,045 7857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,045 7857 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,046 7858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,046 7858 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_27,formula_26],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:13,096 7908 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:13,098 7910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,098 7910 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,100 7912 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:13,109 7921 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:13,109 7921 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:13,110 7922 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:13,110 7922 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:13,110 7922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,110 7922 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,111 7923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_27,formula_26],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:13,141 7953 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:13,141 7953 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,142 7954 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:13,142 7954 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,142 7954 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:13,142 7954 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:13,142 7954 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:13,144 7956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,144 7956 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,148 7960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),equal(none,identifier(none,xx),empty_set(none)))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (xx = {}))'),ARes),true.

2014-09-30 16:08:13,154 7966 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,[],{}),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (xx = {}))')),[]))
2014-09-30 16:08:13,154 7966 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:13,154 7966 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:13,155 7967 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {} &
2014-09-30 16:08:13,155 7967 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:13,155 7967 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,155 7967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,155 7967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,159 7971 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:13,163 7975 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:13,164 7976 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:13,164 7976 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:13,746 8558 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:13,747 8559 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:13,747 8559 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:13,747 8559 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51444
2014-09-30 16:08:13,747 8559 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51444
2014-09-30 16:08:13,747 8559 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:13,747 8559 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11482
2014-09-30 16:08:13,748 8560 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11482
2014-09-30 16:08:13,748 8560 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51444 using key d79b0faf9d7a2258
2014-09-30 16:08:13,748 8560 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:13,749 8561 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:13,762 8574 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:13,840 8652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,840 8652 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:13,841 8653 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:13,841 8653 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,842 8654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,842 8654 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_31,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:13,843 8655 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,844 8656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,844 8656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,844 8656 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_32,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:13,845 8657 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:13,846 8658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,846 8658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,846 8658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_32,formula_31],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:13,901 8713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:13,902 8714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,902 8714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,903 8715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:13,913 8725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:13,913 8725 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:13,913 8725 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:13,913 8725 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:13,914 8726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,914 8726 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,915 8727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_32,formula_31],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:13,945 8757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:13,945 8757 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,946 8758 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:13,946 8758 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,946 8758 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:13,946 8758 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:13,946 8758 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:13,947 8759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,948 8760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,952 8764 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),not_equal(none,identifier(none,xx),empty_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy /: xx) <=> not(1=2 & yy /: xx)))'),ARes),true.

2014-09-30 16:08:13,965 8777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(2,'ID'),bb),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy /: xx) <=> not(1=2 & yy /: xx)))')),[]))
2014-09-30 16:08:13,965 8777 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:13,966 8778 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:13,966 8778 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:13,966 8778 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb
2014-09-30 16:08:13,966 8778 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:13,967 8779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:13,967 8779 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:13,972 8784 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:13,979 8791 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:13,980 8792 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:13,981 8793 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:14,555 9367 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:14,555 9367 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:14,555 9367 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:14,555 9367 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51446
2014-09-30 16:08:14,555 9367 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51446
2014-09-30 16:08:14,555 9367 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:14,556 9368 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11486
2014-09-30 16:08:14,556 9368 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11486
2014-09-30 16:08:14,556 9368 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51446 using key d79b0faf9d7a2258
2014-09-30 16:08:14,556 9368 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:14,558 9370 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:14,570 9382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:14,646 9458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:14,646 9458 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:14,647 9459 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:14,647 9459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,648 9460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,648 9460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_36,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:14,650 9462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:14,650 9462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,650 9462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,651 9463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:14,652 9464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:14,652 9464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,653 9465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,653 9465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_37,formula_36],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:14,704 9516 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:14,705 9517 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,706 9518 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,707 9519 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:14,716 9528 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:14,716 9528 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:14,717 9529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:14,717 9529 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:14,717 9529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,717 9529 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,718 9530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_37,formula_36],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:14,748 9560 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:14,748 9560 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:14,749 9561 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:14,749 9561 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:14,749 9561 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:14,749 9561 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:14,749 9561 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:14,751 9563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,751 9563 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,755 9567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,member(none,identifier(none,yy),identifier(none,xx)))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:08:14,763 9575 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(2,'ID'),bb),[])),'#xx,yy.((xx <: ID) & (yy : ID) & not(yy : xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:08:14,763 9575 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:14,763 9575 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:14,763 9575 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:14,763 9575 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb
2014-09-30 16:08:14,763 9575 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:14,764 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:14,764 9576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:14,767 9579 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:14,772 9584 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:14,773 9585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:14,773 9585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:15,357 10169 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:15,357 10169 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:15,357 10169 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:15,358 10170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51448
2014-09-30 16:08:15,358 10170 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51448
2014-09-30 16:08:15,358 10170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:15,358 10170 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11490
2014-09-30 16:08:15,358 10170 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11490
2014-09-30 16:08:15,358 10170 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51448 using key d79b0faf9d7a2258
2014-09-30 16:08:15,359 10171 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:15,360 10172 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:15,371 10183 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:15,441 10253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:15,441 10253 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:15,441 10253 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:15,441 10253 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,442 10254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,442 10254 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_41,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:15,444 10256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:15,444 10256 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,445 10257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,445 10257 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_42,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:15,446 10258 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:15,447 10259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,447 10259 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,448 10260 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_42,formula_41],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:15,503 10315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:15,504 10316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,505 10317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,506 10318 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:15,516 10328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:15,516 10328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:15,516 10328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:15,516 10328 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:15,516 10328 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,517 10329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,517 10329 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_42,formula_41],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:15,548 10360 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:15,548 10360 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:15,550 10362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,550 10362 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,554 10366 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),negation(none,not_equal(none,identifier(none,xx),empty_set(none)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),not_member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),not_member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy /: xx) <=> not(1=2 & yy /: xx)))'),ARes),true.

2014-09-30 16:08:15,563 10375 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,[],{}),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & not(xx /= {}) & ((1=1 & yy /: xx) <=> not(1=2 & yy /: xx)))')),[]))
2014-09-30 16:08:15,563 10375 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:15,563 10375 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:15,563 10375 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {} &
2014-09-30 16:08:15,563 10375 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:15,563 10375 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:15,564 10376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:15,564 10376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:15,567 10379 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:15,573 10385 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:15,574 10386 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:15,574 10386 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:16,196 11008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:16,196 11008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:16,197 11009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:16,197 11009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51450
2014-09-30 16:08:16,197 11009 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51450
2014-09-30 16:08:16,197 11009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:16,197 11009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11494
2014-09-30 16:08:16,197 11009 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11494
2014-09-30 16:08:16,197 11009 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51450 using key d79b0faf9d7a2258
2014-09-30 16:08:16,198 11010 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:16,199 11011 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:16,209 11021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:16,279 11091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:16,279 11091 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:16,279 11091 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:16,280 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,280 11092 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,281 11093 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_46,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:16,283 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:16,283 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,283 11095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,284 11096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_47,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:16,285 11097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:16,285 11097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,285 11097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,286 11098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_47,formula_46],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:16,340 11152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:16,341 11153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,341 11153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,343 11155 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:16,353 11165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:16,353 11165 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:16,353 11165 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:16,353 11165 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:16,353 11165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,353 11165 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,354 11166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_47,formula_46],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:16,385 11197 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:16,385 11197 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:16,386 11198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,386 11198 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,389 11201 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),not_equal(none,identifier(none,xx),empty_set(none))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),member(none,identifier(none,yy),identifier(none,xx))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),member(none,identifier(none,yy),identifier(none,xx))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))'),ARes),true.

2014-09-30 16:08:16,396 11208 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(1,'ID'),aa),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (xx /= {}) & ((1=1 & yy : xx) <=> not(1=2 & yy : xx)))')),[]))
2014-09-30 16:08:16,396 11208 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:16,397 11209 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:16,397 11209 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:16,397 11209 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:16,397 11209 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:16,398 11210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:16,398 11210 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:16,402 11214 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:16,407 11219 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:16,408 11220 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:16,408 11220 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:16,976 11788 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:16,977 11789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:16,977 11789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:16,977 11789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51452
2014-09-30 16:08:16,977 11789 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51452
2014-09-30 16:08:16,977 11789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:16,977 11789 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11498
2014-09-30 16:08:16,977 11789 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11498
2014-09-30 16:08:16,978 11790 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51452 using key d79b0faf9d7a2258
2014-09-30 16:08:16,978 11790 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:16,979 11791 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:16,990 11802 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:17,063 11875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,063 11875 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:17,063 11875 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:17,063 11875 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,064 11876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,064 11876 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:17,066 11878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,066 11878 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,067 11879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,067 11879 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:17,069 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,069 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,069 11881 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,070 11882 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_52,formula_51],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:17,121 11933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:17,122 11934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,123 11935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,124 11936 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:17,134 11946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:17,134 11946 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:17,134 11946 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:17,134 11946 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:17,134 11946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,135 11947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,135 11947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_52,formula_51],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:17,167 11979 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:17,167 11979 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:17,168 11980 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,169 11981 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,172 11984 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,xx),identifier(none,yy)],conjunct(none,conjunct(none,conjunct(none,subset(none,identifier(none,xx),identifier(none,'ID')),member(none,identifier(none,yy),identifier(none,'ID'))),not_member(none,identifier(none,yy),identifier(none,xx))),equivalence(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,not_equal(none,identifier(none,xx),empty_set(none)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#xx,yy.((xx <: ID) & (yy : ID) & (yy /: xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))'),ARes),true.

2014-09-30 16:08:17,181 11993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,'.'(fd(1,'ID'),[]),'{aa}'),'.'(bind(yy,fd(2,'ID'),bb),[])),'#xx,yy.((xx <: ID) & (yy : ID) & (yy /: xx) & ((xx /= {} & 1=1) <=> not(xx /= {} & 1=2)))')),[]))
2014-09-30 16:08:17,181 11993 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:08:17,181 11993 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:17,181 11993 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = {aa} &
2014-09-30 16:08:17,181 11993 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = bb
2014-09-30 16:08:17,181 11993 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,182 11994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,182 11994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,185 11997 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:08:17,189 12001 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:08:17,190 12002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:08:17,190 12002 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:08:17,761 12573 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:08:17,761 12573 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:08:17,762 12574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:08:17,762 12574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51454
2014-09-30 16:08:17,762 12574 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51454
2014-09-30 16:08:17,762 12574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:08:17,762 12574 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11502
2014-09-30 16:08:17,762 12574 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11502
2014-09-30 16:08:17,762 12574 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51454 using key d79b0faf9d7a2258
2014-09-30 16:08:17,763 12575 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:08:17,764 12576 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:08:17,774 12586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/SelectStmt.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('SelectStmt',['/Users/ernestocid/Temp/MCDC/SelectStmt.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'SelectStmt',[]),[sets(4,[enumerated_set(5,'ID',[identifier(6,aa),identifier(7,bb),identifier(8,cc)])]),variables(9,[identifier(10,xx)]),invariant(11,subset(12,identifier(13,xx),identifier(14,'ID'))),initialisation(15,any(16,[identifier(17,zz)],conjunct(18,subset(19,identifier(20,zz),identifier(21,'ID')),equal(22,card(23,identifier(24,zz)),integer(25,2))),assign(26,[identifier(27,xx)],[identifier(28,zz)]))),operations(29,[operation(30,identifier(30,op),[identifier(31,rr)],[identifier(32,yy)],precondition(33,member(34,identifier(35,yy),identifier(36,'ID')),select(37,equal(38,identifier(39,xx),empty_set(40)),assign(41,[identifier(42,rr)],[integer(43,1)]),[select_when(44,conjunct(45,not_equal(46,identifier(47,xx),empty_set(48)),member(49,identifier(50,yy),identifier(51,xx))),assign(52,[identifier(53,rr)],[integer(54,2)])),select_when(55,conjunct(56,not_equal(57,identifier(58,xx),empty_set(59)),not_member(60,identifier(61,yy),identifier(62,xx))),assign(63,[identifier(64,rr)],[integer(65,3)]))],assign(66,[identifier(67,rr)],[integer(68,4)]))))])]))]),start_animation,true.

2014-09-30 16:08:17,846 12658 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,846 12658 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:08:17,847 12659 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),SelectStmt,[/Users/ernestocid/Temp/MCDC/SelectStmt.mch])
2014-09-30 16:08:17,847 12659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,847 12659 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,848 12660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_56,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:08:17,850 12662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,850 12662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,850 12662 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,851 12663 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_57,eval(subset(none,identifier(none,xx),identifier(none,'ID')),'#PREDICATE','xx<:ID')),true.

2014-09-30 16:08:17,852 12664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:08:17,852 12664 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,853 12665 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,854 12666 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_57,formula_56],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:08:17,907 12719 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),'.'(op(1,root,1),'.'(op(2,root,2),[])))),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:17,909 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,909 12721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,911 12723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:08:17,921 12733 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:08:17,921 12733 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:08:17,922 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:08:17,922 12734 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:08:17,922 12734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,922 12734 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,923 12735 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_57,formula_56],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:08:17,954 12766 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),[])))),'.'(=('BResults','.'(result('TRUE',[],'xx<:ID'),'.'(result(v('{aa,bb}',avl_set(node(fd(1,'ID'),true,1,empty,node(fd(2,'ID'),true,0,empty,empty)))),[],xx),[]))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:08:17,954 12766 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {aa,bb}
2014-09-30 16:08:17,955 12767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,956 12768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:08:17,958 12770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(member(none,identifier(none,yy),identifier(none,'ID')),'#PREDICATE','yy : ID'),ARes),true.

2014-09-30 16:08:17,961 12773 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,fd(1,'ID'),aa),[]),'yy : ID')),[]))
2014-09-30 16:08:17,961 12773 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy is TRUE
2014-09-30 16:08:17,962 12774 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:08:17,962 12774 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = aa
2014-09-30 16:08:17,962 12774 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:08:17,962 12774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:08:17,962 12774 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:30,269 3028 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:30,283 3042 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:30,287 3046 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:30,288 3047 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:30,856 3615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:30,856 3615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:30,856 3615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:30,857 3616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51457
2014-09-30 16:09:30,857 3616 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51457
2014-09-30 16:09:30,857 3616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:30,857 3616 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11508
2014-09-30 16:09:30,857 3616 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11508
2014-09-30 16:09:30,858 3617 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51457 using key e141fa21802c4c43
2014-09-30 16:09:30,859 3618 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:30,860 3619 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:31,011 3770 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:31,086 3845 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:31,086 3845 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:31,086 3845 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:31,101 3860 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,102 3861 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,104 3863 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:31,106 3865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:31,106 3865 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,107 3866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,107 3866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:31,108 3867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:31,108 3867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,108 3867 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,109 3868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:31,111 3870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:31,111 3870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,111 3870 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,112 3871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:31,112 3871 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:31,113 3872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,113 3872 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,132 3891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_3,formula_2,formula_4,formula_1],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:31,179 3938 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:31,182 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,182 3941 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,193 3952 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:31,212 3971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:31,214 3973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,214 3973 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:31,214 3973 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:31,214 3973 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,214 3973 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:31,226 3985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_3,formula_2,formula_4,formula_1],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:31,256 4015 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:31,263 4022 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:31,263 4022 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:31,263 4022 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:31,263 4022 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:31,264 4023 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:31,264 4023 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:31,278 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,278 4037 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,285 4044 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,yy),integer(none,10))),equivalence(none,disjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),negation(none,disjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 or 1=1) <=> not(xx = 10 or 1=2)))'),ARes),true.

2014-09-30 16:09:31,329 4088 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(10),'10'),'.'(bind(xx,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 or 1=1) <=> not(xx = 10 or 1=2)))')),[]))
2014-09-30 16:09:31,329 4088 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:31,330 4089 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:31,330 4089 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 10 &
2014-09-30 16:09:31,330 4089 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0
2014-09-30 16:09:31,330 4089 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:31,332 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:31,332 4091 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:31,336 4095 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:31,342 4101 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:31,343 4102 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:31,344 4103 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:31,994 4753 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:31,994 4753 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:31,995 4754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:31,995 4754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51459
2014-09-30 16:09:31,995 4754 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51459
2014-09-30 16:09:31,995 4754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:31,995 4754 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11512
2014-09-30 16:09:31,995 4754 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11512
2014-09-30 16:09:31,995 4754 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51459 using key e141fa21802c4c43
2014-09-30 16:09:31,996 4755 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:32,024 4783 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:32,050 4809 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:32,137 4896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:32,137 4896 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:32,138 4897 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:32,138 4897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,139 4898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,139 4898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:32,141 4900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:32,141 4900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,141 4900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,142 4901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_14,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:32,142 4901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:32,142 4901 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,143 4902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,143 4902 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_15,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:32,144 4903 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:32,145 4904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,145 4904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,145 4904 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_16,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:32,146 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:32,146 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,146 4905 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,147 4906 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_15,formula_14,formula_16,formula_13],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:32,186 4945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:32,188 4947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,188 4947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,190 4949 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:32,201 4960 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:32,201 4960 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:32,202 4961 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:32,202 4961 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:32,202 4961 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,203 4962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,203 4962 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_15,formula_14,formula_16,formula_13],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:32,223 4982 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:32,223 4982 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:32,224 4983 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:32,224 4983 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:32,224 4983 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:32,224 4983 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:32,224 4983 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:32,226 4985 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,227 4986 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,231 4990 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,xx),integer(none,10))),equivalence(none,disjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),negation(none,disjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 or yy = 10) <=> not(1=2 or yy = 10)))'),ARes),true.

2014-09-30 16:09:32,258 5017 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,int(10),'10'),'.'(bind(yy,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 or yy = 10) <=> not(1=2 or yy = 10)))')),[]))
2014-09-30 16:09:32,258 5017 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:09:32,259 5018 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:32,259 5018 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10 &
2014-09-30 16:09:32,259 5018 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0
2014-09-30 16:09:32,259 5018 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:32,260 5019 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:32,261 5020 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:32,265 5024 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:32,269 5028 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:32,270 5029 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:32,271 5030 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:32,963 5722 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:32,964 5723 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:32,964 5723 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:32,964 5723 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51461
2014-09-30 16:09:32,964 5723 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51461
2014-09-30 16:09:32,965 5724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:32,965 5724 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11516
2014-09-30 16:09:32,965 5724 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11516
2014-09-30 16:09:32,965 5724 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51461 using key e141fa21802c4c43
2014-09-30 16:09:32,965 5724 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:32,966 5725 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:32,981 5740 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:33,060 5819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,060 5819 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:33,060 5819 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:33,060 5819 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,061 5820 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,062 5821 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_25,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:33,063 5822 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,064 5823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,064 5823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,064 5823 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_26,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:33,065 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,065 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,065 5824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,066 5825 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_27,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:33,067 5826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,067 5826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,067 5826 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,068 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_28,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:33,068 5827 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,069 5828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,069 5828 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,070 5829 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_27,formula_26,formula_28,formula_25],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:33,105 5864 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:33,107 5866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,107 5866 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,109 5868 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:33,128 5887 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:33,129 5888 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,130 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:33,130 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:33,130 5889 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:33,131 5890 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,132 5891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_27,formula_26,formula_28,formula_25],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:33,164 5923 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:33,166 5925 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:33,167 5926 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,168 5927 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,172 5931 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,yy),integer(none,10)))),equivalence(none,disjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),negation(none,disjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 or 1=1) <=> not(xx = 10 or 1=2)))'),ARes),true.

2014-09-30 16:09:33,208 5967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 or 1=1) <=> not(xx = 10 or 1=2)))')),[]))
2014-09-30 16:09:33,208 5967 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:33,209 5968 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:33,209 5968 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:33,209 5968 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0
2014-09-30 16:09:33,209 5968 [Thread-7] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:33,210 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,210 5969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,214 5973 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:33,218 5977 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:33,219 5978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:33,219 5978 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:33,869 6628 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51463
2014-09-30 16:09:33,870 6629 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51463
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11520
2014-09-30 16:09:33,870 6629 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11520
2014-09-30 16:09:33,870 6629 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51463 using key e141fa21802c4c43
2014-09-30 16:09:33,871 6630 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:33,872 6631 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:33,886 6645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:33,953 6712 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,953 6712 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:33,954 6713 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:33,954 6713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,954 6713 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,955 6714 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_37,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:33,956 6715 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,957 6716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,957 6716 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,958 6717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_38,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:33,958 6717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,958 6717 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,959 6718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,959 6718 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_39,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:33,961 6720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,961 6720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,961 6720 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,962 6721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_40,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:33,962 6721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:33,963 6722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,963 6722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,963 6722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_39,formula_38,formula_40,formula_37],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:33,996 6755 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:33,997 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:33,997 6756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:33,998 6757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:34,008 6767 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:34,008 6767 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:34,009 6768 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:34,009 6768 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:34,009 6768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,009 6768 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,010 6769 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_39,formula_38,formula_40,formula_37],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:34,029 6788 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:34,029 6788 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:34,031 6790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,031 6790 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,036 6795 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,xx),integer(none,10)))),equivalence(none,disjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),negation(none,disjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 or yy = 10) <=> not(1=2 or yy = 10)))'),ARes),true.

2014-09-30 16:09:34,054 6813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 or yy = 10) <=> not(1=2 or yy = 10)))')),[]))
2014-09-30 16:09:34,054 6813 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:34,054 6813 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:34,054 6813 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:34,055 6814 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0
2014-09-30 16:09:34,055 6814 [Thread-9] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:34,055 6814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,055 6814 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,059 6818 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:34,063 6822 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:34,064 6823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:34,064 6823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:34,652 7411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:34,652 7411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:34,652 7411 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:34,653 7412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51465
2014-09-30 16:09:34,653 7412 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51465
2014-09-30 16:09:34,653 7412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:34,653 7412 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11524
2014-09-30 16:09:34,653 7412 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11524
2014-09-30 16:09:34,653 7412 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51465 using key e141fa21802c4c43
2014-09-30 16:09:34,654 7413 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:34,655 7414 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:34,668 7427 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:34,737 7496 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:34,737 7496 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:34,738 7497 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:34,738 7497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,739 7498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,739 7498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_49,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:34,740 7499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:34,741 7500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,741 7500 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,742 7501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_50,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:34,742 7501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:34,742 7501 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,743 7502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,743 7502 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_51,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:34,745 7504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:34,745 7504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,746 7505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,746 7505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_52,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:34,747 7506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:34,747 7506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,747 7506 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,748 7507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_51,formula_50,formula_52,formula_49],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:34,781 7540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:34,782 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,782 7541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,784 7543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:34,794 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:34,794 7553 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:34,794 7553 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:34,794 7553 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:34,794 7553 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,795 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,795 7554 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_51,formula_50,formula_52,formula_49],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:34,817 7576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:34,817 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:34,817 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:34,817 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:34,817 7576 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:34,818 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:34,818 7577 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:34,819 7578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,819 7578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,822 7581 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,yy),integer(none,10)))),equivalence(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 & 1=1) <=> not(xx = 10 & 1=2)))'),ARes),true.

2014-09-30 16:09:34,850 7609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(10),'10'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 & 1=1) <=> not(xx = 10 & 1=2)))')),[]))
2014-09-30 16:09:34,850 7609 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:34,850 7609 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:34,850 7609 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:34,851 7610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10
2014-09-30 16:09:34,851 7610 [Thread-11] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:34,851 7610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:34,851 7610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:34,854 7613 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:34,861 7620 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:34,862 7621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:34,862 7621 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:35,450 8209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:35,451 8210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:35,451 8210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:35,451 8210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51467
2014-09-30 16:09:35,451 8210 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51467
2014-09-30 16:09:35,451 8210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:35,452 8211 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11528
2014-09-30 16:09:35,452 8211 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11528
2014-09-30 16:09:35,452 8211 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51467 using key e141fa21802c4c43
2014-09-30 16:09:35,452 8211 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:35,453 8212 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:35,464 8223 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:35,539 8298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:35,539 8298 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:35,539 8298 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:35,539 8298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,540 8299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,540 8299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_61,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:35,542 8301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:35,542 8301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,542 8301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,543 8302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_62,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:35,543 8302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:35,544 8303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,544 8303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,544 8303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_63,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:35,545 8304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:35,546 8305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,546 8305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,547 8306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_64,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:35,547 8306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:35,547 8306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,547 8306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,548 8307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_63,formula_62,formula_64,formula_61],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:35,580 8339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:35,581 8340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,581 8340 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,582 8341 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:35,594 8353 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:35,595 8354 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:35,595 8354 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:35,595 8354 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:35,595 8354 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,596 8355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,596 8355 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_63,formula_62,formula_64,formula_61],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:35,615 8374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:35,615 8374 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:35,617 8376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,617 8376 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,620 8379 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,xx),integer(none,10))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 & yy = 10) <=> not(1=2 & yy = 10)))'),ARes),true.

2014-09-30 16:09:35,627 8386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,int(10),'10'),'.'(bind(yy,int(10),'10'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 & yy = 10) <=> not(1=2 & yy = 10)))')),[]))
2014-09-30 16:09:35,627 8386 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:09:35,628 8387 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:35,628 8387 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10 &
2014-09-30 16:09:35,628 8387 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 10
2014-09-30 16:09:35,628 8387 [Thread-13] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:35,628 8387 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:35,629 8388 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:35,632 8391 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:35,636 8395 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:35,637 8396 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:35,637 8396 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:36,249 9008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:36,249 9008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:36,249 9008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:36,249 9008 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51469
2014-09-30 16:09:36,250 9009 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51469
2014-09-30 16:09:36,250 9009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:36,250 9009 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11532
2014-09-30 16:09:36,250 9009 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11532
2014-09-30 16:09:36,250 9009 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51469 using key e141fa21802c4c43
2014-09-30 16:09:36,250 9009 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:36,251 9010 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:36,262 9021 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:36,337 9096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:36,337 9096 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:36,337 9096 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:36,337 9096 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,338 9097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,339 9098 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_73,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:36,340 9099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:36,340 9099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,341 9100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,341 9100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_74,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:36,342 9101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:36,342 9101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,342 9101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,343 9102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_75,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:36,344 9103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:36,344 9103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,345 9104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,345 9104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_76,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:36,346 9105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:36,346 9105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,346 9105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,347 9106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_75,formula_74,formula_76,formula_73],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:36,379 9138 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:36,381 9140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,381 9140 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,382 9141 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:36,393 9152 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:36,393 9152 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:36,394 9153 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:36,394 9153 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:36,394 9153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,394 9153 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,395 9154 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_75,formula_74,formula_76,formula_73],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:36,415 9174 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:36,415 9174 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:36,416 9175 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:36,416 9175 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:36,416 9175 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:36,416 9175 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:36,416 9175 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:36,418 9177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,418 9177 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,421 9180 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,xx),integer(none,10)))),equivalence(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),negation(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 & yy = 10) <=> not(1=2 & yy = 10)))'),ARes),true.

2014-09-30 16:09:36,443 9202 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(10),'10'),'.'(bind(xx,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 & yy = 10) <=> not(1=2 & yy = 10)))')),[]))
2014-09-30 16:09:36,443 9202 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:36,444 9203 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:36,444 9203 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 10 &
2014-09-30 16:09:36,444 9203 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0
2014-09-30 16:09:36,444 9203 [Thread-15] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:36,445 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:36,445 9204 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:36,449 9208 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:36,457 9216 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:36,458 9217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:36,458 9217 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:37,051 9810 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:37,051 9810 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:37,051 9810 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:37,051 9810 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51471
2014-09-30 16:09:37,052 9811 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51471
2014-09-30 16:09:37,052 9811 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:37,052 9811 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11536
2014-09-30 16:09:37,052 9811 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11536
2014-09-30 16:09:37,053 9812 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51471 using key e141fa21802c4c43
2014-09-30 16:09:37,053 9812 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:37,054 9813 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:37,065 9824 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:37,132 9891 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,132 9891 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:37,132 9891 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:37,133 9892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,133 9892 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,134 9893 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_85,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:37,135 9894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,135 9894 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,136 9895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,136 9895 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_86,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:37,137 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,137 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,137 9896 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,138 9897 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_87,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:37,139 9898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,139 9898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,139 9898 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,140 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_88,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:37,140 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,140 9899 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,141 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,141 9900 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_87,formula_86,formula_88,formula_85],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:37,174 9933 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:37,175 9934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,175 9934 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,176 9935 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:37,186 9945 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:37,186 9945 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:37,187 9946 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:37,187 9946 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:37,187 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,187 9946 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,188 9947 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_87,formula_86,formula_88,formula_85],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:37,208 9967 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:37,208 9967 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:37,209 9968 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,210 9969 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,212 9971 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,yy),integer(none,10))),equivalence(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 & 1=1) <=> not(xx = 10 & 1=2)))'),ARes),true.

2014-09-30 16:09:37,234 9993 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(10),'10'),'.'(bind(xx,int(10),'10'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 & 1=1) <=> not(xx = 10 & 1=2)))')),[]))
2014-09-30 16:09:37,234 9993 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:37,234 9993 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:37,234 9993 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 10 &
2014-09-30 16:09:37,234 9993 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10
2014-09-30 16:09:37,234 9993 [Thread-17] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:37,235 9994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,235 9994 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,239 9998 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:37,243 10002 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:37,244 10003 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:37,244 10003 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:37,855 10614 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:37,855 10614 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:37,855 10614 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:37,855 10614 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51473
2014-09-30 16:09:37,855 10614 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51473
2014-09-30 16:09:37,856 10615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:37,856 10615 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11540
2014-09-30 16:09:37,856 10615 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11540
2014-09-30 16:09:37,856 10615 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51473 using key e141fa21802c4c43
2014-09-30 16:09:37,856 10615 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:37,857 10616 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:37,869 10628 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:37,937 10696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,937 10696 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:37,937 10696 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:37,937 10696 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,938 10697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,938 10697 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_97,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:37,940 10699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,940 10699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,940 10699 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,941 10700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_98,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:37,941 10700 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,942 10701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,942 10701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,942 10701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_99,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:37,943 10702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,944 10703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,944 10703 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,945 10704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_100,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:37,945 10704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:37,945 10704 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,946 10705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,946 10705 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_99,formula_98,formula_100,formula_97],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:37,984 10743 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:37,985 10744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,985 10744 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,986 10745 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:37,997 10756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:37,997 10756 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:37,997 10756 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:37,997 10756 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:37,997 10756 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:37,998 10757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:37,998 10757 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_99,formula_98,formula_100,formula_97],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:38,017 10776 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:38,017 10776 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:38,018 10777 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,019 10778 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,023 10782 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,yy),integer(none,10)))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 & 1=1 or xx = 0 & yy = 0) <=> not(xx = 10 & 1=2 or xx = 0 & yy = 0)))'),ARes),true.

2014-09-30 16:09:38,053 10812 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(10),'10'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 10) & ((xx = 10 & 1=1 or xx = 0 & yy = 0) <=> not(xx = 10 & 1=2 or xx = 0 & yy = 0)))')),[]))
2014-09-30 16:09:38,053 10812 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:38,053 10812 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:38,053 10812 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:38,053 10812 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10
2014-09-30 16:09:38,053 10812 [Thread-19] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:38,054 10813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,054 10813 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,057 10816 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:38,063 10822 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:38,064 10823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:38,064 10823 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:38,767 11526 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:38,767 11526 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:38,767 11526 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:38,768 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51475
2014-09-30 16:09:38,768 11527 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51475
2014-09-30 16:09:38,768 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:38,768 11527 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11544
2014-09-30 16:09:38,768 11527 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11544
2014-09-30 16:09:38,768 11527 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51475 using key e141fa21802c4c43
2014-09-30 16:09:38,769 11528 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:38,770 11529 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:38,786 11545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:38,882 11641 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:38,882 11641 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:38,882 11641 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:38,883 11642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,883 11642 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,884 11643 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_109,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:38,886 11645 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:38,887 11646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,887 11646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,888 11647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_110,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:38,888 11647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:38,888 11647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,888 11647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,889 11648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_111,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:38,890 11649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:38,890 11649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,891 11650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,891 11650 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_112,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:38,892 11651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:38,892 11651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,892 11651 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,893 11652 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_111,formula_110,formula_112,formula_109],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:38,928 11687 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:38,929 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,929 11688 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,930 11689 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:38,942 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:38,942 11701 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:38,942 11701 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:38,942 11701 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:38,942 11701 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,943 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,943 11702 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_111,formula_110,formula_112,formula_109],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:38,962 11721 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:38,962 11721 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:38,962 11721 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:38,962 11721 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:38,963 11722 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:38,963 11722 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:38,963 11722 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:38,963 11722 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:38,964 11723 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:38,968 11727 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,xx),integer(none,10)))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 & yy = 10 or xx = 0 & yy = 0) <=> not(1=2 & yy = 10 or xx = 0 & yy = 0)))'),ARes),true.

2014-09-30 16:09:39,000 11759 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 10) & ((1=1 & yy = 10 or xx = 0 & yy = 0) <=> not(1=2 & yy = 10 or xx = 0 & yy = 0)))')),[]))
2014-09-30 16:09:39,000 11759 [Thread-21] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is FALSE
2014-09-30 16:09:39,001 11760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,001 11760 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,005 11764 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:39,011 11770 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:39,012 11771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:39,012 11771 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:39,616 12375 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51477
2014-09-30 16:09:39,617 12376 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51477
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11548
2014-09-30 16:09:39,617 12376 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11548
2014-09-30 16:09:39,617 12376 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51477 using key e141fa21802c4c43
2014-09-30 16:09:39,618 12377 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:39,619 12378 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:39,630 12389 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:39,697 12456 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:39,697 12456 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:39,698 12457 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:39,698 12457 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,699 12458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,699 12458 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_121,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:39,700 12459 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:39,701 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,701 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,701 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_122,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:39,701 12460 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:39,702 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,702 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,702 12461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_123,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:39,703 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:39,703 12462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,704 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,704 12463 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_124,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:39,705 12464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:39,705 12464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,705 12464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,706 12465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_123,formula_122,formula_124,formula_121],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:39,738 12497 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:39,739 12498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,739 12498 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,740 12499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:39,751 12510 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:39,751 12510 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:39,751 12510 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:39,751 12510 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:39,752 12511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,752 12511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,752 12511 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_123,formula_122,formula_124,formula_121],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:39,771 12530 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:39,771 12530 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:39,772 12531 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,773 12532 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,776 12535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,yy),integer(none,0)))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 0) & ((xx = 10 & yy = 10 or xx = 0 & 1=1) <=> not(xx = 10 & yy = 10 or xx = 0 & 1=2)))'),ARes),true.

2014-09-30 16:09:39,806 12565 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(10),'10'),'.'(bind(xx,int(10),'10'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(yy = 0) & ((xx = 10 & yy = 10 or xx = 0 & 1=1) <=> not(xx = 10 & yy = 10 or xx = 0 & 1=2)))')),[]))
2014-09-30 16:09:39,806 12565 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:39,807 12566 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:39,807 12566 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 10 &
2014-09-30 16:09:39,807 12566 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 10
2014-09-30 16:09:39,807 12566 [Thread-23] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:39,807 12566 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:39,808 12567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:39,810 12569 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:39,814 12573 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:39,816 12575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:39,816 12575 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:40,750 13509 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:40,758 13517 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:40,759 13518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:40,759 13518 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51479
2014-09-30 16:09:40,759 13518 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51479
2014-09-30 16:09:40,760 13519 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:40,760 13519 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11552
2014-09-30 16:09:40,760 13519 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11552
2014-09-30 16:09:40,760 13519 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51479 using key e141fa21802c4c43
2014-09-30 16:09:40,761 13520 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:40,763 13522 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:40,775 13534 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:40,846 13605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:40,846 13605 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:40,846 13605 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:40,846 13605 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,847 13606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,847 13606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_133,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:40,849 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:40,849 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,849 13608 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,850 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_134,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:40,850 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:40,850 13609 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,851 13610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,851 13610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_135,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:40,852 13611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:40,852 13611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,853 13612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,853 13612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_136,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:40,854 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:40,854 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,854 13613 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,855 13614 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_135,formula_134,formula_136,formula_133],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:40,887 13646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:40,888 13647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,889 13648 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,890 13649 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:40,901 13660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:40,901 13660 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:40,901 13660 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:40,901 13660 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:40,901 13660 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,902 13661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,902 13661 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_135,formula_134,formula_136,formula_133],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:40,920 13679 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:40,920 13679 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:40,921 13680 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,922 13681 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,925 13684 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,yy),integer(none,10))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,1))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,integer(none,1),integer(none,2))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 & 1=1 or xx = 0 & yy = 0) <=> not(xx = 10 & 1=2 or xx = 0 & yy = 0)))'),ARes),true.

2014-09-30 16:09:40,948 13707 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 10) & ((xx = 10 & 1=1 or xx = 0 & yy = 0) <=> not(xx = 10 & 1=2 or xx = 0 & yy = 0)))')),[]))
2014-09-30 16:09:40,948 13707 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: ((xx = 10 or xx = 0) & yy = 0) <=> not(((xx = 10 & /* falsity */ 1 = 2) or xx = 0) & yy = 0)
2014-09-30 16:09:40,949 13708 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:09:40,949 13708 [Thread-25] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is FALSE
2014-09-30 16:09:40,949 13708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:40,949 13708 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:40,953 13712 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:40,957 13716 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:40,958 13717 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:40,958 13717 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:41,692 14451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:41,692 14451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:41,692 14451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:41,692 14451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51481
2014-09-30 16:09:41,692 14451 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51481
2014-09-30 16:09:41,692 14451 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:41,693 14452 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11556
2014-09-30 16:09:41,693 14452 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11556
2014-09-30 16:09:41,693 14452 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51481 using key e141fa21802c4c43
2014-09-30 16:09:41,693 14452 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:41,695 14454 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:41,705 14464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:41,776 14535 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:41,776 14535 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:41,777 14536 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:41,777 14536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,777 14536 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,778 14537 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_145,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:41,779 14538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:41,779 14538 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,780 14539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,780 14539 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_146,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:41,781 14540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:41,781 14540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,781 14540 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,782 14541 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_147,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:41,783 14542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:41,783 14542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,783 14542 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,784 14543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_148,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:41,784 14543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:41,784 14543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,785 14544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,785 14544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_147,formula_146,formula_148,formula_145],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:41,817 14576 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:41,818 14577 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,819 14578 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,820 14579 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:41,830 14589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:41,830 14589 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:41,830 14589 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:41,830 14589 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:41,830 14589 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,831 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,831 14590 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_147,formula_146,formula_148,formula_145],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:41,851 14610 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:41,851 14610 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:41,852 14611 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,853 14612 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,857 14616 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),negation(none,equal(none,identifier(none,xx),integer(none,0)))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,integer(none,1),integer(none,1))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,integer(none,1),integer(none,2))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 0) & ((xx = 10 & yy = 10 or 1=1 & yy = 0) <=> not(xx = 10 & yy = 10 or 1=2 & yy = 0)))'),ARes),true.

2014-09-30 16:09:41,887 14646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(1),'1'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & not(xx = 0) & ((xx = 10 & yy = 10 or 1=1 & yy = 0) <=> not(xx = 10 & yy = 10 or 1=2 & yy = 0)))')),[]))
2014-09-30 16:09:41,887 14646 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:41,887 14646 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:41,887 14646 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:41,887 14646 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 1
2014-09-30 16:09:41,887 14646 [Thread-27] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:41,887 14646 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:41,888 14647 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:41,891 14650 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:41,895 14654 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:41,896 14655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:41,896 14655 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:42,618 15377 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:42,619 15378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:42,619 15378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:42,619 15378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51483
2014-09-30 16:09:42,619 15378 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51483
2014-09-30 16:09:42,619 15378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:42,619 15378 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11560
2014-09-30 16:09:42,619 15378 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11560
2014-09-30 16:09:42,620 15379 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51483 using key e141fa21802c4c43
2014-09-30 16:09:42,620 15379 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:42,621 15380 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:42,632 15391 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:42,702 15461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:42,702 15461 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:42,702 15461 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:42,702 15461 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,703 15462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,703 15462 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_157,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:42,705 15464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:42,705 15464 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,706 15465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,706 15465 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_158,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:42,707 15466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:42,707 15466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,707 15466 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,708 15467 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_159,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:42,709 15468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:42,709 15468 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,710 15469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,710 15469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_160,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:42,710 15469 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:42,711 15470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,711 15470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,711 15470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_159,formula_158,formula_160,formula_157],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:42,745 15504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:42,746 15505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,746 15505 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,748 15507 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:42,763 15522 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:42,763 15522 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:42,764 15523 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:42,764 15523 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:42,764 15523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,764 15523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,765 15524 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_159,formula_158,formula_160,formula_157],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:42,784 15543 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:42,784 15543 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:42,785 15544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,785 15544 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,789 15548 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,xx),integer(none,0))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,integer(none,1),integer(none,1))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,integer(none,1),integer(none,2))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 0) & ((xx = 10 & yy = 10 or 1=1 & yy = 0) <=> not(xx = 10 & yy = 10 or 1=2 & yy = 0)))'),ARes),true.

2014-09-30 16:09:42,811 15570 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(xx,int(0),'0'),'.'(bind(yy,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 0) & ((xx = 10 & yy = 10 or 1=1 & yy = 0) <=> not(xx = 10 & yy = 10 or 1=2 & yy = 0)))')),[]))
2014-09-30 16:09:42,811 15570 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is TRUE
2014-09-30 16:09:42,811 15570 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:42,811 15570 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0 &
2014-09-30 16:09:42,811 15570 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0
2014-09-30 16:09:42,812 15571 [Thread-29] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:42,812 15571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:42,812 15571 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:42,815 15574 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:42,825 15584 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:42,826 15585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:42,826 15585 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:43,555 16314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:43,555 16314 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:43,556 16315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:43,556 16315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51485
2014-09-30 16:09:43,556 16315 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51485
2014-09-30 16:09:43,556 16315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:43,556 16315 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11564
2014-09-30 16:09:43,556 16315 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11564
2014-09-30 16:09:43,556 16315 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51485 using key e141fa21802c4c43
2014-09-30 16:09:43,557 16316 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:43,558 16317 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:43,568 16327 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:43,638 16397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:43,638 16397 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:43,639 16398 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:43,639 16398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,639 16398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,640 16399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_169,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:43,642 16401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:43,642 16401 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,643 16402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,643 16402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_170,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:43,643 16402 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:43,644 16403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,644 16403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,644 16403 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_171,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:43,645 16404 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:43,646 16405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,646 16405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,646 16405 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_172,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:43,647 16406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:43,647 16406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,647 16406 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,648 16407 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_171,formula_170,formula_172,formula_169],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:43,680 16439 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:43,681 16440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,681 16440 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,682 16441 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:43,692 16451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:43,692 16451 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:43,692 16451 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:43,692 16451 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:43,692 16451 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,693 16452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,693 16452 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_171,formula_170,formula_172,formula_169],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:43,711 16470 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:43,711 16470 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:43,711 16470 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:43,712 16471 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:43,712 16471 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:43,712 16471 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:43,712 16471 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:43,712 16471 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,713 16472 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,715 16474 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,xx),integer(none,10))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,1)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,integer(none,1),integer(none,2)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,identifier(none,yy),integer(none,0))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 & yy = 10 or xx = 0 & yy = 0) <=> not(1=2 & yy = 10 or xx = 0 & yy = 0)))'),ARes),true.

2014-09-30 16:09:43,740 16499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('FALSE',[],'#yy,xx.((xx : 0..10 & yy : 0..10) & (xx = 10) & ((1=1 & yy = 10 or xx = 0 & yy = 0) <=> not(1=2 & yy = 10 or xx = 0 & yy = 0)))')),[]))
2014-09-30 16:09:43,740 16499 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** INCONSISTENCY DETECTED, SKIPPING: ((yy = 10 or xx = 0) & yy = 0) <=> not(xx = 0 & yy = 0)
2014-09-30 16:09:43,740 16499 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -  *** COMPONENT NUMBER: 1
2014-09-30 16:09:43,740 16499 [Thread-31] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over xx,yy is FALSE
2014-09-30 16:09:43,740 16499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:43,740 16499 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:43,743 16502 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-30 16:09:43,747 16506 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-30 16:09:43,748 16507 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-30 16:09:43,748 16507 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-30 16:09:44,450 17209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-30 16:09:44,450 17209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-30 16:09:44,450 17209 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-30 16:09:44,451 17210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51487
2014-09-30 16:09:44,451 17210 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51487
2014-09-30 16:09:44,451 17210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: d8a3c3a5bc8ebed70f3a58137c00d92e4cfd34b9
2014-09-30 16:09:44,451 17210 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 11568
2014-09-30 16:09:44,451 17210 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 11568
2014-09-30 16:09:44,451 17210 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51487 using key e141fa21802c4c43
2014-09-30 16:09:44,452 17211 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-30 16:09:44,453 17212 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-30 16:09:44,465 17224 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-1'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/Temp/MCDC/Simple.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('Simple',['/Users/ernestocid/Temp/MCDC/Simple.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'Simple',[]),[variables(4,[identifier(5,xx),identifier(6,yy)]),invariant(7,conjunct(8,member(9,identifier(10,xx),interval(11,integer(12,0),integer(13,10))),member(14,identifier(15,yy),interval(16,integer(17,0),integer(18,10))))),initialisation(19,assign(20,[identifier(21,xx),identifier(22,yy)],[integer(23,2),integer(24,3)])),operations(25,[operation(26,identifier(26,'Either10'),[],[],select(27,disjunct(28,equal(29,identifier(30,xx),integer(31,10)),equal(32,identifier(33,yy),integer(34,10))),skip(35),[])),operation(36,identifier(36,'All10'),[],[],select(37,conjunct(38,equal(39,identifier(40,xx),integer(41,10)),equal(42,identifier(43,yy),integer(44,10))),skip(45),[])),operation(46,identifier(46,'BothEIther10or0'),[],[],select(47,disjunct(48,conjunct(49,equal(50,identifier(51,xx),integer(52,10)),equal(53,identifier(54,yy),integer(55,10))),conjunct(56,equal(57,identifier(58,xx),integer(59,0)),equal(60,identifier(61,yy),integer(62,0)))),skip(63),[]))])]))]),start_animation,true.

2014-09-30 16:09:44,535 17294 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:44,535 17294 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-30 16:09:44,536 17295 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),Simple,[/Users/ernestocid/Temp/MCDC/Simple.mch])
2014-09-30 16:09:44,536 17295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,537 17296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,537 17296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_181,eval(identifier(none,xx),'#EXPRESSION',xx)),true.

2014-09-30 16:09:44,539 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:44,539 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,539 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,539 17298 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_182,eval(identifier(none,yy),'#EXPRESSION',yy)),true.

2014-09-30 16:09:44,540 17299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:44,540 17299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,541 17300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,541 17300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_183,eval(member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','xx:0..10')),true.

2014-09-30 16:09:44,542 17301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:44,542 17301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,543 17302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,543 17302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_184,eval(member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10))),'#PREDICATE','yy:0..10')),true.

2014-09-30 16:09:44,544 17303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-30 16:09:44,544 17303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,544 17303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,545 17304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_183,formula_182,formula_184,formula_181],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-30 16:09:44,578 17337 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:44,579 17338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,579 17338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,580 17339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-30 16:09:44,590 17349 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-30 16:09:44,590 17349 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-30 16:09:44,591 17350 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-30 16:09:44,591 17350 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-30 16:09:44,591 17350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,591 17350 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,592 17351 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_183,formula_182,formula_184,formula_181],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-30 16:09:44,610 17369 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps',[]),'.'(=('BResults','.'(result('TRUE',[],'xx:0..10'),'.'(result(v('3',int(3)),[],yy),'.'(result('TRUE',[],'yy:0..10'),'.'(result(v('2',int(2)),[],xx),[]))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 3
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-30 16:09:44,610 17369 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 2
2014-09-30 16:09:44,611 17370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,611 17370 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-30 16:09:44,615 17374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,yy),identifier(none,xx)],conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,xx),interval(none,integer(none,0),integer(none,10))),member(none,identifier(none,yy),interval(none,integer(none,0),integer(none,10)))),equal(none,identifier(none,yy),integer(none,0))),equivalence(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,integer(none,1),integer(none,1))),negation(none,conjunct(none,disjunct(none,conjunct(none,equal(none,identifier(none,xx),integer(none,10)),equal(none,identifier(none,yy),integer(none,10))),equal(none,identifier(none,xx),integer(none,0))),equal(none,integer(none,1),integer(none,2))))))),'#PREDICATE','#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 0) & ((xx = 10 & yy = 10 or xx = 0 & 1=1) <=> not(xx = 10 & yy = 10 or xx = 0 & 1=2)))'),ARes),true.

2014-09-30 16:09:44,638 17397 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(yy,int(0),'0'),'.'(bind(xx,int(0),'0'),[])),'#yy,xx.((xx : 0..10 & yy : 0..10) & (yy = 0) & ((xx = 10 & yy = 10 or xx = 0 & 1=1) <=> not(xx = 10 & yy = 10 or xx = 0 & 1=2)))')),[]))
2014-09-30 16:09:44,639 17398 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over yy,xx is TRUE
2014-09-30 16:09:44,639 17398 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-30 16:09:44,639 17398 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        yy = 0 &
2014-09-30 16:09:44,639 17398 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        xx = 0
2014-09-30 16:09:44,639 17398 [Thread-33] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-30 16:09:44,639 17398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-30 16:09:44,640 17399 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
