2014-09-22 14:15:18,943 2991 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-22 14:15:18,961 3009 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-22 14:15:18,994 3042 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-22 14:15:18,994 3042 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-22 14:15:19,692 3740 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-22 14:15:19,692 3740 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-22 14:15:19,693 3741 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-22 14:15:19,693 3741 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51961
2014-09-22 14:15:19,693 3741 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51961
2014-09-22 14:15:19,693 3741 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-22 14:15:19,693 3741 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 34636
2014-09-22 14:15:19,694 3742 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 34636
2014-09-22 14:15:19,695 3743 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51961 using key fcf7db8fed20daba
2014-09-22 14:15:19,695 3743 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-22 14:15:19,696 3744 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-22 14:15:19,929 3977 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-22 14:15:20,014 4062 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,014 4062 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-22 14:15:20,014 4062 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-22 14:15:20,015 4063 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-22 14:15:20,046 4094 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,047 4095 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,049 4097 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-22 14:15:20,051 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,051 4099 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,052 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,052 4100 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-22 14:15:20,053 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,053 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,053 4101 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,054 4102 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-22 14:15:20,055 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,055 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,055 4103 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,056 4104 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-22 14:15:20,057 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,057 4105 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,058 4106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,058 4106 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-22 14:15:20,059 4107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,059 4107 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,060 4108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,060 4108 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-22 14:15:20,061 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,061 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,061 4109 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,062 4110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-22 14:15:20,062 4110 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,063 4111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,063 4111 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,064 4112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-22 14:15:20,064 4112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,064 4112 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,065 4113 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,066 4114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-22 14:15:20,066 4114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,066 4114 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,067 4115 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,068 4116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-22 14:15:20,068 4116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,068 4116 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,069 4117 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,070 4118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-22 14:15:20,070 4118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,070 4118 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,071 4119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,071 4119 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-22 14:15:20,072 4120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,072 4120 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,073 4121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,073 4121 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-22 14:15:20,074 4122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:20,074 4122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,074 4122 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,091 4139 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-22 14:15:20,134 4182 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:20,138 4186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,138 4186 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,148 4196 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-22 14:15:20,166 4214 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-22 14:15:20,166 4214 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-22 14:15:20,167 4215 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-22 14:15:20,167 4215 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-22 14:15:20,167 4215 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,168 4216 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,185 4233 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-22 14:15:20,223 4271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:20,223 4271 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,224 4272 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:20,225 4273 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:20,251 4299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,251 4299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,269 4317 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-22 14:15:20,287 4335 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-22 14:15:20,287 4335 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-22 14:15:20,288 4336 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:20,290 4338 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:20,291 4339 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:20,327 4375 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-22 14:15:20,334 4382 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-22 14:15:20,335 4383 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-22 14:15:20,335 4383 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-22 14:15:21,071 5119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-22 14:15:21,071 5119 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-22 14:15:21,072 5120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-22 14:15:21,072 5120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51963
2014-09-22 14:15:21,072 5120 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51963
2014-09-22 14:15:21,072 5120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-22 14:15:21,072 5120 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 34640
2014-09-22 14:15:21,073 5121 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 34640
2014-09-22 14:15:21,073 5121 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51963 using key fcf7db8fed20daba
2014-09-22 14:15:21,074 5122 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-22 14:15:21,074 5122 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-22 14:15:21,098 5146 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-22 14:15:21,200 5248 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:21,200 5248 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-22 14:15:21,200 5248 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-22 14:15:21,201 5249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:21,201 5249 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:21,202 5250 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-22 14:15:21,220 5268 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:21,221 5269 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:21,222 5270 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:21,223 5271 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-22 14:15:21,235 5283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-22 14:15:21,235 5283 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-22 14:15:21,236 5284 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-22 14:15:21,236 5284 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-22 14:15:21,236 5284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:21,237 5285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:21,237 5285 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-22 14:15:21,326 5374 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:21,326 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:21,326 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-22 14:15:21,326 5374 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:21,329 5377 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:21,330 5378 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:21,336 5384 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-22 14:15:21,350 5398 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-22 14:15:21,350 5398 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-22 14:15:21,351 5399 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-22 14:15:21,351 5399 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-22 14:15:21,351 5399 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:21,352 5400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:21,352 5400 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:42,193 2366 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-22 14:15:42,203 2376 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-22 14:15:42,206 2379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-22 14:15:42,206 2379 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-22 14:15:42,793 2966 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-22 14:15:42,794 2967 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-22 14:15:42,794 2967 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-22 14:15:42,794 2967 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51968
2014-09-22 14:15:42,794 2967 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51968
2014-09-22 14:15:42,795 2968 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-22 14:15:42,795 2968 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 34647
2014-09-22 14:15:42,795 2968 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 34647
2014-09-22 14:15:42,796 2969 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51968 using key 5e589103775f3a5a
2014-09-22 14:15:42,796 2969 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-22 14:15:42,797 2970 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-22 14:15:42,993 3166 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b(scheduler,['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch']),machine(abstract_machine(1,machine(2),machine_header(3,scheduler,[]),[sets(4,[deferred_set(5,'PID')]),variables(6,[identifier(7,active),identifier(8,ready),identifier(9,waiting)]),definitions(10,[expression_definition(11,scope_PID,[],interval(12,integer(13,1),integer(14,3))),predicate_definition(15,'GOAL',[],not_equal(16,identifier(17,waiting),empty_set(18)))]),invariant(19,conjunct(20,conjunct(21,conjunct(22,conjunct(23,conjunct(24,conjunct(25,conjunct(26,conjunct(27,conjunct(28,member(29,identifier(30,active),pow_subset(31,identifier(32,'PID'))),member(33,identifier(34,ready),pow_subset(35,identifier(36,'PID')))),member(37,identifier(38,waiting),pow_subset(39,identifier(40,'PID')))),subset(41,identifier(42,active),identifier(43,'PID'))),subset(44,identifier(45,ready),identifier(46,'PID'))),subset(47,identifier(48,waiting),identifier(49,'PID'))),equal(50,intersection(51,identifier(52,ready),identifier(53,waiting)),empty_set(54))),equal(55,intersection(56,identifier(57,active),union(58,identifier(59,ready),identifier(60,waiting))),empty_set(61))),less_equal(62,card(63,identifier(64,active)),integer(65,1))),implication(66,equal(67,identifier(68,active),empty_set(69)),equal(70,identifier(71,ready),empty_set(72))))),initialisation(73,parallel(74,[assign(75,[identifier(76,active)],[empty_set(77)]),assign(78,[identifier(79,ready)],[empty_set(80)]),assign(81,[identifier(82,waiting)],[empty_set(83)])])),operations(84,[operation(85,identifier(85,nr_ready),[identifier(86,rr)],[],assign(87,[identifier(88,rr)],[card(89,identifier(90,ready))])),operation(91,identifier(91,new),[],[identifier(92,pp)],select(93,conjunct(94,conjunct(95,member(96,identifier(97,pp),identifier(98,'PID')),not_member(99,identifier(100,pp),identifier(101,active))),not_member(102,identifier(103,pp),union(104,identifier(105,ready),identifier(106,waiting)))),assign(107,[identifier(108,waiting)],[union(109,identifier(110,waiting),set_extension(111,[identifier(112,pp)]))]),[])),operation(113,identifier(113,del),[],[identifier(114,pp)],select(115,member(116,identifier(117,pp),identifier(118,waiting)),assign(119,[identifier(120,waiting)],[minus_or_set_subtract(121,identifier(122,waiting),set_extension(123,[identifier(124,pp)]))]),[])),operation(125,identifier(125,ready),[],[identifier(126,rr)],select(127,member(128,identifier(129,rr),identifier(130,waiting)),parallel(131,[assign(132,[identifier(133,waiting)],[minus_or_set_subtract(134,identifier(135,waiting),set_extension(136,[identifier(137,rr)]))]),if(138,equal(139,identifier(140,active),empty_set(141)),assign(142,[identifier(143,active)],[set_extension(144,[identifier(145,rr)])]),[],assign(146,[identifier(147,ready)],[union(148,identifier(149,ready),set_extension(150,[identifier(151,rr)]))]))]),[])),operation(152,identifier(152,swap),[],[],select(153,not_equal(154,identifier(155,active),empty_set(156)),parallel(157,[assign(158,[identifier(159,waiting)],[union(160,identifier(161,waiting),identifier(162,active))]),if(163,equal(164,identifier(165,ready),empty_set(166)),assign(167,[identifier(168,active)],[empty_set(169)]),[],any(170,[identifier(171,pp)],member(172,identifier(173,pp),identifier(174,ready)),parallel(175,[assign(176,[identifier(177,active)],[set_extension(178,[identifier(179,pp)])]),assign(180,[identifier(181,ready)],[minus_or_set_subtract(182,identifier(183,ready),set_extension(184,[identifier(185,pp)]))])])))]),[]))])]))]),start_animation,true.

2014-09-22 14:15:43,078 3251 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-22 14:15:43,078 3251 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,078 3251 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),scheduler,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/CaseStudy/scheduler.mch])
2014-09-22 14:15:43,078 3251 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - % Symmetry is potentially useful for this machine
2014-09-22 14:15:43,110 3283 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,111 3284 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,114 3287 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_1,eval(identifier(none,active),'#EXPRESSION',active)),true.

2014-09-22 14:15:43,117 3290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,117 3290 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,118 3291 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,119 3292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_2,eval(identifier(none,ready),'#EXPRESSION',ready)),true.

2014-09-22 14:15:43,119 3292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,119 3292 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,120 3293 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,122 3295 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_3,eval(identifier(none,waiting),'#EXPRESSION',waiting)),true.

2014-09-22 14:15:43,123 3296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,123 3296 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,124 3297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,124 3297 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_4,eval(member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','active:POW(PID)')),true.

2014-09-22 14:15:43,126 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,126 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,126 3299 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,127 3300 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_5,eval(member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','ready:POW(PID)')),true.

2014-09-22 14:15:43,128 3301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,128 3301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,128 3301 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,129 3302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_6,eval(member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID'))),'#PREDICATE','waiting:POW(PID)')),true.

2014-09-22 14:15:43,129 3302 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,130 3303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,130 3303 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,131 3304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_7,eval(subset(none,identifier(none,active),identifier(none,'PID')),'#PREDICATE','active<:PID')),true.

2014-09-22 14:15:43,131 3304 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,132 3305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,132 3305 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,133 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_8,eval(subset(none,identifier(none,ready),identifier(none,'PID')),'#PREDICATE','ready<:PID')),true.

2014-09-22 14:15:43,133 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,133 3306 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,134 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,134 3307 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_9,eval(subset(none,identifier(none,waiting),identifier(none,'PID')),'#PREDICATE','waiting<:PID')),true.

2014-09-22 14:15:43,135 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,135 3308 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,136 3309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,136 3309 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_10,eval(equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none)),'#PREDICATE','ready/\\waiting={}')),true.

2014-09-22 14:15:43,137 3310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,137 3310 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,138 3311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,138 3311 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_11,eval(equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none)),'#PREDICATE','active/\\(ready\\/waiting)={}')),true.

2014-09-22 14:15:43,139 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,139 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,139 3312 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,140 3313 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_12,eval(less_equal(none,card(none,identifier(none,active)),integer(none,1)),'#PREDICATE','card(active)<=1')),true.

2014-09-22 14:15:43,141 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,141 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,141 3314 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,142 3315 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - register_prob2_formula(formula_13,eval(implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none))),'#PREDICATE','active={} => ready={}')),true.

2014-09-22 14:15:43,143 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:43,143 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,143 3316 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,161 3334 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-22 14:15:43,209 3382 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:43,212 3385 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,213 3386 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,222 3395 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-22 14:15:43,235 3408 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-22 14:15:43,235 3408 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-22 14:15:43,236 3409 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-22 14:15:43,236 3409 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-22 14:15:43,236 3409 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,237 3410 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,262 3435 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[formula_8,formula_7,formula_5,formula_3,formula_6,formula_9,formula_4,formula_12,formula_1,formula_10,formula_13,formula_2,formula_11],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-22 14:15:43,350 3523 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,1),'.'(op(3,0,2),'.'(op(4,0,3),[]))))),'.'(=('BResults','.'(result('TRUE',[],'ready<:PID'),'.'(result('TRUE',[],'active<:PID'),'.'(result('TRUE',[],'ready:POW(PID)'),'.'(result(v({},[]),[],waiting),'.'(result('TRUE',[],'waiting:POW(PID)'),'.'(result('TRUE',[],'waiting<:PID'),'.'(result('TRUE',[],'active:POW(PID)'),'.'(result('TRUE',[],'card(active)<=1'),'.'(result(v({},[]),[],active),'.'(result('TRUE',[],'ready/\\waiting={}'),'.'(result('TRUE',[],'active={} => ready={}'),'.'(result(v({},[]),[],ready),'.'(result('TRUE',[],'active/\\(ready\\/waiting)={}'),[])))))))))))))),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:43,350 3523 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Expression Value = 
2014-09-22 14:15:43,351 3524 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - {}
2014-09-22 14:15:43,352 3525 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Predicate is TRUE
2014-09-22 14:15:43,372 3545 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,373 3546 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,394 3567 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(exists(none,[identifier(none,active),identifier(none,ready),identifier(none,waiting),identifier(none,rr)],conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,conjunct(none,member(none,identifier(none,active),pow_subset(none,identifier(none,'PID'))),member(none,identifier(none,ready),pow_subset(none,identifier(none,'PID')))),member(none,identifier(none,waiting),pow_subset(none,identifier(none,'PID')))),subset(none,identifier(none,active),identifier(none,'PID'))),subset(none,identifier(none,ready),identifier(none,'PID'))),subset(none,identifier(none,waiting),identifier(none,'PID'))),equal(none,intersection(none,identifier(none,ready),identifier(none,waiting)),empty_set(none))),equal(none,intersection(none,identifier(none,active),union(none,identifier(none,ready),identifier(none,waiting))),empty_set(none))),less_equal(none,card(none,identifier(none,active)),integer(none,1))),implication(none,equal(none,identifier(none,active),empty_set(none)),equal(none,identifier(none,ready),empty_set(none)))),equal(none,identifier(none,active),empty_set(none))),member(none,identifier(none,rr),identifier(none,waiting)))),'#PREDICATE','#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)'),ARes),true.

2014-09-22 14:15:43,414 3587 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over active,ready,waiting,rr is TRUE
2014-09-22 14:15:43,414 3587 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-22 14:15:43,415 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        active = {} &
2014-09-22 14:15:43,414 3587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(active,[],{}),'.'(bind(ready,[],{}),'.'(bind(waiting,'.'(fd(1,'PID'),[]),'{PID1}'),'.'(bind(rr,fd(1,'PID'),'PID1'),[])))),'#active,ready,waiting,rr.(active : POW(PID) & ready : POW(PID) & waiting : POW(PID) & active <: PID & ready <: PID & waiting <: PID & (ready /\\ waiting = {}) & (active /\\ (ready \\/ waiting)) = {} & card(active) <= 1 & ((active = {}) => (ready = {})) & active = {} & rr : waiting)')),[]))
2014-09-22 14:15:43,415 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        ready = {} &
2014-09-22 14:15:43,415 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        waiting = {PID1} &
2014-09-22 14:15:43,415 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        rr = PID1
2014-09-22 14:15:43,415 3588 [Thread-3] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:43,418 3591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:43,418 3591 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:43,453 3626 [main] INFO  de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 52 - Starting ProB's Prolog Core. Path is /Users/ernestocid/.prob/probcli.sh
2014-09-22 14:15:43,458 3631 [main] DEBUG de.prob.cli.PrologProcessProvider Method:
				makeProcess Line: 54 - Cli started
2014-09-22 14:15:43,459 3632 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Running ProB Command-line Interface
2014-09-22 14:15:43,462 3635 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli -sf
2014-09-22 14:15:44,313 4486 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to No file to process
2014-09-22 14:15:44,313 4486 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Starting Socket Server
2014-09-22 14:15:44,313 4486 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Application Path: /Users/ernestocid/.prob
2014-09-22 14:15:44,314 4487 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to Port: 51970
2014-09-22 14:15:44,314 4487 [main] INFO  de.prob.cli.PortPattern Method:
				setValue Line: 34 - Server has startet and listens on port 51970
2014-09-22 14:15:44,314 4487 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to probcli revision: c19433ea257ad63b0660f3e4f387616221bc03b9
2014-09-22 14:15:44,314 4487 [main] DEBUG de.prob.cli.ProBInstanceProvider Method:
				analyseStdout Line: 105 - Apply cli detection patterns to user interrupt reference id: 34653
2014-09-22 14:15:44,314 4487 [main] INFO  de.prob.cli.InterruptRefPattern Method:
				setValue Line: 32 - Server can receive user interrupts via reference 34653
2014-09-22 14:15:44,314 4487 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 40 - Connecting to port 51970 using key 5e589103775f3a5a
2014-09-22 14:15:44,315 4488 [main] DEBUG de.prob.cli.ProBConnection Method:
				connect Line: 47 - Connected
2014-09-22 14:15:44,316 4489 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - -- starting command loop --
2014-09-22 14:15:44,331 4504 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - set_eclipse_preference('SYMBOLIC',true),set_eclipse_preference('CSE_PRED',true),set_eclipse_preference('SYMMETRY_MODE',off),set_eclipse_preference('DEFAULT_SETSIZE','2'),set_eclipse_preference('KODKOD_ONLY_FULL',true),set_eclipse_preference('CSE_WD_ONLY',false),set_eclipse_preference('TIME_OUT','2500'),set_eclipse_preference('KODKOD',false),set_eclipse_preference('NUMBER_OF_ANIMATED_ABSTRACTIONS','20'),set_eclipse_preference('USE_RECORD_CONSTRUCTION',true),set_eclipse_preference('MEMO',false),set_eclipse_preference('MAX_OPERATIONS','10'),set_eclipse_preference('CSE',false),set_eclipse_preference('MAXINT','20'),set_eclipse_preference('ALLOW_INCOMPLETE_SETUP_CONSTANTS',false),set_eclipse_preference('MININT','-20'),set_eclipse_preference('STATIC_ORDERING',false),set_eclipse_preference('COMPRESSION',false),set_eclipse_preference('MAX_INITIALISATIONS','4'),set_eclipse_preference('TRY_FIND_ABORT',false),set_eclipse_preference('CLPFD',true),set_eclipse_preference('CHR',false),set_eclipse_preference('PROOF_INFO',true),set_eclipse_preference('SMT',false),load_classical_b_from_list_of_facts('/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch',[parser_version('2013-04-30 11:58:52.139'),classical_b('PassFinalOrFailIFELSIFELSE',['/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch']),machine(abstract_machine(1,machine(2),machine_header(3,'PassFinalOrFailIFELSIFELSE',[]),[sets(4,[enumerated_set(5,'RESULT',[identifier(6,pass),identifier(7,final),identifier(8,fail)])]),operations(9,[operation(10,identifier(10,checkResult),[identifier(11,result)],[identifier(12,averageGrade)],precondition(13,conjunct(14,member(15,identifier(16,averageGrade),interval(17,integer(18,0),integer(19,5))),member(20,identifier(21,averageGrade),int_set(22))),if(23,greater_equal(24,identifier(25,averageGrade),integer(26,4)),assign(27,[identifier(28,result)],[identifier(29,pass)]),[if_elsif(30,conjunct(31,greater_equal(32,identifier(33,averageGrade),integer(34,2)),less(35,identifier(36,averageGrade),integer(37,4))),assign(38,[identifier(39,result)],[identifier(40,final)]))],assign(41,[identifier(42,result)],[identifier(43,fail)]))))])]))]),start_animation,true.

2014-09-22 14:15:44,413 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes([])
2014-09-22 14:15:44,413 4586 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Connected: 127.0.0.1
2014-09-22 14:15:44,413 4586 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - loading_classical_b(parser_version(2013-04-30 11:58:52.139),PassFinalOrFailIFELSIFELSE,[/Users/ernestocid/dev/beta/br.ufrn.forall.logicalcoverageexperiments/src/test/resources/machines/PassFinalOrFailIFELSIFELSE.mch])
2014-09-22 14:15:44,413 4586 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:44,414 4587 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:44,415 4588 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(root,APLOps),evaluate_registered_formulas(root,[],BResults),state_property(initialised,root,CPropResult),state_property(invariantKO,root,DPropResult),state_property(max_operations_reached,root,EPropResult),state_property(timeout_occurred,root,FPropResult),op_timeout_occurred(root,GTO),get_state_errors(root,HErrors),true.

2014-09-22 14:15:44,428 4601 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(0,root,0),[])),'.'(=('BResults',[]),'.'(=('CPropResult',false),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:44,430 4603 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:44,431 4604 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:44,433 4606 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - prob2_execute_custom_operations(root,'$initialise_machine',equal(none,boolean_true(none),boolean_true(none)),1,NewStateID,Errors),true.

2014-09-22 14:15:44,451 4624 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('NewStateID','.'(op(0,root,0),[])),'.'(=('Errors',[]),[])))
2014-09-22 14:15:44,451 4624 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - check_additional_guard
2014-09-22 14:15:44,451 4624 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - /* truth */ TRUE = TRUE
2014-09-22 14:15:44,451 4624 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - checked
2014-09-22 14:15:44,452 4625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:44,452 4625 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:44,453 4626 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - compute_operations_for_state(0,APLOps),evaluate_registered_formulas(0,[],BResults),state_property(initialised,0,CPropResult),state_property(invariantKO,0,DPropResult),state_property(max_operations_reached,0,EPropResult),state_property(timeout_occurred,0,FPropResult),op_timeout_occurred(0,GTO),get_state_errors(0,HErrors),true.

2014-09-22 14:15:44,552 4725 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('APLOps','.'(op(1,0,0),'.'(op(2,0,0),'.'(op(3,0,0),'.'(op(4,0,0),'.'(op(5,0,0),'.'(op(6,0,0),[]))))))),'.'(=('BResults',[]),'.'(=('CPropResult',true),'.'(=('DPropResult',false),'.'(=('EPropResult',false),'.'(=('FPropResult',false),'.'(=('GTO',[]),'.'(=('HErrors',[]),[])))))))))
2014-09-22 14:15:44,555 4728 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:44,557 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:44,557 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - ALL OPERATIONS COVERED
2014-09-22 14:15:44,557 4730 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:44,558 4731 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
2014-09-22 14:15:44,564 4737 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - evaluate_formula(0,eval(conjunct(none,member(none,identifier(none,averageGrade),interval(none,integer(none,0),integer(none,5))),member(none,identifier(none,averageGrade),int_set(none))),'#PREDICATE','averageGrade : 0..5 & averageGrade : INT'),ARes),true.

2014-09-22 14:15:44,576 4749 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('ARes',result('TRUE','.'(bind(averageGrade,int(0),'0'),[]),'averageGrade : 0..5 & averageGrade : INT')),[]))
2014-09-22 14:15:44,577 4750 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 65 - get_error_messages(Errors),true.

2014-09-22 14:15:44,578 4751 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Existentially Quantified Predicate over averageGrade is TRUE
2014-09-22 14:15:44,578 4751 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - Solution: 
2014-09-22 14:15:44,578 4751 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 -        averageGrade = 0
2014-09-22 14:15:44,578 4751 [Thread-5] DEBUG de.prob.cli.ProBInstance Method:
				readAndLog Line: 54 - 
2014-09-22 14:15:44,578 4751 [main] INFO  de.prob.cli.ProBConnection Method:
				send Line: 78 - yes('.'(=('Errors',[]),[]))
